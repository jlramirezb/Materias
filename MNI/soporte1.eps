%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: domingo 14 de marzo de 2010 08:01:12 PM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
41.0000 6.00859 340.477 346.991 rc
newpath
42.0000 8.00860 m
379.477 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
358.385 352.000 m
358.385 354.600 l
S
newpath
316.200 352.000 m
316.200 354.600 l
S
newpath
274.015 352.000 m
274.015 354.600 l
S
newpath
231.831 352.000 m
231.831 354.600 l
S
newpath
189.646 352.000 m
189.646 354.600 l
S
newpath
147.461 352.000 m
147.461 354.600 l
S
newpath
105.277 352.000 m
105.277 354.600 l
S
newpath
63.0923 352.000 m
63.0923 354.600 l
S
newpath
39.0000 352.000 m
379.477 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
161 375 15 15 rc
newpath
168.375 384.500 m
167.593 382.750 l
167.281 382.109 l
167.166 381.859 167.072 381.703 167.000 381.640  c
166.927 381.578 166.786 381.541 166.578 381.531  c
166.203 381.500 l
166.078 381.500 l
166.156 381.109 l
168.218 381.109 l
169.468 383.812 l
169.765 383.578 l
170.588 382.911 171.000 382.354 171.000 381.906  c
171.000 381.677 170.906 381.411 170.718 381.109  c
171.968 381.109 l
172.020 381.255 172.046 381.385 172.046 381.500  c
172.046 381.864 171.916 382.195 171.656 382.492  c
171.395 382.789 170.822 383.270 169.937 383.937  c
169.625 384.171 l
170.671 386.359 l
171.062 387.062 l
171.218 387.385 171.432 387.557 171.703 387.578  c
172.109 387.593 l
172.218 387.609 l
172.140 388.000 l
170.062 388.000 l
168.578 384.859 l
168.031 385.343 l
167.166 386.125 166.734 386.796 166.734 387.359  c
166.734 387.578 166.807 387.791 166.953 388.000  c
165.609 388.000 l
165.588 387.885 165.578 387.796 165.578 387.734  c
165.578 387.192 165.974 386.572 166.765 385.875  c
167.750 385.046 l
168.375 384.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
42.0000 352.000 m
42.0000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.9062 377.234 m
40.9375 377.234 40.1562 376.783 39.5625 375.882  c
38.9687 374.981 38.6718 373.796 38.6718 372.328  c
38.6718 370.817 38.9687 369.614 39.5625 368.718  c
40.1562 367.822 40.9531 367.375 41.9531 367.375  c
42.9531 367.375 43.7526 367.822 44.3515 368.718  c
44.9505 369.614 45.2500 370.812 45.2500 372.312  c
45.2500 373.822 44.9505 375.020 44.3515 375.906  c
43.7526 376.791 42.9375 377.234 41.9062 377.234  c
h
41.9218 376.843 m
43.2552 376.906 43.9218 375.369 43.9218 372.234  c
43.9218 369.244 43.2656 367.750 41.9531 367.750  c
40.6510 367.750 40.0000 369.265 40.0000 372.296  c
40.0000 375.265 40.6406 376.781 41.9218 376.843  c
h
47.4716 377.000 m
46.8466 377.000 l
46.8466 375.437 l
48.4091 375.437 l
48.4091 376.796 l
48.4091 377.338 48.3805 377.708 48.3232 377.906  c
48.2659 378.104 48.1279 378.317 47.9091 378.546  c
47.6175 378.849 47.2633 379.010 46.8466 379.031  c
46.8466 378.640 l
47.2633 378.609 47.4716 378.197 47.4716 377.406  c
47.4716 377.000 l
h
50.3715 377.000 m
50.3715 376.375 l
50.7361 375.322 51.2986 374.437 52.0590 373.718  c
52.7465 373.093 l
53.5174 372.364 54.0330 371.786 54.2934 371.359  c
54.5538 370.932 54.6840 370.442 54.6840 369.890  c
54.6840 369.244 54.5252 368.729 54.2075 368.343  c
53.8898 367.958 53.4705 367.765 52.9497 367.765  c
52.3767 367.765 51.8924 367.921 51.4965 368.234  c
51.3507 368.349 51.2570 368.770 51.2153 369.500  c
51.2153 369.656 l
50.5747 369.656 l
50.5747 367.937 l
51.4913 367.552 52.3351 367.359 53.1059 367.359  c
53.9497 367.359 54.6450 367.599 55.1918 368.078  c
55.7387 368.557 56.0122 369.161 56.0122 369.890  c
56.0122 370.880 55.3976 371.796 54.1684 372.640  c
53.4028 373.171 l
52.1840 374.005 51.5174 374.916 51.4028 375.906  c
55.9653 375.906 l
55.9653 377.000 l
50.3715 377.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.1846 352.000 m
84.1846 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
83.9062 377.234 m
82.9375 377.234 82.1562 376.783 81.5625 375.882  c
80.9687 374.981 80.6718 373.796 80.6718 372.328  c
80.6718 370.817 80.9687 369.614 81.5625 368.718  c
82.1562 367.822 82.9531 367.375 83.9531 367.375  c
84.9531 367.375 85.7526 367.822 86.3515 368.718  c
86.9505 369.614 87.2500 370.812 87.2500 372.312  c
87.2500 373.822 86.9505 375.020 86.3515 375.906  c
85.7526 376.791 84.9375 377.234 83.9062 377.234  c
h
83.9218 376.843 m
85.2552 376.906 85.9218 375.369 85.9218 372.234  c
85.9218 369.244 85.2656 367.750 83.9531 367.750  c
82.6510 367.750 82.0000 369.265 82.0000 372.296  c
82.0000 375.265 82.6406 376.781 83.9218 376.843  c
h
89.4716 377.000 m
88.8466 377.000 l
88.8466 375.437 l
90.4091 375.437 l
90.4091 376.796 l
90.4091 377.338 90.3805 377.708 90.3232 377.906  c
90.2659 378.104 90.1279 378.317 89.9091 378.546  c
89.6175 378.849 89.2633 379.010 88.8466 379.031  c
88.8466 378.640 l
89.2633 378.609 89.4716 378.197 89.4716 377.406  c
89.4716 377.000 l
h
92.5278 376.937 m
92.5278 375.281 l
93.1528 375.281 l
93.1684 375.421 l
93.1840 375.859 l
93.1840 376.130 93.3429 376.362 93.6606 376.554  c
93.9783 376.747 94.3715 376.843 94.8403 376.843  c
95.3924 376.843 95.8377 376.625 96.1762 376.187  c
96.5148 375.750 96.6840 375.171 96.6840 374.453  c
96.6840 373.744 96.4627 373.190 96.0200 372.789  c
95.5773 372.388 94.9601 372.187 94.1684 372.187  c
93.3872 372.187 l
93.3872 371.796 l
93.8090 371.796 l
95.5799 371.796 96.4653 371.083 96.4653 369.656  c
96.4653 368.385 95.9080 367.750 94.7934 367.750  c
94.3038 367.750 93.8767 367.854 93.5122 368.062  c
93.3767 368.145 93.2830 368.484 93.2309 369.078  c
93.2309 369.171 l
92.6059 369.171 l
92.6059 367.734 l
93.2830 367.484 94.0486 367.359 94.9028 367.359  c
95.7674 367.359 96.4523 367.554 96.9575 367.945  c
97.4627 368.335 97.7153 368.864 97.7153 369.531  c
97.7153 370.645 97.0590 371.442 95.7465 371.921  c
96.5486 372.130 97.1241 372.427 97.4731 372.812  c
97.8221 373.197 97.9965 373.734 97.9965 374.421  c
97.9965 375.286 97.7153 375.971 97.1528 376.476  c
96.5903 376.981 95.8247 377.234 94.8559 377.234  c
93.9705 377.234 93.1945 377.135 92.5278 376.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
126.369 352.000 m
126.369 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
125.906 377.234 m
124.937 377.234 124.156 376.783 123.562 375.882  c
122.968 374.981 122.671 373.796 122.671 372.328  c
122.671 370.817 122.968 369.614 123.562 368.718  c
124.156 367.822 124.953 367.375 125.953 367.375  c
126.953 367.375 127.752 367.822 128.351 368.718  c
128.950 369.614 129.250 370.812 129.250 372.312  c
129.250 373.822 128.950 375.020 128.351 375.906  c
127.752 376.791 126.937 377.234 125.906 377.234  c
h
125.921 376.843 m
127.255 376.906 127.921 375.369 127.921 372.234  c
127.921 369.244 127.265 367.750 125.953 367.750  c
124.651 367.750 124.000 369.265 124.000 372.296  c
124.000 375.265 124.640 376.781 125.921 376.843  c
h
131.471 377.000 m
130.846 377.000 l
130.846 375.437 l
132.409 375.437 l
132.409 376.796 l
132.409 377.338 132.380 377.708 132.323 377.906  c
132.266 378.104 132.127 378.317 131.909 378.546  c
131.617 378.849 131.263 379.010 130.846 379.031  c
130.846 378.640 l
131.263 378.609 131.471 378.197 131.471 377.406  c
131.471 377.000 l
h
138.059 374.343 m
133.746 374.343 l
133.746 373.718 l
138.449 367.453 l
139.152 367.453 l
139.152 373.390 l
140.402 373.390 l
140.402 374.343 l
139.152 374.343 l
139.152 375.359 l
139.152 375.859 139.191 376.182 139.270 376.328  c
139.348 376.474 139.517 376.552 139.777 376.562  c
140.215 376.593 l
140.324 376.609 l
140.324 377.000 l
136.731 377.000 l
136.731 376.609 l
136.840 376.593 l
137.496 376.562 l
137.725 376.552 137.876 376.468 137.949 376.312  c
138.022 376.156 138.059 375.838 138.059 375.359  c
138.059 374.343 l
h
134.449 373.390 m
138.059 373.390 l
138.059 368.609 l
134.449 373.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
168.554 352.000 m
168.554 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
167.906 377.234 m
166.937 377.234 166.156 376.783 165.562 375.882  c
164.968 374.981 164.671 373.796 164.671 372.328  c
164.671 370.817 164.968 369.614 165.562 368.718  c
166.156 367.822 166.953 367.375 167.953 367.375  c
168.953 367.375 169.752 367.822 170.351 368.718  c
170.950 369.614 171.250 370.812 171.250 372.312  c
171.250 373.822 170.950 375.020 170.351 375.906  c
169.752 376.791 168.937 377.234 167.906 377.234  c
h
167.921 376.843 m
169.255 376.906 169.921 375.369 169.921 372.234  c
169.921 369.244 169.265 367.750 167.953 367.750  c
166.651 367.750 166.000 369.265 166.000 372.296  c
166.000 375.265 166.640 376.781 167.921 376.843  c
h
173.471 377.000 m
172.846 377.000 l
172.846 375.437 l
174.409 375.437 l
174.409 376.796 l
174.409 377.338 174.380 377.708 174.323 377.906  c
174.266 378.104 174.127 378.317 173.909 378.546  c
173.617 378.849 173.263 379.010 172.846 379.031  c
172.846 378.640 l
173.263 378.609 173.471 378.197 173.471 377.406  c
173.471 377.000 l
h
176.840 377.015 m
176.840 375.437 l
177.465 375.437 l
177.481 375.578 l
177.496 376.062 l
177.517 376.583 177.923 376.843 178.715 376.843  c
179.298 376.843 179.762 376.614 180.106 376.156  c
180.449 375.697 180.621 375.078 180.621 374.296  c
180.621 373.401 180.356 372.760 179.824 372.375  c
179.293 371.989 178.423 371.796 177.215 371.796  c
176.996 371.796 l
176.996 367.609 l
181.731 367.609 l
181.731 368.703 l
177.387 368.703 l
177.387 371.328 l
177.965 371.328 l
180.611 371.328 181.934 372.333 181.934 374.343  c
181.934 375.250 181.629 375.958 181.020 376.468  c
180.410 376.979 179.569 377.234 178.496 377.234  c
177.965 377.234 177.413 377.161 176.840 377.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
210.738 352.000 m
210.738 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
209.906 377.234 m
208.937 377.234 208.156 376.783 207.562 375.882  c
206.968 374.981 206.671 373.796 206.671 372.328  c
206.671 370.817 206.968 369.614 207.562 368.718  c
208.156 367.822 208.953 367.375 209.953 367.375  c
210.953 367.375 211.752 367.822 212.351 368.718  c
212.950 369.614 213.250 370.812 213.250 372.312  c
213.250 373.822 212.950 375.020 212.351 375.906  c
211.752 376.791 210.937 377.234 209.906 377.234  c
h
209.921 376.843 m
211.255 376.906 211.921 375.369 211.921 372.234  c
211.921 369.244 211.265 367.750 209.953 367.750  c
208.651 367.750 208.000 369.265 208.000 372.296  c
208.000 375.265 208.640 376.781 209.921 376.843  c
h
215.471 377.000 m
214.846 377.000 l
214.846 375.437 l
216.409 375.437 l
216.409 376.796 l
216.409 377.338 216.380 377.708 216.323 377.906  c
216.266 378.104 216.127 378.317 215.909 378.546  c
215.617 378.849 215.263 379.010 214.846 379.031  c
214.846 378.640 l
215.263 378.609 215.471 378.197 215.471 377.406  c
215.471 377.000 l
h
219.465 372.187 m
220.059 371.375 220.814 370.968 221.731 370.968  c
222.553 370.968 223.225 371.242 223.746 371.789  c
224.267 372.335 224.527 373.046 224.527 373.921  c
224.527 374.859 224.231 375.645 223.637 376.281  c
223.043 376.916 222.314 377.234 221.449 377.234  c
220.387 377.234 219.569 376.820 218.996 375.992  c
218.423 375.164 218.137 373.984 218.137 372.453  c
218.137 370.838 218.467 369.585 219.129 368.695  c
219.790 367.804 220.725 367.359 221.934 367.359  c
222.715 367.359 223.402 367.500 223.996 367.781  c
223.996 369.281 l
223.371 369.281 l
223.356 369.156 l
223.324 368.703 l
223.303 368.421 223.152 368.192 222.871 368.015  c
222.590 367.838 222.236 367.750 221.809 367.750  c
221.069 367.750 220.494 368.138 220.082 368.914  c
219.671 369.690 219.465 370.781 219.465 372.187  c
h
219.512 373.531 m
219.512 374.500 219.707 375.291 220.098 375.906  c
220.488 376.520 220.991 376.828 221.606 376.828  c
222.710 376.828 223.262 375.916 223.262 374.093  c
223.262 372.302 222.689 371.406 221.543 371.406  c
220.918 371.406 220.423 371.599 220.059 371.984  c
219.694 372.369 219.512 372.885 219.512 373.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
252.923 352.000 m
252.923 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
251.906 377.234 m
250.937 377.234 250.156 376.783 249.562 375.882  c
248.968 374.981 248.671 373.796 248.671 372.328  c
248.671 370.817 248.968 369.614 249.562 368.718  c
250.156 367.822 250.953 367.375 251.953 367.375  c
252.953 367.375 253.752 367.822 254.351 368.718  c
254.950 369.614 255.250 370.812 255.250 372.312  c
255.250 373.822 254.950 375.020 254.351 375.906  c
253.752 376.791 252.937 377.234 251.906 377.234  c
h
251.921 376.843 m
253.255 376.906 253.921 375.369 253.921 372.234  c
253.921 369.244 253.265 367.750 251.953 367.750  c
250.651 367.750 250.000 369.265 250.000 372.296  c
250.000 375.265 250.640 376.781 251.921 376.843  c
h
257.471 377.000 m
256.846 377.000 l
256.846 375.437 l
258.409 375.437 l
258.409 376.796 l
258.409 377.338 258.380 377.708 258.323 377.906  c
258.266 378.104 258.127 378.317 257.909 378.546  c
257.617 378.849 257.263 379.010 256.846 379.031  c
256.846 378.640 l
257.263 378.609 257.471 378.197 257.471 377.406  c
257.471 377.000 l
h
261.137 377.000 m
261.324 375.979 261.626 375.091 262.043 374.335  c
262.460 373.580 263.449 372.151 265.012 370.046  c
265.965 368.781 l
260.668 368.781 l
260.668 367.609 l
266.699 367.609 l
266.699 368.421 l
264.126 371.880 262.767 374.739 262.621 377.000  c
261.137 377.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
295.108 352.000 m
295.108 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
294.906 377.234 m
293.937 377.234 293.156 376.783 292.562 375.882  c
291.968 374.981 291.671 373.796 291.671 372.328  c
291.671 370.817 291.968 369.614 292.562 368.718  c
293.156 367.822 293.953 367.375 294.953 367.375  c
295.953 367.375 296.752 367.822 297.351 368.718  c
297.950 369.614 298.250 370.812 298.250 372.312  c
298.250 373.822 297.950 375.020 297.351 375.906  c
296.752 376.791 295.937 377.234 294.906 377.234  c
h
294.921 376.843 m
296.255 376.906 296.921 375.369 296.921 372.234  c
296.921 369.244 296.265 367.750 294.953 367.750  c
293.651 367.750 293.000 369.265 293.000 372.296  c
293.000 375.265 293.640 376.781 294.921 376.843  c
h
300.471 377.000 m
299.846 377.000 l
299.846 375.437 l
301.409 375.437 l
301.409 376.796 l
301.409 377.338 301.380 377.708 301.323 377.906  c
301.266 378.104 301.127 378.317 300.909 378.546  c
300.617 378.849 300.263 379.010 299.846 379.031  c
299.846 378.640 l
300.263 378.609 300.471 378.197 300.471 377.406  c
300.471 377.000 l
h
305.074 371.937 m
304.106 371.270 303.621 370.541 303.621 369.750  c
303.621 369.041 303.879 368.466 304.395 368.023  c
304.910 367.580 305.585 367.359 306.418 367.359  c
307.210 367.359 307.842 367.546 308.316 367.921  c
308.790 368.296 309.027 368.796 309.027 369.421  c
309.027 370.390 308.408 371.187 307.168 371.812  c
308.668 372.447 309.418 373.364 309.418 374.562  c
309.418 375.354 309.121 375.997 308.527 376.492  c
307.934 376.987 307.168 377.234 306.231 377.234  c
305.314 377.234 304.572 377.002 304.004 376.539  c
303.436 376.075 303.152 375.468 303.152 374.718  c
303.152 373.458 303.793 372.531 305.074 371.937  c
h
306.824 371.609 m
307.564 371.067 307.934 370.349 307.934 369.453  c
307.934 368.942 307.783 368.531 307.481 368.218  c
307.178 367.906 306.783 367.750 306.293 367.750  c
305.856 367.750 305.483 367.903 305.176 368.210  c
304.869 368.518 304.715 368.895 304.715 369.343  c
304.715 369.781 304.856 370.148 305.137 370.445  c
305.418 370.742 305.981 371.130 306.824 371.609  c
h
305.356 372.218 m
304.720 372.802 304.402 373.583 304.402 374.562  c
304.402 375.260 304.574 375.815 304.918 376.226  c
305.262 376.638 305.720 376.843 306.293 376.843  c
306.835 376.843 307.283 376.661 307.637 376.296  c
307.991 375.932 308.168 375.474 308.168 374.921  c
308.168 374.463 308.033 374.080 307.762 373.773  c
307.491 373.466 306.986 373.109 306.246 372.703  c
305.356 372.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
337.292 352.000 m
337.292 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
336.906 377.234 m
335.937 377.234 335.156 376.783 334.562 375.882  c
333.968 374.981 333.671 373.796 333.671 372.328  c
333.671 370.817 333.968 369.614 334.562 368.718  c
335.156 367.822 335.953 367.375 336.953 367.375  c
337.953 367.375 338.752 367.822 339.351 368.718  c
339.950 369.614 340.250 370.812 340.250 372.312  c
340.250 373.822 339.950 375.020 339.351 375.906  c
338.752 376.791 337.937 377.234 336.906 377.234  c
h
336.921 376.843 m
338.255 376.906 338.921 375.369 338.921 372.234  c
338.921 369.244 338.265 367.750 336.953 367.750  c
335.651 367.750 335.000 369.265 335.000 372.296  c
335.000 375.265 335.640 376.781 336.921 376.843  c
h
342.471 377.000 m
341.846 377.000 l
341.846 375.437 l
343.409 375.437 l
343.409 376.796 l
343.409 377.338 343.380 377.708 343.323 377.906  c
343.266 378.104 343.127 378.317 342.909 378.546  c
342.617 378.849 342.263 379.010 341.846 379.031  c
341.846 378.640 l
342.263 378.609 342.471 378.197 342.471 377.406  c
342.471 377.000 l
h
350.152 372.406 m
349.559 373.229 348.803 373.640 347.887 373.640  c
347.064 373.640 346.395 373.364 345.879 372.812  c
345.363 372.260 345.106 371.552 345.106 370.687  c
345.106 369.750 345.397 368.960 345.981 368.320  c
346.564 367.679 347.293 367.359 348.168 367.359  c
349.231 367.359 350.048 367.776 350.621 368.609  c
351.194 369.442 351.481 370.625 351.481 372.156  c
351.481 373.770 351.150 375.020 350.488 375.906  c
349.827 376.791 348.897 377.234 347.699 377.234  c
346.918 377.234 346.225 377.093 345.621 376.812  c
345.621 375.312 l
346.246 375.312 l
346.262 375.453 l
346.293 375.906 l
346.314 376.187 346.465 376.414 346.746 376.585  c
347.027 376.757 347.382 376.843 347.809 376.843  c
348.548 376.843 349.124 376.455 349.535 375.679  c
349.947 374.903 350.152 373.812 350.152 372.406  c
h
350.106 371.062 m
350.106 370.093 349.910 369.302 349.520 368.687  c
349.129 368.072 348.626 367.765 348.012 367.765  c
346.908 367.765 346.356 368.682 346.356 370.515  c
346.356 372.296 346.928 373.187 348.074 373.187  c
348.699 373.187 349.194 372.994 349.559 372.609  c
349.923 372.224 350.106 371.708 350.106 371.062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.477 352.000 m
379.477 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
379.578 367.515 m
379.578 375.359 l
379.625 375.984 l
379.635 376.234 379.705 376.398 379.835 376.476  c
379.966 376.554 380.234 376.593 380.640 376.593  c
381.390 376.609 l
381.390 377.000 l
376.531 377.000 l
376.531 376.609 l
377.265 376.593 l
377.671 376.593 377.940 376.554 378.070 376.476  c
378.200 376.398 378.276 376.234 378.296 375.984  c
378.328 375.359 l
378.328 369.531 l
378.296 368.890 l
378.296 368.588 378.208 368.437 378.031 368.437  c
377.906 368.437 377.614 368.479 377.156 368.562  c
376.531 368.671 l
376.531 368.281 l
379.578 367.515 l
h
384.471 377.000 m
383.846 377.000 l
383.846 375.437 l
385.409 375.437 l
385.409 376.796 l
385.409 377.338 385.380 377.708 385.323 377.906  c
385.266 378.104 385.127 378.317 384.909 378.546  c
384.617 378.849 384.263 379.010 383.846 379.031  c
383.846 378.640 l
384.263 378.609 384.471 378.197 384.471 377.406  c
384.471 377.000 l
h
390.262 377.234 m
389.293 377.234 388.512 376.783 387.918 375.882  c
387.324 374.981 387.027 373.796 387.027 372.328  c
387.027 370.817 387.324 369.614 387.918 368.718  c
388.512 367.822 389.309 367.375 390.309 367.375  c
391.309 367.375 392.108 367.822 392.707 368.718  c
393.306 369.614 393.606 370.812 393.606 372.312  c
393.606 373.822 393.306 375.020 392.707 375.906  c
392.108 376.791 391.293 377.234 390.262 377.234  c
h
390.277 376.843 m
391.611 376.906 392.277 375.369 392.277 372.234  c
392.277 369.244 391.621 367.750 390.309 367.750  c
389.007 367.750 388.356 369.265 388.356 372.296  c
388.356 375.265 388.996 376.781 390.277 376.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
39.0000 42.4077 m
36.4000 42.4077 l
S
newpath
39.0000 111.206 m
36.4000 111.206 l
S
newpath
39.0000 180.004 m
36.4000 180.004 l
S
newpath
39.0000 248.802 m
36.4000 248.802 l
S
newpath
39.0000 317.600 m
36.4000 317.600 l
S
newpath
39.0000 352.000 m
39.0000 8.00860 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
39.0000 352.000 m
33.8000 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.9062 363.234 m
32.9375 363.234 32.1562 362.783 31.5625 361.882  c
30.9687 360.981 30.6718 359.796 30.6718 358.328  c
30.6718 356.817 30.9687 355.614 31.5625 354.718  c
32.1562 353.822 32.9531 353.375 33.9531 353.375  c
34.9531 353.375 35.7526 353.822 36.3515 354.718  c
36.9505 355.614 37.2500 356.812 37.2500 358.312  c
37.2500 359.822 36.9505 361.020 36.3515 361.906  c
35.7526 362.791 34.9375 363.234 33.9062 363.234  c
h
33.9218 362.843 m
35.2552 362.906 35.9218 361.369 35.9218 358.234  c
35.9218 355.244 35.2656 353.750 33.9531 353.750  c
32.6510 353.750 32.0000 355.265 32.0000 358.296  c
32.0000 361.265 32.6406 362.781 33.9218 362.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
39.0000 283.201 m
33.8000 283.201 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 294.234 m
21.9375 294.234 21.1562 293.783 20.5625 292.882  c
19.9687 291.981 19.6718 290.796 19.6718 289.328  c
19.6718 287.817 19.9687 286.614 20.5625 285.718  c
21.1562 284.822 21.9531 284.375 22.9531 284.375  c
23.9531 284.375 24.7526 284.822 25.3515 285.718  c
25.9505 286.614 26.2500 287.812 26.2500 289.312  c
26.2500 290.822 25.9505 292.020 25.3515 292.906  c
24.7526 293.791 23.9375 294.234 22.9062 294.234  c
h
22.9218 293.843 m
24.2552 293.906 24.9218 292.369 24.9218 289.234  c
24.9218 286.244 24.2656 284.750 22.9531 284.750  c
21.6510 284.750 21.0000 286.265 21.0000 289.296  c
21.0000 292.265 21.6406 293.781 22.9218 293.843  c
h
28.4716 294.000 m
27.8466 294.000 l
27.8466 292.437 l
29.4091 292.437 l
29.4091 293.796 l
29.4091 294.338 29.3805 294.708 29.3232 294.906  c
29.2659 295.104 29.1279 295.317 28.9091 295.546  c
28.6175 295.849 28.2633 296.010 27.8466 296.031  c
27.8466 295.640 l
28.2633 295.609 28.4716 295.197 28.4716 294.406  c
28.4716 294.000 l
h
31.3715 294.000 m
31.3715 293.375 l
31.7361 292.322 32.2986 291.437 33.0590 290.718  c
33.7465 290.093 l
34.5174 289.364 35.0330 288.786 35.2934 288.359  c
35.5538 287.932 35.6840 287.442 35.6840 286.890  c
35.6840 286.244 35.5252 285.729 35.2075 285.343  c
34.8898 284.958 34.4705 284.765 33.9497 284.765  c
33.3767 284.765 32.8924 284.921 32.4965 285.234  c
32.3507 285.349 32.2570 285.770 32.2153 286.500  c
32.2153 286.656 l
31.5747 286.656 l
31.5747 284.937 l
32.4913 284.552 33.3351 284.359 34.1059 284.359  c
34.9497 284.359 35.6450 284.599 36.1918 285.078  c
36.7387 285.557 37.0122 286.161 37.0122 286.890  c
37.0122 287.880 36.3976 288.796 35.1684 289.640  c
34.4028 290.171 l
33.1840 291.005 32.5174 291.916 32.4028 292.906  c
36.9653 292.906 l
36.9653 294.000 l
31.3715 294.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
39.0000 214.403 m
33.8000 214.403 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 225.234 m
21.9375 225.234 21.1562 224.783 20.5625 223.882  c
19.9687 222.981 19.6718 221.796 19.6718 220.328  c
19.6718 218.817 19.9687 217.614 20.5625 216.718  c
21.1562 215.822 21.9531 215.375 22.9531 215.375  c
23.9531 215.375 24.7526 215.822 25.3515 216.718  c
25.9505 217.614 26.2500 218.812 26.2500 220.312  c
26.2500 221.822 25.9505 223.020 25.3515 223.906  c
24.7526 224.791 23.9375 225.234 22.9062 225.234  c
h
22.9218 224.843 m
24.2552 224.906 24.9218 223.369 24.9218 220.234  c
24.9218 217.244 24.2656 215.750 22.9531 215.750  c
21.6510 215.750 21.0000 217.265 21.0000 220.296  c
21.0000 223.265 21.6406 224.781 22.9218 224.843  c
h
28.4716 225.000 m
27.8466 225.000 l
27.8466 223.437 l
29.4091 223.437 l
29.4091 224.796 l
29.4091 225.338 29.3805 225.708 29.3232 225.906  c
29.2659 226.104 29.1279 226.317 28.9091 226.546  c
28.6175 226.849 28.2633 227.010 27.8466 227.031  c
27.8466 226.640 l
28.2633 226.609 28.4716 226.197 28.4716 225.406  c
28.4716 225.000 l
h
35.0590 222.343 m
30.7465 222.343 l
30.7465 221.718 l
35.4497 215.453 l
36.1528 215.453 l
36.1528 221.390 l
37.4028 221.390 l
37.4028 222.343 l
36.1528 222.343 l
36.1528 223.359 l
36.1528 223.859 36.1918 224.182 36.2700 224.328  c
36.3481 224.474 36.5174 224.552 36.7778 224.562  c
37.2153 224.593 l
37.3247 224.609 l
37.3247 225.000 l
33.7309 225.000 l
33.7309 224.609 l
33.8403 224.593 l
34.4965 224.562 l
34.7257 224.552 34.8767 224.468 34.9497 224.312  c
35.0226 224.156 35.0590 223.838 35.0590 223.359  c
35.0590 222.343 l
h
31.4497 221.390 m
35.0590 221.390 l
35.0590 216.609 l
31.4497 221.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
39.0000 145.605 m
33.8000 145.605 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 156.234 m
21.9375 156.234 21.1562 155.783 20.5625 154.882  c
19.9687 153.981 19.6718 152.796 19.6718 151.328  c
19.6718 149.817 19.9687 148.614 20.5625 147.718  c
21.1562 146.822 21.9531 146.375 22.9531 146.375  c
23.9531 146.375 24.7526 146.822 25.3515 147.718  c
25.9505 148.614 26.2500 149.812 26.2500 151.312  c
26.2500 152.822 25.9505 154.020 25.3515 154.906  c
24.7526 155.791 23.9375 156.234 22.9062 156.234  c
h
22.9218 155.843 m
24.2552 155.906 24.9218 154.369 24.9218 151.234  c
24.9218 148.244 24.2656 146.750 22.9531 146.750  c
21.6510 146.750 21.0000 148.265 21.0000 151.296  c
21.0000 154.265 21.6406 155.781 22.9218 155.843  c
h
28.4716 156.000 m
27.8466 156.000 l
27.8466 154.437 l
29.4091 154.437 l
29.4091 155.796 l
29.4091 156.338 29.3805 156.708 29.3232 156.906  c
29.2659 157.104 29.1279 157.317 28.9091 157.546  c
28.6175 157.849 28.2633 158.010 27.8466 158.031  c
27.8466 157.640 l
28.2633 157.609 28.4716 157.197 28.4716 156.406  c
28.4716 156.000 l
h
32.4653 151.187 m
33.0590 150.375 33.8142 149.968 34.7309 149.968  c
35.5538 149.968 36.2257 150.242 36.7465 150.789  c
37.2674 151.335 37.5278 152.046 37.5278 152.921  c
37.5278 153.859 37.2309 154.645 36.6372 155.281  c
36.0434 155.916 35.3142 156.234 34.4497 156.234  c
33.3872 156.234 32.5695 155.820 31.9965 154.992  c
31.4236 154.164 31.1372 152.984 31.1372 151.453  c
31.1372 149.838 31.4679 148.585 32.1293 147.695  c
32.7908 146.804 33.7257 146.359 34.9340 146.359  c
35.7153 146.359 36.4028 146.500 36.9965 146.781  c
36.9965 148.281 l
36.3715 148.281 l
36.3559 148.156 l
36.3247 147.703 l
36.3038 147.421 36.1528 147.192 35.8715 147.015  c
35.5903 146.838 35.2361 146.750 34.8090 146.750  c
34.0695 146.750 33.4939 147.138 33.0825 147.914  c
32.6710 148.690 32.4653 149.781 32.4653 151.187  c
h
32.5122 152.531 m
32.5122 153.500 32.7075 154.291 33.0981 154.906  c
33.4887 155.520 33.9913 155.828 34.6059 155.828  c
35.7101 155.828 36.2622 154.916 36.2622 153.093  c
36.2622 151.302 35.6892 150.406 34.5434 150.406  c
33.9184 150.406 33.4236 150.599 33.0590 150.984  c
32.6945 151.369 32.5122 151.885 32.5122 152.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
39.0000 76.8068 m
33.8000 76.8068 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 87.2343 m
21.9375 87.2343 21.1562 86.7838 20.5625 85.8828  c
19.9687 84.9817 19.6718 83.7968 19.6718 82.3281  c
19.6718 80.8177 19.9687 79.6145 20.5625 78.7187  c
21.1562 77.8229 21.9531 77.3750 22.9531 77.3750  c
23.9531 77.3750 24.7526 77.8229 25.3515 78.7187  c
25.9505 79.6145 26.2500 80.8125 26.2500 82.3125  c
26.2500 83.8229 25.9505 85.0208 25.3515 85.9062  c
24.7526 86.7916 23.9375 87.2343 22.9062 87.2343  c
h
22.9218 86.8437 m
24.2552 86.9062 24.9218 85.3697 24.9218 82.2343  c
24.9218 79.2447 24.2656 77.7500 22.9531 77.7500  c
21.6510 77.7500 21.0000 79.2656 21.0000 82.2968  c
21.0000 85.2656 21.6406 86.7812 22.9218 86.8437  c
h
28.4716 87.0000 m
27.8466 87.0000 l
27.8466 85.4375 l
29.4091 85.4375 l
29.4091 86.7968 l
29.4091 87.3385 29.3805 87.7083 29.3232 87.9062  c
29.2659 88.1041 29.1279 88.3177 28.9091 88.5468  c
28.6175 88.8489 28.2633 89.0104 27.8466 89.0312  c
27.8466 88.6406 l
28.2633 88.6093 28.4716 88.1979 28.4716 87.4062  c
28.4716 87.0000 l
h
33.0747 81.9375 m
32.1059 81.2708 31.6215 80.5416 31.6215 79.7500  c
31.6215 79.0416 31.8793 78.4661 32.3950 78.0234  c
32.9106 77.5807 33.5851 77.3593 34.4184 77.3593  c
35.2101 77.3593 35.8429 77.5468 36.3168 77.9218  c
36.7908 78.2968 37.0278 78.7968 37.0278 79.4218  c
37.0278 80.3906 36.4080 81.1875 35.1684 81.8125  c
36.6684 82.4479 37.4184 83.3645 37.4184 84.5625  c
37.4184 85.3541 37.1215 85.9974 36.5278 86.4921  c
35.9340 86.9869 35.1684 87.2343 34.2309 87.2343  c
33.3142 87.2343 32.5721 87.0026 32.0043 86.5390  c
31.4366 86.0755 31.1528 85.4687 31.1528 84.7187  c
31.1528 83.4583 31.7934 82.5312 33.0747 81.9375  c
h
34.8247 81.6093 m
35.5642 81.0677 35.9340 80.3489 35.9340 79.4531  c
35.9340 78.9427 35.7830 78.5312 35.4809 78.2187  c
35.1788 77.9062 34.7830 77.7500 34.2934 77.7500  c
33.8559 77.7500 33.4835 77.9036 33.1762 78.2109  c
32.8689 78.5182 32.7153 78.8958 32.7153 79.3437  c
32.7153 79.7812 32.8559 80.1484 33.1372 80.4453  c
33.4184 80.7421 33.9809 81.1302 34.8247 81.6093  c
h
33.3559 82.2187 m
32.7205 82.8020 32.4028 83.5833 32.4028 84.5625  c
32.4028 85.2604 32.5747 85.8151 32.9184 86.2265  c
33.2622 86.6380 33.7205 86.8437 34.2934 86.8437  c
34.8351 86.8437 35.2830 86.6614 35.6372 86.2968  c
35.9913 85.9322 36.1684 85.4739 36.1684 84.9218  c
36.1684 84.4635 36.0330 84.0807 35.7622 83.7734  c
35.4913 83.4661 34.9861 83.1093 34.2465 82.7031  c
33.3559 82.2187 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
39.0000 8.00860 m
33.8000 8.00860 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.5781 9.51562 m
34.5781 17.3593 l
34.6250 17.9843 l
34.6354 18.2343 34.7057 18.3984 34.8359 18.4765  c
34.9661 18.5546 35.2343 18.5937 35.6406 18.5937  c
36.3906 18.6093 l
36.3906 19.0000 l
31.5312 19.0000 l
31.5312 18.6093 l
32.2656 18.5937 l
32.6718 18.5937 32.9401 18.5546 33.0703 18.4765  c
33.2005 18.3984 33.2760 18.2343 33.2968 17.9843  c
33.3281 17.3593 l
33.3281 11.5312 l
33.2968 10.8906 l
33.2968 10.5885 33.2083 10.4375 33.0312 10.4375  c
32.9062 10.4375 32.6145 10.4791 32.1562 10.5625  c
31.5312 10.6718 l
31.5312 10.2812 l
34.5781 9.51562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
