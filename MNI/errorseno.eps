%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: lunes 15 de marzo de 2010 01:11:32 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
57.0000 -1.00000 334.000 354.000 rc
newpath
58.0000 352.000 m
59.8037 331.429 l
61.6074 311.582 l
63.4111 292.451 l
65.2148 274.025 l
68.3536 243.615 l
71.4924 215.265 l
75.0223 185.780 l
78.5522 158.769 l
82.1056 134.004 l
85.6589 111.604 l
89.1953 91.5857 l
92.7317 73.7684 l
96.0104 59.1550 l
99.2892 46.3182 l
106.079 25.1460 l
113.101 10.4968 l
116.600 5.78286 l
120.100 2.70187 l
121.900 1.73181 l
123.700 1.16745 l
125.500 1.00000 l
127.300 1.22058 l
130.471 2.52618 l
133.642 4.96069 l
137.211 8.99273 l
140.781 14.3273 l
147.950 28.7042 l
154.858 46.7704 l
161.131 66.3533 l
168.591 93.0757 l
174.910 118.228 l
182.261 149.906 l
188.767 179.712 l
195.906 213.872 l
199.305 230.543 l
202.704 247.408 l
206.251 265.159 l
209.797 283.014 l
216.310 315.899 l
219.823 333.590 l
223.336 351.184 l
226.985 334.693 l
230.634 316.783 l
233.810 301.405 l
236.987 286.262 l
243.848 254.515 l
250.936 223.388 l
257.870 194.915 l
264.579 169.531 l
272.029 144.175 l
278.723 124.216 l
285.870 106.144 l
292.346 92.8876 l
299.426 82.0287 l
302.757 78.3002 l
306.088 75.4880 l
309.570 73.5529 l
313.052 72.6694 l
316.456 72.8456 l
319.861 74.0718 l
323.424 76.5032 l
326.988 80.1309 l
333.853 90.5684 l
340.873 106.061 l
347.835 126.370 l
354.233 149.470 l
361.565 181.271 l
364.844 197.357 l
368.123 214.606 l
371.619 234.283 l
375.115 255.296 l
378.461 276.662 l
381.808 299.258 l
385.404 324.916 l
389.000 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
353.009 352.000 m
353.009 354.600 l
S
newpath
331.937 352.000 m
331.937 354.600 l
S
newpath
310.865 352.000 m
310.865 354.600 l
S
newpath
289.793 352.000 m
289.793 354.600 l
S
newpath
247.649 352.000 m
247.649 354.600 l
S
newpath
226.576 352.000 m
226.576 354.600 l
S
newpath
205.504 352.000 m
205.504 354.600 l
S
newpath
184.432 352.000 m
184.432 354.600 l
S
newpath
142.288 352.000 m
142.288 354.600 l
S
newpath
100.144 352.000 m
100.144 354.600 l
S
newpath
121.216 352.000 m
121.216 354.600 l
S
newpath
79.0721 352.000 m
79.0721 354.600 l
S
newpath
58.0000 352.000 m
389.000 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
216 375 15 15 rc
newpath
223.375 384.500 m
222.593 382.750 l
222.281 382.109 l
222.166 381.859 222.072 381.703 222.000 381.640  c
221.927 381.578 221.786 381.541 221.578 381.531  c
221.203 381.500 l
221.078 381.500 l
221.156 381.109 l
223.218 381.109 l
224.468 383.812 l
224.765 383.578 l
225.588 382.911 226.000 382.354 226.000 381.906  c
226.000 381.677 225.906 381.411 225.718 381.109  c
226.968 381.109 l
227.020 381.255 227.046 381.385 227.046 381.500  c
227.046 381.864 226.916 382.195 226.656 382.492  c
226.395 382.789 225.822 383.270 224.937 383.937  c
224.625 384.171 l
225.671 386.359 l
226.062 387.062 l
226.218 387.385 226.432 387.557 226.703 387.578  c
227.109 387.593 l
227.218 387.609 l
227.140 388.000 l
225.062 388.000 l
223.578 384.859 l
223.031 385.343 l
222.166 386.125 221.734 386.796 221.734 387.359  c
221.734 387.578 221.807 387.791 221.953 388.000  c
220.609 388.000 l
220.588 387.885 220.578 387.796 220.578 387.734  c
220.578 387.192 220.974 386.572 221.765 385.875  c
222.750 385.046 l
223.375 384.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
58.0000 352.000 m
58.0000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
62.9062 377.234 m
61.9375 377.234 61.1562 376.783 60.5625 375.882  c
59.9687 374.981 59.6718 373.796 59.6718 372.328  c
59.6718 370.817 59.9687 369.614 60.5625 368.718  c
61.1562 367.822 61.9531 367.375 62.9531 367.375  c
63.9531 367.375 64.7526 367.822 65.3515 368.718  c
65.9505 369.614 66.2500 370.812 66.2500 372.312  c
66.2500 373.822 65.9505 375.020 65.3515 375.906  c
64.7526 376.791 63.9375 377.234 62.9062 377.234  c
h
62.9218 376.843 m
64.2552 376.906 64.9218 375.369 64.9218 372.234  c
64.9218 369.244 64.2656 367.750 62.9531 367.750  c
61.6510 367.750 61.0000 369.265 61.0000 372.296  c
61.0000 375.265 61.6406 376.781 62.9218 376.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
163.360 352.000 m
163.360 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
162.906 377.234 m
161.937 377.234 161.156 376.783 160.562 375.882  c
159.968 374.981 159.671 373.796 159.671 372.328  c
159.671 370.817 159.968 369.614 160.562 368.718  c
161.156 367.822 161.953 367.375 162.953 367.375  c
163.953 367.375 164.752 367.822 165.351 368.718  c
165.950 369.614 166.250 370.812 166.250 372.312  c
166.250 373.822 165.950 375.020 165.351 375.906  c
164.752 376.791 163.937 377.234 162.906 377.234  c
h
162.921 376.843 m
164.255 376.906 164.921 375.369 164.921 372.234  c
164.921 369.244 164.265 367.750 162.953 367.750  c
161.651 367.750 161.000 369.265 161.000 372.296  c
161.000 375.265 161.640 376.781 162.921 376.843  c
h
168.471 377.000 m
167.846 377.000 l
167.846 375.437 l
169.409 375.437 l
169.409 376.796 l
169.409 377.338 169.380 377.708 169.323 377.906  c
169.266 378.104 169.127 378.317 168.909 378.546  c
168.617 378.849 168.263 379.010 167.846 379.031  c
167.846 378.640 l
168.263 378.609 168.471 378.197 168.471 377.406  c
168.471 377.000 l
h
171.840 377.015 m
171.840 375.437 l
172.465 375.437 l
172.481 375.578 l
172.496 376.062 l
172.517 376.583 172.923 376.843 173.715 376.843  c
174.298 376.843 174.762 376.614 175.106 376.156  c
175.449 375.697 175.621 375.078 175.621 374.296  c
175.621 373.401 175.356 372.760 174.824 372.375  c
174.293 371.989 173.423 371.796 172.215 371.796  c
171.996 371.796 l
171.996 367.609 l
176.731 367.609 l
176.731 368.703 l
172.387 368.703 l
172.387 371.328 l
172.965 371.328 l
175.611 371.328 176.934 372.333 176.934 374.343  c
176.934 375.250 176.629 375.958 176.020 376.468  c
175.410 376.979 174.569 377.234 173.496 377.234  c
172.965 377.234 172.413 377.161 171.840 377.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
268.721 352.000 m
268.721 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
273.578 367.515 m
273.578 375.359 l
273.625 375.984 l
273.635 376.234 273.705 376.398 273.835 376.476  c
273.966 376.554 274.234 376.593 274.640 376.593  c
275.390 376.609 l
275.390 377.000 l
270.531 377.000 l
270.531 376.609 l
271.265 376.593 l
271.671 376.593 271.940 376.554 272.070 376.476  c
272.200 376.398 272.276 376.234 272.296 375.984  c
272.328 375.359 l
272.328 369.531 l
272.296 368.890 l
272.296 368.588 272.208 368.437 272.031 368.437  c
271.906 368.437 271.614 368.479 271.156 368.562  c
270.531 368.671 l
270.531 368.281 l
273.578 367.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
374.081 352.000 m
374.081 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
374.578 367.515 m
374.578 375.359 l
374.625 375.984 l
374.635 376.234 374.705 376.398 374.835 376.476  c
374.966 376.554 375.234 376.593 375.640 376.593  c
376.390 376.609 l
376.390 377.000 l
371.531 377.000 l
371.531 376.609 l
372.265 376.593 l
372.671 376.593 372.940 376.554 373.070 376.476  c
373.200 376.398 373.276 376.234 373.296 375.984  c
373.328 375.359 l
373.328 369.531 l
373.296 368.890 l
373.296 368.588 373.208 368.437 373.031 368.437  c
372.906 368.437 372.614 368.479 372.156 368.562  c
371.531 368.671 l
371.531 368.281 l
374.578 367.515 l
h
379.471 377.000 m
378.846 377.000 l
378.846 375.437 l
380.409 375.437 l
380.409 376.796 l
380.409 377.338 380.380 377.708 380.323 377.906  c
380.266 378.104 380.127 378.317 379.909 378.546  c
379.617 378.849 379.263 379.010 378.846 379.031  c
378.846 378.640 l
379.263 378.609 379.471 378.197 379.471 377.406  c
379.471 377.000 l
h
382.840 377.015 m
382.840 375.437 l
383.465 375.437 l
383.481 375.578 l
383.496 376.062 l
383.517 376.583 383.923 376.843 384.715 376.843  c
385.298 376.843 385.762 376.614 386.106 376.156  c
386.449 375.697 386.621 375.078 386.621 374.296  c
386.621 373.401 386.356 372.760 385.824 372.375  c
385.293 371.989 384.423 371.796 383.215 371.796  c
382.996 371.796 l
382.996 367.609 l
387.731 367.609 l
387.731 368.703 l
383.387 368.703 l
383.387 371.328 l
383.965 371.328 l
386.611 371.328 387.934 372.333 387.934 374.343  c
387.934 375.250 387.629 375.958 387.020 376.468  c
386.410 376.979 385.569 377.234 384.496 377.234  c
383.965 377.234 383.413 377.161 382.840 377.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
58.0000 9.00543 m
55.4000 9.00543 l
S
newpath
58.0000 38.8310 m
55.4000 38.8310 l
S
newpath
58.0000 23.9182 m
55.4000 23.9182 l
S
newpath
58.0000 68.6566 m
55.4000 68.6566 l
S
newpath
58.0000 83.5694 m
55.4000 83.5694 l
S
newpath
58.0000 98.4822 m
55.4000 98.4822 l
S
newpath
58.0000 113.395 m
55.4000 113.395 l
S
newpath
58.0000 143.220 m
55.4000 143.220 l
S
newpath
58.0000 158.133 m
55.4000 158.133 l
S
newpath
58.0000 173.046 m
55.4000 173.046 l
S
newpath
58.0000 187.959 m
55.4000 187.959 l
S
newpath
58.0000 217.784 m
55.4000 217.784 l
S
newpath
58.0000 232.697 m
55.4000 232.697 l
S
newpath
58.0000 247.610 m
55.4000 247.610 l
S
newpath
58.0000 262.523 m
55.4000 262.523 l
S
newpath
58.0000 307.261 m
55.4000 307.261 l
S
newpath
58.0000 322.174 m
55.4000 322.174 l
S
newpath
58.0000 337.087 m
55.4000 337.087 l
S
newpath
58.0000 292.348 m
55.4000 292.348 l
S
newpath
58.0000 352.000 m
58.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 169 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
58.0000 352.000 m
52.8000 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
49.9062 363.234 m
48.9375 363.234 48.1562 362.783 47.5625 361.882  c
46.9687 360.981 46.6718 359.796 46.6718 358.328  c
46.6718 356.817 46.9687 355.614 47.5625 354.718  c
48.1562 353.822 48.9531 353.375 49.9531 353.375  c
50.9531 353.375 51.7526 353.822 52.3515 354.718  c
52.9505 355.614 53.2500 356.812 53.2500 358.312  c
53.2500 359.822 52.9505 361.020 52.3515 361.906  c
51.7526 362.791 50.9375 363.234 49.9062 363.234  c
h
49.9218 362.843 m
51.2552 362.906 51.9218 361.369 51.9218 358.234  c
51.9218 355.244 51.2656 353.750 49.9531 353.750  c
48.6510 353.750 48.0000 355.265 48.0000 358.296  c
48.0000 361.265 48.6406 362.781 49.9218 362.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
58.0000 277.436 m
52.8000 277.436 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 288.234 m
21.9375 288.234 21.1562 287.783 20.5625 286.882  c
19.9687 285.981 19.6718 284.796 19.6718 283.328  c
19.6718 281.817 19.9687 280.614 20.5625 279.718  c
21.1562 278.822 21.9531 278.375 22.9531 278.375  c
23.9531 278.375 24.7526 278.822 25.3515 279.718  c
25.9505 280.614 26.2500 281.812 26.2500 283.312  c
26.2500 284.822 25.9505 286.020 25.3515 286.906  c
24.7526 287.791 23.9375 288.234 22.9062 288.234  c
h
22.9218 287.843 m
24.2552 287.906 24.9218 286.369 24.9218 283.234  c
24.9218 280.244 24.2656 278.750 22.9531 278.750  c
21.6510 278.750 21.0000 280.265 21.0000 283.296  c
21.0000 286.265 21.6406 287.781 22.9218 287.843  c
h
28.4716 288.000 m
27.8466 288.000 l
27.8466 286.437 l
29.4091 286.437 l
29.4091 287.796 l
29.4091 288.338 29.3805 288.708 29.3232 288.906  c
29.2659 289.104 29.1279 289.317 28.9091 289.546  c
28.6175 289.849 28.2633 290.010 27.8466 290.031  c
27.8466 289.640 l
28.2633 289.609 28.4716 289.197 28.4716 288.406  c
28.4716 288.000 l
h
34.2622 288.234 m
33.2934 288.234 32.5122 287.783 31.9184 286.882  c
31.3247 285.981 31.0278 284.796 31.0278 283.328  c
31.0278 281.817 31.3247 280.614 31.9184 279.718  c
32.5122 278.822 33.3090 278.375 34.3090 278.375  c
35.3090 278.375 36.1085 278.822 36.7075 279.718  c
37.3064 280.614 37.6059 281.812 37.6059 283.312  c
37.6059 284.822 37.3064 286.020 36.7075 286.906  c
36.1085 287.791 35.2934 288.234 34.2622 288.234  c
h
34.2778 287.843 m
35.6111 287.906 36.2778 286.369 36.2778 283.234  c
36.2778 280.244 35.6215 278.750 34.3090 278.750  c
33.0070 278.750 32.3559 280.265 32.3559 283.296  c
32.3559 286.265 32.9965 287.781 34.2778 287.843  c
h
42.1713 288.234 m
41.2026 288.234 40.4213 287.783 39.8276 286.882  c
39.2338 285.981 38.9370 284.796 38.9370 283.328  c
38.9370 281.817 39.2338 280.614 39.8276 279.718  c
40.4213 278.822 41.2182 278.375 42.2182 278.375  c
43.2182 278.375 44.0177 278.822 44.6167 279.718  c
45.2156 280.614 45.5151 281.812 45.5151 283.312  c
45.5151 284.822 45.2156 286.020 44.6167 286.906  c
44.0177 287.791 43.2026 288.234 42.1713 288.234  c
h
42.1870 287.843 m
43.5203 287.906 44.1870 286.369 44.1870 283.234  c
44.1870 280.244 43.5307 278.750 42.2182 278.750  c
40.9161 278.750 40.2651 280.265 40.2651 283.296  c
40.2651 286.265 40.9057 287.781 42.1870 287.843  c
h
47.6586 288.015 m
47.6586 286.437 l
48.2836 286.437 l
48.2993 286.578 l
48.3149 287.062 l
48.3357 287.583 48.7420 287.843 49.5336 287.843  c
50.1170 287.843 50.5805 287.614 50.9243 287.156  c
51.2680 286.697 51.4399 286.078 51.4399 285.296  c
51.4399 284.401 51.1743 283.760 50.6430 283.375  c
50.1118 282.989 49.2420 282.796 48.0336 282.796  c
47.8149 282.796 l
47.8149 278.609 l
52.5493 278.609 l
52.5493 279.703 l
48.2055 279.703 l
48.2055 282.328 l
48.7836 282.328 l
51.4295 282.328 52.7524 283.333 52.7524 285.343  c
52.7524 286.250 52.4477 286.958 51.8383 287.468  c
51.2290 287.979 50.3878 288.234 49.3149 288.234  c
48.7836 288.234 48.2316 288.161 47.6586 288.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
58.0000 202.871 m
52.8000 202.871 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 213.234 m
21.9375 213.234 21.1562 212.783 20.5625 211.882  c
19.9687 210.981 19.6718 209.796 19.6718 208.328  c
19.6718 206.817 19.9687 205.614 20.5625 204.718  c
21.1562 203.822 21.9531 203.375 22.9531 203.375  c
23.9531 203.375 24.7526 203.822 25.3515 204.718  c
25.9505 205.614 26.2500 206.812 26.2500 208.312  c
26.2500 209.822 25.9505 211.020 25.3515 211.906  c
24.7526 212.791 23.9375 213.234 22.9062 213.234  c
h
22.9218 212.843 m
24.2552 212.906 24.9218 211.369 24.9218 208.234  c
24.9218 205.244 24.2656 203.750 22.9531 203.750  c
21.6510 203.750 21.0000 205.265 21.0000 208.296  c
21.0000 211.265 21.6406 212.781 22.9218 212.843  c
h
28.4716 213.000 m
27.8466 213.000 l
27.8466 211.437 l
29.4091 211.437 l
29.4091 212.796 l
29.4091 213.338 29.3805 213.708 29.3232 213.906  c
29.2659 214.104 29.1279 214.317 28.9091 214.546  c
28.6175 214.849 28.2633 215.010 27.8466 215.031  c
27.8466 214.640 l
28.2633 214.609 28.4716 214.197 28.4716 213.406  c
28.4716 213.000 l
h
34.2622 213.234 m
33.2934 213.234 32.5122 212.783 31.9184 211.882  c
31.3247 210.981 31.0278 209.796 31.0278 208.328  c
31.0278 206.817 31.3247 205.614 31.9184 204.718  c
32.5122 203.822 33.3090 203.375 34.3090 203.375  c
35.3090 203.375 36.1085 203.822 36.7075 204.718  c
37.3064 205.614 37.6059 206.812 37.6059 208.312  c
37.6059 209.822 37.3064 211.020 36.7075 211.906  c
36.1085 212.791 35.2934 213.234 34.2622 213.234  c
h
34.2778 212.843 m
35.6111 212.906 36.2778 211.369 36.2778 208.234  c
36.2778 205.244 35.6215 203.750 34.3090 203.750  c
33.0070 203.750 32.3559 205.265 32.3559 208.296  c
32.3559 211.265 32.9965 212.781 34.2778 212.843  c
h
42.8432 203.515 m
42.8432 211.359 l
42.8901 211.984 l
42.9005 212.234 42.9708 212.398 43.1010 212.476  c
43.2312 212.554 43.4995 212.593 43.9057 212.593  c
44.6557 212.609 l
44.6557 213.000 l
39.7963 213.000 l
39.7963 212.609 l
40.5307 212.593 l
40.9370 212.593 41.2052 212.554 41.3354 212.476  c
41.4656 212.398 41.5411 212.234 41.5620 211.984  c
41.5932 211.359 l
41.5932 205.531 l
41.5620 204.890 l
41.5620 204.588 41.4734 204.437 41.2963 204.437  c
41.1713 204.437 40.8797 204.479 40.4213 204.562  c
39.7963 204.671 l
39.7963 204.281 l
42.8432 203.515 l
h
50.0805 213.234 m
49.1118 213.234 48.3305 212.783 47.7368 211.882  c
47.1430 210.981 46.8461 209.796 46.8461 208.328  c
46.8461 206.817 47.1430 205.614 47.7368 204.718  c
48.3305 203.822 49.1274 203.375 50.1274 203.375  c
51.1274 203.375 51.9269 203.822 52.5258 204.718  c
53.1248 205.614 53.4243 206.812 53.4243 208.312  c
53.4243 209.822 53.1248 211.020 52.5258 211.906  c
51.9269 212.791 51.1118 213.234 50.0805 213.234  c
h
50.0961 212.843 m
51.4295 212.906 52.0961 211.369 52.0961 208.234  c
52.0961 205.244 51.4399 203.750 50.1274 203.750  c
48.8253 203.750 48.1743 205.265 48.1743 208.296  c
48.1743 211.265 48.8149 212.781 50.0961 212.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
58.0000 128.307 m
52.8000 128.307 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 139.234 m
21.9375 139.234 21.1562 138.783 20.5625 137.882  c
19.9687 136.981 19.6718 135.796 19.6718 134.328  c
19.6718 132.817 19.9687 131.614 20.5625 130.718  c
21.1562 129.822 21.9531 129.375 22.9531 129.375  c
23.9531 129.375 24.7526 129.822 25.3515 130.718  c
25.9505 131.614 26.2500 132.812 26.2500 134.312  c
26.2500 135.822 25.9505 137.020 25.3515 137.906  c
24.7526 138.791 23.9375 139.234 22.9062 139.234  c
h
22.9218 138.843 m
24.2552 138.906 24.9218 137.369 24.9218 134.234  c
24.9218 131.244 24.2656 129.750 22.9531 129.750  c
21.6510 129.750 21.0000 131.265 21.0000 134.296  c
21.0000 137.265 21.6406 138.781 22.9218 138.843  c
h
28.4716 139.000 m
27.8466 139.000 l
27.8466 137.437 l
29.4091 137.437 l
29.4091 138.796 l
29.4091 139.338 29.3805 139.708 29.3232 139.906  c
29.2659 140.104 29.1279 140.317 28.9091 140.546  c
28.6175 140.849 28.2633 141.010 27.8466 141.031  c
27.8466 140.640 l
28.2633 140.609 28.4716 140.197 28.4716 139.406  c
28.4716 139.000 l
h
34.2622 139.234 m
33.2934 139.234 32.5122 138.783 31.9184 137.882  c
31.3247 136.981 31.0278 135.796 31.0278 134.328  c
31.0278 132.817 31.3247 131.614 31.9184 130.718  c
32.5122 129.822 33.3090 129.375 34.3090 129.375  c
35.3090 129.375 36.1085 129.822 36.7075 130.718  c
37.3064 131.614 37.6059 132.812 37.6059 134.312  c
37.6059 135.822 37.3064 137.020 36.7075 137.906  c
36.1085 138.791 35.2934 139.234 34.2622 139.234  c
h
34.2778 138.843 m
35.6111 138.906 36.2778 137.369 36.2778 134.234  c
36.2778 131.244 35.6215 129.750 34.3090 129.750  c
33.0070 129.750 32.3559 131.265 32.3559 134.296  c
32.3559 137.265 32.9965 138.781 34.2778 138.843  c
h
42.8432 129.515 m
42.8432 137.359 l
42.8901 137.984 l
42.9005 138.234 42.9708 138.398 43.1010 138.476  c
43.2312 138.554 43.4995 138.593 43.9057 138.593  c
44.6557 138.609 l
44.6557 139.000 l
39.7963 139.000 l
39.7963 138.609 l
40.5307 138.593 l
40.9370 138.593 41.2052 138.554 41.3354 138.476  c
41.4656 138.398 41.5411 138.234 41.5620 137.984  c
41.5932 137.359 l
41.5932 131.531 l
41.5620 130.890 l
41.5620 130.588 41.4734 130.437 41.2963 130.437  c
41.1713 130.437 40.8797 130.479 40.4213 130.562  c
39.7963 130.671 l
39.7963 130.281 l
42.8432 129.515 l
h
47.6586 139.015 m
47.6586 137.437 l
48.2836 137.437 l
48.2993 137.578 l
48.3149 138.062 l
48.3357 138.583 48.7420 138.843 49.5336 138.843  c
50.1170 138.843 50.5805 138.614 50.9243 138.156  c
51.2680 137.697 51.4399 137.078 51.4399 136.296  c
51.4399 135.401 51.1743 134.760 50.6430 134.375  c
50.1118 133.989 49.2420 133.796 48.0336 133.796  c
47.8149 133.796 l
47.8149 129.609 l
52.5493 129.609 l
52.5493 130.703 l
48.2055 130.703 l
48.2055 133.328 l
48.7836 133.328 l
51.4295 133.328 52.7524 134.333 52.7524 136.343  c
52.7524 137.250 52.4477 137.958 51.8383 138.468  c
51.2290 138.979 50.3878 139.234 49.3149 139.234  c
48.7836 139.234 48.2316 139.161 47.6586 139.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
58.0000 53.7438 m
52.8000 53.7438 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 64.2343 m
21.9375 64.2343 21.1562 63.7838 20.5625 62.8828  c
19.9687 61.9817 19.6718 60.7968 19.6718 59.3281  c
19.6718 57.8177 19.9687 56.6145 20.5625 55.7187  c
21.1562 54.8229 21.9531 54.3750 22.9531 54.3750  c
23.9531 54.3750 24.7526 54.8229 25.3515 55.7187  c
25.9505 56.6145 26.2500 57.8125 26.2500 59.3125  c
26.2500 60.8229 25.9505 62.0208 25.3515 62.9062  c
24.7526 63.7916 23.9375 64.2343 22.9062 64.2343  c
h
22.9218 63.8437 m
24.2552 63.9062 24.9218 62.3697 24.9218 59.2343  c
24.9218 56.2447 24.2656 54.7500 22.9531 54.7500  c
21.6510 54.7500 21.0000 56.2656 21.0000 59.2968  c
21.0000 62.2656 21.6406 63.7812 22.9218 63.8437  c
h
28.4716 64.0000 m
27.8466 64.0000 l
27.8466 62.4375 l
29.4091 62.4375 l
29.4091 63.7968 l
29.4091 64.3385 29.3805 64.7083 29.3232 64.9062  c
29.2659 65.1041 29.1279 65.3177 28.9091 65.5468  c
28.6175 65.8489 28.2633 66.0104 27.8466 66.0312  c
27.8466 65.6406 l
28.2633 65.6093 28.4716 65.1979 28.4716 64.4062  c
28.4716 64.0000 l
h
34.2622 64.2343 m
33.2934 64.2343 32.5122 63.7838 31.9184 62.8828  c
31.3247 61.9817 31.0278 60.7968 31.0278 59.3281  c
31.0278 57.8177 31.3247 56.6145 31.9184 55.7187  c
32.5122 54.8229 33.3090 54.3750 34.3090 54.3750  c
35.3090 54.3750 36.1085 54.8229 36.7075 55.7187  c
37.3064 56.6145 37.6059 57.8125 37.6059 59.3125  c
37.6059 60.8229 37.3064 62.0208 36.7075 62.9062  c
36.1085 63.7916 35.2934 64.2343 34.2622 64.2343  c
h
34.2778 63.8437 m
35.6111 63.9062 36.2778 62.3697 36.2778 59.2343  c
36.2778 56.2447 35.6215 54.7500 34.3090 54.7500  c
33.0070 54.7500 32.3559 56.2656 32.3559 59.2968  c
32.3559 62.2656 32.9965 63.7812 34.2778 63.8437  c
h
39.2807 64.0000 m
39.2807 63.3750 l
39.6453 62.3229 40.2078 61.4375 40.9682 60.7187  c
41.6557 60.0937 l
42.4266 59.3645 42.9422 58.7864 43.2026 58.3593  c
43.4630 57.9322 43.5932 57.4427 43.5932 56.8906  c
43.5932 56.2447 43.4344 55.7291 43.1167 55.3437  c
42.7989 54.9583 42.3797 54.7656 41.8588 54.7656  c
41.2859 54.7656 40.8016 54.9218 40.4057 55.2343  c
40.2599 55.3489 40.1661 55.7708 40.1245 56.5000  c
40.1245 56.6562 l
39.4838 56.6562 l
39.4838 54.9375 l
40.4005 54.5520 41.2443 54.3593 42.0151 54.3593  c
42.8588 54.3593 43.5542 54.5989 44.1010 55.0781  c
44.6479 55.5572 44.9213 56.1614 44.9213 56.8906  c
44.9213 57.8802 44.3068 58.7968 43.0776 59.6406  c
42.3120 60.1718 l
41.0932 61.0052 40.4266 61.9166 40.3120 62.9062  c
44.8745 62.9062 l
44.8745 64.0000 l
39.2807 64.0000 l
h
50.0805 64.2343 m
49.1118 64.2343 48.3305 63.7838 47.7368 62.8828  c
47.1430 61.9817 46.8461 60.7968 46.8461 59.3281  c
46.8461 57.8177 47.1430 56.6145 47.7368 55.7187  c
48.3305 54.8229 49.1274 54.3750 50.1274 54.3750  c
51.1274 54.3750 51.9269 54.8229 52.5258 55.7187  c
53.1248 56.6145 53.4243 57.8125 53.4243 59.3125  c
53.4243 60.8229 53.1248 62.0208 52.5258 62.9062  c
51.9269 63.7916 51.1118 64.2343 50.0805 64.2343  c
h
50.0961 63.8437 m
51.4295 63.9062 52.0961 62.3697 52.0961 59.2343  c
52.0961 56.2447 51.4399 54.7500 50.1274 54.7500  c
48.8253 54.7500 48.1743 56.2656 48.1743 59.2968  c
48.1743 62.2656 48.8149 63.7812 50.0961 63.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
