%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: domingo 14 de marzo de 2010 10:04:31 PM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
58.0000 6.00794 323.477 376.491 rc
newpath
59.0000 8.00793 m
65.9855 39.8623 l
72.0635 66.4238 l
78.8989 95.0109 l
85.7796 122.414 l
92.6276 148.320 l
98.9766 171.120 l
105.550 193.491 l
112.349 215.306 l
119.126 235.712 l
126.097 255.308 l
132.237 271.397 l
139.149 288.198 l
146.090 303.668 l
152.779 317.251 l
158.853 328.458 l
166.075 340.387 l
172.193 349.306 l
179.310 358.310 l
185.610 365.050 l
192.522 371.117 l
199.104 375.603 l
205.971 378.939 l
212.278 380.795 l
219.080 381.499 l
226.146 380.805 l
232.297 379.019 l
238.939 375.854 l
245.802 371.235 l
252.516 365.391 l
259.012 358.488 l
266.225 349.385 l
272.706 339.915 l
279.626 328.455 l
285.896 316.867 l
292.752 302.890 l
299.202 288.490 l
305.944 272.144 l
312.536 254.884 l
319.437 235.460 l
326.084 215.443 l
332.881 193.643 l
339.621 170.696 l
345.816 148.445 l
352.915 121.570 l
359.264 96.2913 l
366.034 68.0463 l
372.514 39.7634 l
379.477 8.00793 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
359.447 8.00793 m
359.447 10.6079 l
S
newpath
319.388 8.00793 m
319.388 10.6079 l
S
newpath
279.328 8.00793 m
279.328 10.6079 l
S
newpath
239.268 8.00793 m
239.268 10.6079 l
S
newpath
199.208 8.00793 m
199.208 10.6079 l
S
newpath
159.149 8.00793 m
159.149 10.6079 l
S
newpath
119.089 8.00793 m
119.089 10.6079 l
S
newpath
79.0298 8.00793 m
79.0298 10.6079 l
S
newpath
56.0000 8.00793 m
379.477 8.00793 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
172 31 15 15 rc
newpath
179.375 40.5000 m
178.593 38.7500 l
178.281 38.1093 l
178.166 37.8593 178.072 37.7031 178.000 37.6406  c
177.927 37.5781 177.786 37.5416 177.578 37.5312  c
177.203 37.5000 l
177.078 37.5000 l
177.156 37.1093 l
179.218 37.1093 l
180.468 39.8125 l
180.765 39.5781 l
181.588 38.9114 182.000 38.3541 182.000 37.9062  c
182.000 37.6770 181.906 37.4114 181.718 37.1093  c
182.968 37.1093 l
183.020 37.2552 183.046 37.3854 183.046 37.5000  c
183.046 37.8645 182.916 38.1953 182.656 38.4921  c
182.395 38.7890 181.822 39.2708 180.937 39.9375  c
180.625 40.1718 l
181.671 42.3593 l
182.062 43.0625 l
182.218 43.3854 182.432 43.5572 182.703 43.5781  c
183.109 43.5937 l
183.218 43.6093 l
183.140 44.0000 l
181.062 44.0000 l
179.578 40.8593 l
179.031 41.3437 l
178.166 42.1250 177.734 42.7968 177.734 43.3593  c
177.734 43.5781 177.807 43.7916 177.953 44.0000  c
176.609 44.0000 l
176.588 43.8854 176.578 43.7968 176.578 43.7343  c
176.578 43.1927 176.974 42.5729 177.765 41.8750  c
178.750 41.0468 l
179.375 40.5000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
59.0000 8.00793 m
59.0000 13.2079 l
S
Q
q
newpath
99.0596 8.00793 m
99.0596 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
98.9062 33.2343 m
97.9375 33.2343 97.1562 32.7838 96.5625 31.8828  c
95.9687 30.9817 95.6718 29.7968 95.6718 28.3281  c
95.6718 26.8177 95.9687 25.6145 96.5625 24.7187  c
97.1562 23.8229 97.9531 23.3750 98.9531 23.3750  c
99.9531 23.3750 100.752 23.8229 101.351 24.7187  c
101.950 25.6145 102.250 26.8125 102.250 28.3125  c
102.250 29.8229 101.950 31.0208 101.351 31.9062  c
100.752 32.7916 99.9375 33.2343 98.9062 33.2343  c
h
98.9218 32.8437 m
100.255 32.9062 100.921 31.3697 100.921 28.2343  c
100.921 25.2447 100.265 23.7500 98.9531 23.7500  c
97.6510 23.7500 97.0000 25.2656 97.0000 28.2968  c
97.0000 31.2656 97.6406 32.7812 98.9218 32.8437  c
h
104.471 33.0000 m
103.846 33.0000 l
103.846 31.4375 l
105.409 31.4375 l
105.409 32.7968 l
105.409 33.3385 105.380 33.7083 105.323 33.9062  c
105.266 34.1041 105.127 34.3177 104.909 34.5468  c
104.617 34.8489 104.263 35.0104 103.846 35.0312  c
103.846 34.6406 l
104.263 34.6093 104.471 34.1979 104.471 33.4062  c
104.471 33.0000 l
h
107.527 32.9375 m
107.527 31.2812 l
108.152 31.2812 l
108.168 31.4218 l
108.184 31.8593 l
108.184 32.1302 108.342 32.3619 108.660 32.5546  c
108.978 32.7474 109.371 32.8437 109.840 32.8437  c
110.392 32.8437 110.837 32.6250 111.176 32.1875  c
111.514 31.7500 111.684 31.1718 111.684 30.4531  c
111.684 29.7447 111.462 29.1901 111.020 28.7890  c
110.577 28.3880 109.960 28.1875 109.168 28.1875  c
108.387 28.1875 l
108.387 27.7968 l
108.809 27.7968 l
110.579 27.7968 111.465 27.0833 111.465 25.6562  c
111.465 24.3854 110.908 23.7500 109.793 23.7500  c
109.303 23.7500 108.876 23.8541 108.512 24.0625  c
108.376 24.1458 108.283 24.4843 108.231 25.0781  c
108.231 25.1718 l
107.606 25.1718 l
107.606 23.7343 l
108.283 23.4843 109.048 23.3593 109.902 23.3593  c
110.767 23.3593 111.452 23.5546 111.957 23.9453  c
112.462 24.3359 112.715 24.8645 112.715 25.5312  c
112.715 26.6458 112.059 27.4427 110.746 27.9218  c
111.548 28.1302 112.124 28.4270 112.473 28.8125  c
112.822 29.1979 112.996 29.7343 112.996 30.4218  c
112.996 31.2864 112.715 31.9713 112.152 32.4765  c
111.590 32.9817 110.824 33.2343 109.856 33.2343  c
108.970 33.2343 108.194 33.1354 107.527 32.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
139.119 8.00793 m
139.119 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
138.906 33.2343 m
137.937 33.2343 137.156 32.7838 136.562 31.8828  c
135.968 30.9817 135.671 29.7968 135.671 28.3281  c
135.671 26.8177 135.968 25.6145 136.562 24.7187  c
137.156 23.8229 137.953 23.3750 138.953 23.3750  c
139.953 23.3750 140.752 23.8229 141.351 24.7187  c
141.950 25.6145 142.250 26.8125 142.250 28.3125  c
142.250 29.8229 141.950 31.0208 141.351 31.9062  c
140.752 32.7916 139.937 33.2343 138.906 33.2343  c
h
138.921 32.8437 m
140.255 32.9062 140.921 31.3697 140.921 28.2343  c
140.921 25.2447 140.265 23.7500 138.953 23.7500  c
137.651 23.7500 137.000 25.2656 137.000 28.2968  c
137.000 31.2656 137.640 32.7812 138.921 32.8437  c
h
144.471 33.0000 m
143.846 33.0000 l
143.846 31.4375 l
145.409 31.4375 l
145.409 32.7968 l
145.409 33.3385 145.380 33.7083 145.323 33.9062  c
145.266 34.1041 145.127 34.3177 144.909 34.5468  c
144.617 34.8489 144.263 35.0104 143.846 35.0312  c
143.846 34.6406 l
144.263 34.6093 144.471 34.1979 144.471 33.4062  c
144.471 33.0000 l
h
151.059 30.3437 m
146.746 30.3437 l
146.746 29.7187 l
151.449 23.4531 l
152.152 23.4531 l
152.152 29.3906 l
153.402 29.3906 l
153.402 30.3437 l
152.152 30.3437 l
152.152 31.3593 l
152.152 31.8593 152.191 32.1822 152.270 32.3281  c
152.348 32.4739 152.517 32.5520 152.777 32.5625  c
153.215 32.5937 l
153.324 32.6093 l
153.324 33.0000 l
149.731 33.0000 l
149.731 32.6093 l
149.840 32.5937 l
150.496 32.5625 l
150.725 32.5520 150.876 32.4687 150.949 32.3125  c
151.022 32.1562 151.059 31.8385 151.059 31.3593  c
151.059 30.3437 l
h
147.449 29.3906 m
151.059 29.3906 l
151.059 24.6093 l
147.449 29.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
179.179 8.00793 m
179.179 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.906 33.2343 m
177.937 33.2343 177.156 32.7838 176.562 31.8828  c
175.968 30.9817 175.671 29.7968 175.671 28.3281  c
175.671 26.8177 175.968 25.6145 176.562 24.7187  c
177.156 23.8229 177.953 23.3750 178.953 23.3750  c
179.953 23.3750 180.752 23.8229 181.351 24.7187  c
181.950 25.6145 182.250 26.8125 182.250 28.3125  c
182.250 29.8229 181.950 31.0208 181.351 31.9062  c
180.752 32.7916 179.937 33.2343 178.906 33.2343  c
h
178.921 32.8437 m
180.255 32.9062 180.921 31.3697 180.921 28.2343  c
180.921 25.2447 180.265 23.7500 178.953 23.7500  c
177.651 23.7500 177.000 25.2656 177.000 28.2968  c
177.000 31.2656 177.640 32.7812 178.921 32.8437  c
h
184.471 33.0000 m
183.846 33.0000 l
183.846 31.4375 l
185.409 31.4375 l
185.409 32.7968 l
185.409 33.3385 185.380 33.7083 185.323 33.9062  c
185.266 34.1041 185.127 34.3177 184.909 34.5468  c
184.617 34.8489 184.263 35.0104 183.846 35.0312  c
183.846 34.6406 l
184.263 34.6093 184.471 34.1979 184.471 33.4062  c
184.471 33.0000 l
h
187.840 33.0156 m
187.840 31.4375 l
188.465 31.4375 l
188.481 31.5781 l
188.496 32.0625 l
188.517 32.5833 188.923 32.8437 189.715 32.8437  c
190.298 32.8437 190.762 32.6145 191.106 32.1562  c
191.449 31.6979 191.621 31.0781 191.621 30.2968  c
191.621 29.4010 191.356 28.7604 190.824 28.3750  c
190.293 27.9895 189.423 27.7968 188.215 27.7968  c
187.996 27.7968 l
187.996 23.6093 l
192.731 23.6093 l
192.731 24.7031 l
188.387 24.7031 l
188.387 27.3281 l
188.965 27.3281 l
191.611 27.3281 192.934 28.3333 192.934 30.3437  c
192.934 31.2500 192.629 31.9583 192.020 32.4687  c
191.410 32.9791 190.569 33.2343 189.496 33.2343  c
188.965 33.2343 188.413 33.1614 187.840 33.0156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
219.238 8.00793 m
219.238 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
218.906 33.2343 m
217.937 33.2343 217.156 32.7838 216.562 31.8828  c
215.968 30.9817 215.671 29.7968 215.671 28.3281  c
215.671 26.8177 215.968 25.6145 216.562 24.7187  c
217.156 23.8229 217.953 23.3750 218.953 23.3750  c
219.953 23.3750 220.752 23.8229 221.351 24.7187  c
221.950 25.6145 222.250 26.8125 222.250 28.3125  c
222.250 29.8229 221.950 31.0208 221.351 31.9062  c
220.752 32.7916 219.937 33.2343 218.906 33.2343  c
h
218.921 32.8437 m
220.255 32.9062 220.921 31.3697 220.921 28.2343  c
220.921 25.2447 220.265 23.7500 218.953 23.7500  c
217.651 23.7500 217.000 25.2656 217.000 28.2968  c
217.000 31.2656 217.640 32.7812 218.921 32.8437  c
h
224.471 33.0000 m
223.846 33.0000 l
223.846 31.4375 l
225.409 31.4375 l
225.409 32.7968 l
225.409 33.3385 225.380 33.7083 225.323 33.9062  c
225.266 34.1041 225.127 34.3177 224.909 34.5468  c
224.617 34.8489 224.263 35.0104 223.846 35.0312  c
223.846 34.6406 l
224.263 34.6093 224.471 34.1979 224.471 33.4062  c
224.471 33.0000 l
h
228.465 28.1875 m
229.059 27.3750 229.814 26.9687 230.731 26.9687  c
231.553 26.9687 232.225 27.2421 232.746 27.7890  c
233.267 28.3359 233.527 29.0468 233.527 29.9218  c
233.527 30.8593 233.231 31.6458 232.637 32.2812  c
232.043 32.9166 231.314 33.2343 230.449 33.2343  c
229.387 33.2343 228.569 32.8203 227.996 31.9921  c
227.423 31.1640 227.137 29.9843 227.137 28.4531  c
227.137 26.8385 227.467 25.5859 228.129 24.6953  c
228.790 23.8046 229.725 23.3593 230.934 23.3593  c
231.715 23.3593 232.402 23.5000 232.996 23.7812  c
232.996 25.2812 l
232.371 25.2812 l
232.356 25.1562 l
232.324 24.7031 l
232.303 24.4218 232.152 24.1927 231.871 24.0156  c
231.590 23.8385 231.236 23.7500 230.809 23.7500  c
230.069 23.7500 229.494 24.1380 229.082 24.9140  c
228.671 25.6901 228.465 26.7812 228.465 28.1875  c
h
228.512 29.5312 m
228.512 30.5000 228.707 31.2916 229.098 31.9062  c
229.488 32.5208 229.991 32.8281 230.606 32.8281  c
231.710 32.8281 232.262 31.9166 232.262 30.0937  c
232.262 28.3020 231.689 27.4062 230.543 27.4062  c
229.918 27.4062 229.423 27.5989 229.059 27.9843  c
228.694 28.3697 228.512 28.8854 228.512 29.5312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
259.298 8.00793 m
259.298 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
258.906 33.2343 m
257.937 33.2343 257.156 32.7838 256.562 31.8828  c
255.968 30.9817 255.671 29.7968 255.671 28.3281  c
255.671 26.8177 255.968 25.6145 256.562 24.7187  c
257.156 23.8229 257.953 23.3750 258.953 23.3750  c
259.953 23.3750 260.752 23.8229 261.351 24.7187  c
261.950 25.6145 262.250 26.8125 262.250 28.3125  c
262.250 29.8229 261.950 31.0208 261.351 31.9062  c
260.752 32.7916 259.937 33.2343 258.906 33.2343  c
h
258.921 32.8437 m
260.255 32.9062 260.921 31.3697 260.921 28.2343  c
260.921 25.2447 260.265 23.7500 258.953 23.7500  c
257.651 23.7500 257.000 25.2656 257.000 28.2968  c
257.000 31.2656 257.640 32.7812 258.921 32.8437  c
h
264.471 33.0000 m
263.846 33.0000 l
263.846 31.4375 l
265.409 31.4375 l
265.409 32.7968 l
265.409 33.3385 265.380 33.7083 265.323 33.9062  c
265.266 34.1041 265.127 34.3177 264.909 34.5468  c
264.617 34.8489 264.263 35.0104 263.846 35.0312  c
263.846 34.6406 l
264.263 34.6093 264.471 34.1979 264.471 33.4062  c
264.471 33.0000 l
h
268.137 33.0000 m
268.324 31.9791 268.626 31.0911 269.043 30.3359  c
269.460 29.5807 270.449 28.1510 272.012 26.0468  c
272.965 24.7812 l
267.668 24.7812 l
267.668 23.6093 l
273.699 23.6093 l
273.699 24.4218 l
271.126 27.8802 269.767 30.7395 269.621 33.0000  c
268.137 33.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
299.358 8.00793 m
299.358 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.906 33.2343 m
297.937 33.2343 297.156 32.7838 296.562 31.8828  c
295.968 30.9817 295.671 29.7968 295.671 28.3281  c
295.671 26.8177 295.968 25.6145 296.562 24.7187  c
297.156 23.8229 297.953 23.3750 298.953 23.3750  c
299.953 23.3750 300.752 23.8229 301.351 24.7187  c
301.950 25.6145 302.250 26.8125 302.250 28.3125  c
302.250 29.8229 301.950 31.0208 301.351 31.9062  c
300.752 32.7916 299.937 33.2343 298.906 33.2343  c
h
298.921 32.8437 m
300.255 32.9062 300.921 31.3697 300.921 28.2343  c
300.921 25.2447 300.265 23.7500 298.953 23.7500  c
297.651 23.7500 297.000 25.2656 297.000 28.2968  c
297.000 31.2656 297.640 32.7812 298.921 32.8437  c
h
304.471 33.0000 m
303.846 33.0000 l
303.846 31.4375 l
305.409 31.4375 l
305.409 32.7968 l
305.409 33.3385 305.380 33.7083 305.323 33.9062  c
305.266 34.1041 305.127 34.3177 304.909 34.5468  c
304.617 34.8489 304.263 35.0104 303.846 35.0312  c
303.846 34.6406 l
304.263 34.6093 304.471 34.1979 304.471 33.4062  c
304.471 33.0000 l
h
309.074 27.9375 m
308.106 27.2708 307.621 26.5416 307.621 25.7500  c
307.621 25.0416 307.879 24.4661 308.395 24.0234  c
308.910 23.5807 309.585 23.3593 310.418 23.3593  c
311.210 23.3593 311.842 23.5468 312.316 23.9218  c
312.790 24.2968 313.027 24.7968 313.027 25.4218  c
313.027 26.3906 312.408 27.1875 311.168 27.8125  c
312.668 28.4479 313.418 29.3645 313.418 30.5625  c
313.418 31.3541 313.121 31.9974 312.527 32.4921  c
311.934 32.9869 311.168 33.2343 310.231 33.2343  c
309.314 33.2343 308.572 33.0026 308.004 32.5390  c
307.436 32.0755 307.152 31.4687 307.152 30.7187  c
307.152 29.4583 307.793 28.5312 309.074 27.9375  c
h
310.824 27.6093 m
311.564 27.0677 311.934 26.3489 311.934 25.4531  c
311.934 24.9427 311.783 24.5312 311.481 24.2187  c
311.178 23.9062 310.783 23.7500 310.293 23.7500  c
309.856 23.7500 309.483 23.9036 309.176 24.2109  c
308.869 24.5182 308.715 24.8958 308.715 25.3437  c
308.715 25.7812 308.856 26.1484 309.137 26.4453  c
309.418 26.7421 309.981 27.1302 310.824 27.6093  c
h
309.356 28.2187 m
308.720 28.8020 308.402 29.5833 308.402 30.5625  c
308.402 31.2604 308.574 31.8151 308.918 32.2265  c
309.262 32.6380 309.720 32.8437 310.293 32.8437  c
310.835 32.8437 311.283 32.6614 311.637 32.2968  c
311.991 31.9322 312.168 31.4739 312.168 30.9218  c
312.168 30.4635 312.033 30.0807 311.762 29.7734  c
311.491 29.4661 310.986 29.1093 310.246 28.7031  c
309.356 28.2187 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
339.417 8.00793 m
339.417 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
338.906 33.2343 m
337.937 33.2343 337.156 32.7838 336.562 31.8828  c
335.968 30.9817 335.671 29.7968 335.671 28.3281  c
335.671 26.8177 335.968 25.6145 336.562 24.7187  c
337.156 23.8229 337.953 23.3750 338.953 23.3750  c
339.953 23.3750 340.752 23.8229 341.351 24.7187  c
341.950 25.6145 342.250 26.8125 342.250 28.3125  c
342.250 29.8229 341.950 31.0208 341.351 31.9062  c
340.752 32.7916 339.937 33.2343 338.906 33.2343  c
h
338.921 32.8437 m
340.255 32.9062 340.921 31.3697 340.921 28.2343  c
340.921 25.2447 340.265 23.7500 338.953 23.7500  c
337.651 23.7500 337.000 25.2656 337.000 28.2968  c
337.000 31.2656 337.640 32.7812 338.921 32.8437  c
h
344.471 33.0000 m
343.846 33.0000 l
343.846 31.4375 l
345.409 31.4375 l
345.409 32.7968 l
345.409 33.3385 345.380 33.7083 345.323 33.9062  c
345.266 34.1041 345.127 34.3177 344.909 34.5468  c
344.617 34.8489 344.263 35.0104 343.846 35.0312  c
343.846 34.6406 l
344.263 34.6093 344.471 34.1979 344.471 33.4062  c
344.471 33.0000 l
h
352.152 28.4062 m
351.559 29.2291 350.803 29.6406 349.887 29.6406  c
349.064 29.6406 348.395 29.3645 347.879 28.8125  c
347.363 28.2604 347.106 27.5520 347.106 26.6875  c
347.106 25.7500 347.397 24.9609 347.981 24.3203  c
348.564 23.6796 349.293 23.3593 350.168 23.3593  c
351.231 23.3593 352.048 23.7760 352.621 24.6093  c
353.194 25.4427 353.481 26.6250 353.481 28.1562  c
353.481 29.7708 353.150 31.0208 352.488 31.9062  c
351.827 32.7916 350.897 33.2343 349.699 33.2343  c
348.918 33.2343 348.225 33.0937 347.621 32.8125  c
347.621 31.3125 l
348.246 31.3125 l
348.262 31.4531 l
348.293 31.9062 l
348.314 32.1875 348.465 32.4140 348.746 32.5859  c
349.027 32.7578 349.382 32.8437 349.809 32.8437  c
350.548 32.8437 351.124 32.4557 351.535 31.6796  c
351.947 30.9036 352.152 29.8125 352.152 28.4062  c
h
352.106 27.0625 m
352.106 26.0937 351.910 25.3020 351.520 24.6875  c
351.129 24.0729 350.626 23.7656 350.012 23.7656  c
348.908 23.7656 348.356 24.6822 348.356 26.5156  c
348.356 28.2968 348.928 29.1875 350.074 29.1875  c
350.699 29.1875 351.194 28.9947 351.559 28.6093  c
351.923 28.2239 352.106 27.7083 352.106 27.0625  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.477 8.00793 m
379.477 13.2079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
379.578 23.5156 m
379.578 31.3593 l
379.625 31.9843 l
379.635 32.2343 379.705 32.3984 379.835 32.4765  c
379.966 32.5546 380.234 32.5937 380.640 32.5937  c
381.390 32.6093 l
381.390 33.0000 l
376.531 33.0000 l
376.531 32.6093 l
377.265 32.5937 l
377.671 32.5937 377.940 32.5546 378.070 32.4765  c
378.200 32.3984 378.276 32.2343 378.296 31.9843  c
378.328 31.3593 l
378.328 25.5312 l
378.296 24.8906 l
378.296 24.5885 378.208 24.4375 378.031 24.4375  c
377.906 24.4375 377.614 24.4791 377.156 24.5625  c
376.531 24.6718 l
376.531 24.2812 l
379.578 23.5156 l
h
384.471 33.0000 m
383.846 33.0000 l
383.846 31.4375 l
385.409 31.4375 l
385.409 32.7968 l
385.409 33.3385 385.380 33.7083 385.323 33.9062  c
385.266 34.1041 385.127 34.3177 384.909 34.5468  c
384.617 34.8489 384.263 35.0104 383.846 35.0312  c
383.846 34.6406 l
384.263 34.6093 384.471 34.1979 384.471 33.4062  c
384.471 33.0000 l
h
390.262 33.2343 m
389.293 33.2343 388.512 32.7838 387.918 31.8828  c
387.324 30.9817 387.027 29.7968 387.027 28.3281  c
387.027 26.8177 387.324 25.6145 387.918 24.7187  c
388.512 23.8229 389.309 23.3750 390.309 23.3750  c
391.309 23.3750 392.108 23.8229 392.707 24.7187  c
393.306 25.6145 393.606 26.8125 393.606 28.3125  c
393.606 29.8229 393.306 31.0208 392.707 31.9062  c
392.108 32.7916 391.293 33.2343 390.262 33.2343  c
h
390.277 32.8437 m
391.611 32.9062 392.277 31.3697 392.277 28.2343  c
392.277 25.2447 391.621 23.7500 390.309 23.7500  c
389.007 23.7500 388.356 25.2656 388.356 28.2968  c
388.356 31.2656 388.996 32.7812 390.277 32.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
56.0000 31.3512 m
53.4000 31.3512 l
S
newpath
56.0000 78.0376 m
53.4000 78.0376 l
S
newpath
56.0000 124.724 m
53.4000 124.724 l
S
newpath
56.0000 171.410 m
53.4000 171.410 l
S
newpath
56.0000 218.097 m
53.4000 218.097 l
S
newpath
56.0000 264.783 m
53.4000 264.783 l
S
newpath
56.0000 311.470 m
53.4000 311.470 l
S
newpath
56.0000 358.156 m
53.4000 358.156 l
S
newpath
56.0000 381.499 m
56.0000 8.00793 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 187 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
56.0000 381.500 m
50.8000 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 381 7 13 rc
newpath
26.7968 388.437 m
18.2031 388.437 l
18.2031 387.765 l
26.7968 387.765 l
26.7968 388.437 l
h
f
Q
newpath
28.9062 392.234 m
27.9375 392.234 27.1562 391.783 26.5625 390.882  c
25.9687 389.981 25.6718 388.796 25.6718 387.328  c
25.6718 385.817 25.9687 384.614 26.5625 383.718  c
27.1562 382.822 27.9531 382.375 28.9531 382.375  c
29.9531 382.375 30.7526 382.822 31.3515 383.718  c
31.9505 384.614 32.2500 385.812 32.2500 387.312  c
32.2500 388.822 31.9505 390.020 31.3515 390.906  c
30.7526 391.791 29.9375 392.234 28.9062 392.234  c
h
28.9218 391.843 m
30.2552 391.906 30.9218 390.369 30.9218 387.234  c
30.9218 384.244 30.2656 382.750 28.9531 382.750  c
27.6510 382.750 27.0000 384.265 27.0000 387.296  c
27.0000 390.265 27.6406 391.781 28.9218 391.843  c
h
34.4716 392.000 m
33.8466 392.000 l
33.8466 390.437 l
35.4091 390.437 l
35.4091 391.796 l
35.4091 392.338 35.3805 392.708 35.3232 392.906  c
35.2659 393.104 35.1279 393.317 34.9091 393.546  c
34.6175 393.849 34.2633 394.010 33.8466 394.031  c
33.8466 393.640 l
34.2633 393.609 34.4716 393.197 34.4716 392.406  c
34.4716 392.000 l
h
40.9340 382.515 m
40.9340 390.359 l
40.9809 390.984 l
40.9913 391.234 41.0616 391.398 41.1918 391.476  c
41.3221 391.554 41.5903 391.593 41.9965 391.593  c
42.7465 391.609 l
42.7465 392.000 l
37.8872 392.000 l
37.8872 391.609 l
38.6215 391.593 l
39.0278 391.593 39.2960 391.554 39.4262 391.476  c
39.5564 391.398 39.6320 391.234 39.6528 390.984  c
39.6840 390.359 l
39.6840 384.531 l
39.6528 383.890 l
39.6528 383.588 39.5642 383.437 39.3872 383.437  c
39.2622 383.437 38.9705 383.479 38.5122 383.562  c
37.8872 383.671 l
37.8872 383.281 l
40.9340 382.515 l
h
46.3745 387.187 m
46.9682 386.375 47.7234 385.968 48.6401 385.968  c
49.4630 385.968 50.1349 386.242 50.6557 386.789  c
51.1766 387.335 51.4370 388.046 51.4370 388.921  c
51.4370 389.859 51.1401 390.645 50.5463 391.281  c
49.9526 391.916 49.2234 392.234 48.3588 392.234  c
47.2963 392.234 46.4786 391.820 45.9057 390.992  c
45.3328 390.164 45.0463 388.984 45.0463 387.453  c
45.0463 385.838 45.3771 384.585 46.0385 383.695  c
46.7000 382.804 47.6349 382.359 48.8432 382.359  c
49.6245 382.359 50.3120 382.500 50.9057 382.781  c
50.9057 384.281 l
50.2807 384.281 l
50.2651 384.156 l
50.2338 383.703 l
50.2130 383.421 50.0620 383.192 49.7807 383.015  c
49.4995 382.838 49.1453 382.750 48.7182 382.750  c
47.9786 382.750 47.4031 383.138 46.9917 383.914  c
46.5802 384.690 46.3745 385.781 46.3745 387.187  c
h
46.4213 388.531 m
46.4213 389.500 46.6167 390.291 47.0073 390.906  c
47.3979 391.520 47.9005 391.828 48.5151 391.828  c
49.6193 391.828 50.1713 390.916 50.1713 389.093  c
50.1713 387.302 49.5984 386.406 48.4526 386.406  c
47.8276 386.406 47.3328 386.599 46.9682 386.984  c
46.6036 387.369 46.4213 387.885 46.4213 388.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 334.813 m
50.8000 334.813 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 334 7 13 rc
newpath
26.7968 341.437 m
18.2031 341.437 l
18.2031 340.765 l
26.7968 340.765 l
26.7968 341.437 l
h
f
Q
newpath
28.9062 345.234 m
27.9375 345.234 27.1562 344.783 26.5625 343.882  c
25.9687 342.981 25.6718 341.796 25.6718 340.328  c
25.6718 338.817 25.9687 337.614 26.5625 336.718  c
27.1562 335.822 27.9531 335.375 28.9531 335.375  c
29.9531 335.375 30.7526 335.822 31.3515 336.718  c
31.9505 337.614 32.2500 338.812 32.2500 340.312  c
32.2500 341.822 31.9505 343.020 31.3515 343.906  c
30.7526 344.791 29.9375 345.234 28.9062 345.234  c
h
28.9218 344.843 m
30.2552 344.906 30.9218 343.369 30.9218 340.234  c
30.9218 337.244 30.2656 335.750 28.9531 335.750  c
27.6510 335.750 27.0000 337.265 27.0000 340.296  c
27.0000 343.265 27.6406 344.781 28.9218 344.843  c
h
34.4716 345.000 m
33.8466 345.000 l
33.8466 343.437 l
35.4091 343.437 l
35.4091 344.796 l
35.4091 345.338 35.3805 345.708 35.3232 345.906  c
35.2659 346.104 35.1279 346.317 34.9091 346.546  c
34.6175 346.849 34.2633 347.010 33.8466 347.031  c
33.8466 346.640 l
34.2633 346.609 34.4716 346.197 34.4716 345.406  c
34.4716 345.000 l
h
40.9340 335.515 m
40.9340 343.359 l
40.9809 343.984 l
40.9913 344.234 41.0616 344.398 41.1918 344.476  c
41.3221 344.554 41.5903 344.593 41.9965 344.593  c
42.7465 344.609 l
42.7465 345.000 l
37.8872 345.000 l
37.8872 344.609 l
38.6215 344.593 l
39.0278 344.593 39.2960 344.554 39.4262 344.476  c
39.5564 344.398 39.6320 344.234 39.6528 343.984  c
39.6840 343.359 l
39.6840 337.531 l
39.6528 336.890 l
39.6528 336.588 39.5642 336.437 39.3872 336.437  c
39.2622 336.437 38.9705 336.479 38.5122 336.562  c
37.8872 336.671 l
37.8872 336.281 l
40.9340 335.515 l
h
48.9682 342.343 m
44.6557 342.343 l
44.6557 341.718 l
49.3588 335.453 l
50.0620 335.453 l
50.0620 341.390 l
51.3120 341.390 l
51.3120 342.343 l
50.0620 342.343 l
50.0620 343.359 l
50.0620 343.859 50.1010 344.182 50.1792 344.328  c
50.2573 344.474 50.4266 344.552 50.6870 344.562  c
51.1245 344.593 l
51.2338 344.609 l
51.2338 345.000 l
47.6401 345.000 l
47.6401 344.609 l
47.7495 344.593 l
48.4057 344.562 l
48.6349 344.552 48.7859 344.468 48.8588 344.312  c
48.9318 344.156 48.9682 343.838 48.9682 343.359  c
48.9682 342.343 l
h
45.3588 341.390 m
48.9682 341.390 l
48.9682 336.609 l
45.3588 341.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 288.127 m
50.8000 288.127 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 288 7 13 rc
newpath
26.7968 295.437 m
18.2031 295.437 l
18.2031 294.765 l
26.7968 294.765 l
26.7968 295.437 l
h
f
Q
newpath
28.9062 299.234 m
27.9375 299.234 27.1562 298.783 26.5625 297.882  c
25.9687 296.981 25.6718 295.796 25.6718 294.328  c
25.6718 292.817 25.9687 291.614 26.5625 290.718  c
27.1562 289.822 27.9531 289.375 28.9531 289.375  c
29.9531 289.375 30.7526 289.822 31.3515 290.718  c
31.9505 291.614 32.2500 292.812 32.2500 294.312  c
32.2500 295.822 31.9505 297.020 31.3515 297.906  c
30.7526 298.791 29.9375 299.234 28.9062 299.234  c
h
28.9218 298.843 m
30.2552 298.906 30.9218 297.369 30.9218 294.234  c
30.9218 291.244 30.2656 289.750 28.9531 289.750  c
27.6510 289.750 27.0000 291.265 27.0000 294.296  c
27.0000 297.265 27.6406 298.781 28.9218 298.843  c
h
34.4716 299.000 m
33.8466 299.000 l
33.8466 297.437 l
35.4091 297.437 l
35.4091 298.796 l
35.4091 299.338 35.3805 299.708 35.3232 299.906  c
35.2659 300.104 35.1279 300.317 34.9091 300.546  c
34.6175 300.849 34.2633 301.010 33.8466 301.031  c
33.8466 300.640 l
34.2633 300.609 34.4716 300.197 34.4716 299.406  c
34.4716 299.000 l
h
40.9340 289.515 m
40.9340 297.359 l
40.9809 297.984 l
40.9913 298.234 41.0616 298.398 41.1918 298.476  c
41.3221 298.554 41.5903 298.593 41.9965 298.593  c
42.7465 298.609 l
42.7465 299.000 l
37.8872 299.000 l
37.8872 298.609 l
38.6215 298.593 l
39.0278 298.593 39.2960 298.554 39.4262 298.476  c
39.5564 298.398 39.6320 298.234 39.6528 297.984  c
39.6840 297.359 l
39.6840 291.531 l
39.6528 290.890 l
39.6528 290.588 39.5642 290.437 39.3872 290.437  c
39.2622 290.437 38.9705 290.479 38.5122 290.562  c
37.8872 290.671 l
37.8872 290.281 l
40.9340 289.515 l
h
45.2807 299.000 m
45.2807 298.375 l
45.6453 297.322 46.2078 296.437 46.9682 295.718  c
47.6557 295.093 l
48.4266 294.364 48.9422 293.786 49.2026 293.359  c
49.4630 292.932 49.5932 292.442 49.5932 291.890  c
49.5932 291.244 49.4344 290.729 49.1167 290.343  c
48.7989 289.958 48.3797 289.765 47.8588 289.765  c
47.2859 289.765 46.8016 289.921 46.4057 290.234  c
46.2599 290.349 46.1661 290.770 46.1245 291.500  c
46.1245 291.656 l
45.4838 291.656 l
45.4838 289.937 l
46.4005 289.552 47.2443 289.359 48.0151 289.359  c
48.8588 289.359 49.5542 289.599 50.1010 290.078  c
50.6479 290.557 50.9213 291.161 50.9213 291.890  c
50.9213 292.880 50.3068 293.796 49.0776 294.640  c
48.3120 295.171 l
47.0932 296.005 46.4266 296.916 46.3120 297.906  c
50.8745 297.906 l
50.8745 299.000 l
45.2807 299.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 241.440 m
50.8000 241.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 241 7 13 rc
newpath
26.7968 248.437 m
18.2031 248.437 l
18.2031 247.765 l
26.7968 247.765 l
26.7968 248.437 l
h
f
Q
newpath
28.9062 252.234 m
27.9375 252.234 27.1562 251.783 26.5625 250.882  c
25.9687 249.981 25.6718 248.796 25.6718 247.328  c
25.6718 245.817 25.9687 244.614 26.5625 243.718  c
27.1562 242.822 27.9531 242.375 28.9531 242.375  c
29.9531 242.375 30.7526 242.822 31.3515 243.718  c
31.9505 244.614 32.2500 245.812 32.2500 247.312  c
32.2500 248.822 31.9505 250.020 31.3515 250.906  c
30.7526 251.791 29.9375 252.234 28.9062 252.234  c
h
28.9218 251.843 m
30.2552 251.906 30.9218 250.369 30.9218 247.234  c
30.9218 244.244 30.2656 242.750 28.9531 242.750  c
27.6510 242.750 27.0000 244.265 27.0000 247.296  c
27.0000 250.265 27.6406 251.781 28.9218 251.843  c
h
34.4716 252.000 m
33.8466 252.000 l
33.8466 250.437 l
35.4091 250.437 l
35.4091 251.796 l
35.4091 252.338 35.3805 252.708 35.3232 252.906  c
35.2659 253.104 35.1279 253.317 34.9091 253.546  c
34.6175 253.849 34.2633 254.010 33.8466 254.031  c
33.8466 253.640 l
34.2633 253.609 34.4716 253.197 34.4716 252.406  c
34.4716 252.000 l
h
40.9340 242.515 m
40.9340 250.359 l
40.9809 250.984 l
40.9913 251.234 41.0616 251.398 41.1918 251.476  c
41.3221 251.554 41.5903 251.593 41.9965 251.593  c
42.7465 251.609 l
42.7465 252.000 l
37.8872 252.000 l
37.8872 251.609 l
38.6215 251.593 l
39.0278 251.593 39.2960 251.554 39.4262 251.476  c
39.5564 251.398 39.6320 251.234 39.6528 250.984  c
39.6840 250.359 l
39.6840 244.531 l
39.6528 243.890 l
39.6528 243.588 39.5642 243.437 39.3872 243.437  c
39.2622 243.437 38.9705 243.479 38.5122 243.562  c
37.8872 243.671 l
37.8872 243.281 l
40.9340 242.515 l
h
48.1713 252.234 m
47.2026 252.234 46.4213 251.783 45.8276 250.882  c
45.2338 249.981 44.9370 248.796 44.9370 247.328  c
44.9370 245.817 45.2338 244.614 45.8276 243.718  c
46.4213 242.822 47.2182 242.375 48.2182 242.375  c
49.2182 242.375 50.0177 242.822 50.6167 243.718  c
51.2156 244.614 51.5151 245.812 51.5151 247.312  c
51.5151 248.822 51.2156 250.020 50.6167 250.906  c
50.0177 251.791 49.2026 252.234 48.1713 252.234  c
h
48.1870 251.843 m
49.5203 251.906 50.1870 250.369 50.1870 247.234  c
50.1870 244.244 49.5307 242.750 48.2182 242.750  c
46.9161 242.750 46.2651 244.265 46.2651 247.296  c
46.2651 250.265 46.9057 251.781 48.1870 251.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 194.754 m
50.8000 194.754 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 194 7 13 rc
newpath
26.7968 201.437 m
18.2031 201.437 l
18.2031 200.765 l
26.7968 200.765 l
26.7968 201.437 l
h
f
Q
newpath
28.9062 205.234 m
27.9375 205.234 27.1562 204.783 26.5625 203.882  c
25.9687 202.981 25.6718 201.796 25.6718 200.328  c
25.6718 198.817 25.9687 197.614 26.5625 196.718  c
27.1562 195.822 27.9531 195.375 28.9531 195.375  c
29.9531 195.375 30.7526 195.822 31.3515 196.718  c
31.9505 197.614 32.2500 198.812 32.2500 200.312  c
32.2500 201.822 31.9505 203.020 31.3515 203.906  c
30.7526 204.791 29.9375 205.234 28.9062 205.234  c
h
28.9218 204.843 m
30.2552 204.906 30.9218 203.369 30.9218 200.234  c
30.9218 197.244 30.2656 195.750 28.9531 195.750  c
27.6510 195.750 27.0000 197.265 27.0000 200.296  c
27.0000 203.265 27.6406 204.781 28.9218 204.843  c
h
34.4716 205.000 m
33.8466 205.000 l
33.8466 203.437 l
35.4091 203.437 l
35.4091 204.796 l
35.4091 205.338 35.3805 205.708 35.3232 205.906  c
35.2659 206.104 35.1279 206.317 34.9091 206.546  c
34.6175 206.849 34.2633 207.010 33.8466 207.031  c
33.8466 206.640 l
34.2633 206.609 34.4716 206.197 34.4716 205.406  c
34.4716 205.000 l
h
40.2622 205.234 m
39.2934 205.234 38.5122 204.783 37.9184 203.882  c
37.3247 202.981 37.0278 201.796 37.0278 200.328  c
37.0278 198.817 37.3247 197.614 37.9184 196.718  c
38.5122 195.822 39.3090 195.375 40.3090 195.375  c
41.3090 195.375 42.1085 195.822 42.7075 196.718  c
43.3064 197.614 43.6059 198.812 43.6059 200.312  c
43.6059 201.822 43.3064 203.020 42.7075 203.906  c
42.1085 204.791 41.2934 205.234 40.2622 205.234  c
h
40.2778 204.843 m
41.6111 204.906 42.2778 203.369 42.2778 200.234  c
42.2778 197.244 41.6215 195.750 40.3090 195.750  c
39.0070 195.750 38.3559 197.265 38.3559 200.296  c
38.3559 203.265 38.9965 204.781 40.2778 204.843  c
h
46.9838 199.937 m
46.0151 199.270 45.5307 198.541 45.5307 197.750  c
45.5307 197.041 45.7885 196.466 46.3042 196.023  c
46.8198 195.580 47.4943 195.359 48.3276 195.359  c
49.1193 195.359 49.7521 195.546 50.2260 195.921  c
50.7000 196.296 50.9370 196.796 50.9370 197.421  c
50.9370 198.390 50.3172 199.187 49.0776 199.812  c
50.5776 200.447 51.3276 201.364 51.3276 202.562  c
51.3276 203.354 51.0307 203.997 50.4370 204.492  c
49.8432 204.987 49.0776 205.234 48.1401 205.234  c
47.2234 205.234 46.4812 205.002 45.9135 204.539  c
45.3458 204.075 45.0620 203.468 45.0620 202.718  c
45.0620 201.458 45.7026 200.531 46.9838 199.937  c
h
48.7338 199.609 m
49.4734 199.067 49.8432 198.349 49.8432 197.453  c
49.8432 196.942 49.6922 196.531 49.3901 196.218  c
49.0880 195.906 48.6922 195.750 48.2026 195.750  c
47.7651 195.750 47.3927 195.903 47.0854 196.210  c
46.7781 196.518 46.6245 196.895 46.6245 197.343  c
46.6245 197.781 46.7651 198.148 47.0463 198.445  c
47.3276 198.742 47.8901 199.130 48.7338 199.609  c
h
47.2651 200.218 m
46.6297 200.802 46.3120 201.583 46.3120 202.562  c
46.3120 203.260 46.4838 203.815 46.8276 204.226  c
47.1713 204.638 47.6297 204.843 48.2026 204.843  c
48.7443 204.843 49.1922 204.661 49.5463 204.296  c
49.9005 203.932 50.0776 203.474 50.0776 202.921  c
50.0776 202.463 49.9422 202.080 49.6713 201.773  c
49.4005 201.466 48.8953 201.109 48.1557 200.703  c
47.2651 200.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 148.067 m
50.8000 148.067 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 148 7 13 rc
newpath
26.7968 155.437 m
18.2031 155.437 l
18.2031 154.765 l
26.7968 154.765 l
26.7968 155.437 l
h
f
Q
newpath
28.9062 159.234 m
27.9375 159.234 27.1562 158.783 26.5625 157.882  c
25.9687 156.981 25.6718 155.796 25.6718 154.328  c
25.6718 152.817 25.9687 151.614 26.5625 150.718  c
27.1562 149.822 27.9531 149.375 28.9531 149.375  c
29.9531 149.375 30.7526 149.822 31.3515 150.718  c
31.9505 151.614 32.2500 152.812 32.2500 154.312  c
32.2500 155.822 31.9505 157.020 31.3515 157.906  c
30.7526 158.791 29.9375 159.234 28.9062 159.234  c
h
28.9218 158.843 m
30.2552 158.906 30.9218 157.369 30.9218 154.234  c
30.9218 151.244 30.2656 149.750 28.9531 149.750  c
27.6510 149.750 27.0000 151.265 27.0000 154.296  c
27.0000 157.265 27.6406 158.781 28.9218 158.843  c
h
34.4716 159.000 m
33.8466 159.000 l
33.8466 157.437 l
35.4091 157.437 l
35.4091 158.796 l
35.4091 159.338 35.3805 159.708 35.3232 159.906  c
35.2659 160.104 35.1279 160.317 34.9091 160.546  c
34.6175 160.849 34.2633 161.010 33.8466 161.031  c
33.8466 160.640 l
34.2633 160.609 34.4716 160.197 34.4716 159.406  c
34.4716 159.000 l
h
40.2622 159.234 m
39.2934 159.234 38.5122 158.783 37.9184 157.882  c
37.3247 156.981 37.0278 155.796 37.0278 154.328  c
37.0278 152.817 37.3247 151.614 37.9184 150.718  c
38.5122 149.822 39.3090 149.375 40.3090 149.375  c
41.3090 149.375 42.1085 149.822 42.7075 150.718  c
43.3064 151.614 43.6059 152.812 43.6059 154.312  c
43.6059 155.822 43.3064 157.020 42.7075 157.906  c
42.1085 158.791 41.2934 159.234 40.2622 159.234  c
h
40.2778 158.843 m
41.6111 158.906 42.2778 157.369 42.2778 154.234  c
42.2778 151.244 41.6215 149.750 40.3090 149.750  c
39.0070 149.750 38.3559 151.265 38.3559 154.296  c
38.3559 157.265 38.9965 158.781 40.2778 158.843  c
h
46.3745 154.187 m
46.9682 153.375 47.7234 152.968 48.6401 152.968  c
49.4630 152.968 50.1349 153.242 50.6557 153.789  c
51.1766 154.335 51.4370 155.046 51.4370 155.921  c
51.4370 156.859 51.1401 157.645 50.5463 158.281  c
49.9526 158.916 49.2234 159.234 48.3588 159.234  c
47.2963 159.234 46.4786 158.820 45.9057 157.992  c
45.3328 157.164 45.0463 155.984 45.0463 154.453  c
45.0463 152.838 45.3771 151.585 46.0385 150.695  c
46.7000 149.804 47.6349 149.359 48.8432 149.359  c
49.6245 149.359 50.3120 149.500 50.9057 149.781  c
50.9057 151.281 l
50.2807 151.281 l
50.2651 151.156 l
50.2338 150.703 l
50.2130 150.421 50.0620 150.192 49.7807 150.015  c
49.4995 149.838 49.1453 149.750 48.7182 149.750  c
47.9786 149.750 47.4031 150.138 46.9917 150.914  c
46.5802 151.690 46.3745 152.781 46.3745 154.187  c
h
46.4213 155.531 m
46.4213 156.500 46.6167 157.291 47.0073 157.906  c
47.3979 158.520 47.9005 158.828 48.5151 158.828  c
49.6193 158.828 50.1713 157.916 50.1713 156.093  c
50.1713 154.302 49.5984 153.406 48.4526 153.406  c
47.8276 153.406 47.3328 153.599 46.9682 153.984  c
46.6036 154.369 46.4213 154.885 46.4213 155.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 101.381 m
50.8000 101.381 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 101 7 13 rc
newpath
26.7968 108.437 m
18.2031 108.437 l
18.2031 107.765 l
26.7968 107.765 l
26.7968 108.437 l
h
f
Q
newpath
28.9062 112.234 m
27.9375 112.234 27.1562 111.783 26.5625 110.882  c
25.9687 109.981 25.6718 108.796 25.6718 107.328  c
25.6718 105.817 25.9687 104.614 26.5625 103.718  c
27.1562 102.822 27.9531 102.375 28.9531 102.375  c
29.9531 102.375 30.7526 102.822 31.3515 103.718  c
31.9505 104.614 32.2500 105.812 32.2500 107.312  c
32.2500 108.822 31.9505 110.020 31.3515 110.906  c
30.7526 111.791 29.9375 112.234 28.9062 112.234  c
h
28.9218 111.843 m
30.2552 111.906 30.9218 110.369 30.9218 107.234  c
30.9218 104.244 30.2656 102.750 28.9531 102.750  c
27.6510 102.750 27.0000 104.265 27.0000 107.296  c
27.0000 110.265 27.6406 111.781 28.9218 111.843  c
h
34.4716 112.000 m
33.8466 112.000 l
33.8466 110.437 l
35.4091 110.437 l
35.4091 111.796 l
35.4091 112.338 35.3805 112.708 35.3232 112.906  c
35.2659 113.104 35.1279 113.317 34.9091 113.546  c
34.6175 113.849 34.2633 114.010 33.8466 114.031  c
33.8466 113.640 l
34.2633 113.609 34.4716 113.197 34.4716 112.406  c
34.4716 112.000 l
h
40.2622 112.234 m
39.2934 112.234 38.5122 111.783 37.9184 110.882  c
37.3247 109.981 37.0278 108.796 37.0278 107.328  c
37.0278 105.817 37.3247 104.614 37.9184 103.718  c
38.5122 102.822 39.3090 102.375 40.3090 102.375  c
41.3090 102.375 42.1085 102.822 42.7075 103.718  c
43.3064 104.614 43.6059 105.812 43.6059 107.312  c
43.6059 108.822 43.3064 110.020 42.7075 110.906  c
42.1085 111.791 41.2934 112.234 40.2622 112.234  c
h
40.2778 111.843 m
41.6111 111.906 42.2778 110.369 42.2778 107.234  c
42.2778 104.244 41.6215 102.750 40.3090 102.750  c
39.0070 102.750 38.3559 104.265 38.3559 107.296  c
38.3559 110.265 38.9965 111.781 40.2778 111.843  c
h
48.9682 109.343 m
44.6557 109.343 l
44.6557 108.718 l
49.3588 102.453 l
50.0620 102.453 l
50.0620 108.390 l
51.3120 108.390 l
51.3120 109.343 l
50.0620 109.343 l
50.0620 110.359 l
50.0620 110.859 50.1010 111.182 50.1792 111.328  c
50.2573 111.474 50.4266 111.552 50.6870 111.562  c
51.1245 111.593 l
51.2338 111.609 l
51.2338 112.000 l
47.6401 112.000 l
47.6401 111.609 l
47.7495 111.593 l
48.4057 111.562 l
48.6349 111.552 48.7859 111.468 48.8588 111.312  c
48.9318 111.156 48.9682 110.838 48.9682 110.359  c
48.9682 109.343 l
h
45.3588 108.390 m
48.9682 108.390 l
48.9682 103.609 l
45.3588 108.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 54.6944 m
50.8000 54.6944 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 54 7 13 rc
newpath
26.7968 61.4375 m
18.2031 61.4375 l
18.2031 60.7656 l
26.7968 60.7656 l
26.7968 61.4375 l
h
f
Q
newpath
28.9062 65.2343 m
27.9375 65.2343 27.1562 64.7838 26.5625 63.8828  c
25.9687 62.9817 25.6718 61.7968 25.6718 60.3281  c
25.6718 58.8177 25.9687 57.6145 26.5625 56.7187  c
27.1562 55.8229 27.9531 55.3750 28.9531 55.3750  c
29.9531 55.3750 30.7526 55.8229 31.3515 56.7187  c
31.9505 57.6145 32.2500 58.8125 32.2500 60.3125  c
32.2500 61.8229 31.9505 63.0208 31.3515 63.9062  c
30.7526 64.7916 29.9375 65.2343 28.9062 65.2343  c
h
28.9218 64.8437 m
30.2552 64.9062 30.9218 63.3697 30.9218 60.2343  c
30.9218 57.2447 30.2656 55.7500 28.9531 55.7500  c
27.6510 55.7500 27.0000 57.2656 27.0000 60.2968  c
27.0000 63.2656 27.6406 64.7812 28.9218 64.8437  c
h
34.4716 65.0000 m
33.8466 65.0000 l
33.8466 63.4375 l
35.4091 63.4375 l
35.4091 64.7968 l
35.4091 65.3385 35.3805 65.7083 35.3232 65.9062  c
35.2659 66.1041 35.1279 66.3177 34.9091 66.5468  c
34.6175 66.8489 34.2633 67.0104 33.8466 67.0312  c
33.8466 66.6406 l
34.2633 66.6093 34.4716 66.1979 34.4716 65.4062  c
34.4716 65.0000 l
h
40.2622 65.2343 m
39.2934 65.2343 38.5122 64.7838 37.9184 63.8828  c
37.3247 62.9817 37.0278 61.7968 37.0278 60.3281  c
37.0278 58.8177 37.3247 57.6145 37.9184 56.7187  c
38.5122 55.8229 39.3090 55.3750 40.3090 55.3750  c
41.3090 55.3750 42.1085 55.8229 42.7075 56.7187  c
43.3064 57.6145 43.6059 58.8125 43.6059 60.3125  c
43.6059 61.8229 43.3064 63.0208 42.7075 63.9062  c
42.1085 64.7916 41.2934 65.2343 40.2622 65.2343  c
h
40.2778 64.8437 m
41.6111 64.9062 42.2778 63.3697 42.2778 60.2343  c
42.2778 57.2447 41.6215 55.7500 40.3090 55.7500  c
39.0070 55.7500 38.3559 57.2656 38.3559 60.2968  c
38.3559 63.2656 38.9965 64.7812 40.2778 64.8437  c
h
45.2807 65.0000 m
45.2807 64.3750 l
45.6453 63.3229 46.2078 62.4375 46.9682 61.7187  c
47.6557 61.0937 l
48.4266 60.3645 48.9422 59.7864 49.2026 59.3593  c
49.4630 58.9322 49.5932 58.4427 49.5932 57.8906  c
49.5932 57.2447 49.4344 56.7291 49.1167 56.3437  c
48.7989 55.9583 48.3797 55.7656 47.8588 55.7656  c
47.2859 55.7656 46.8016 55.9218 46.4057 56.2343  c
46.2599 56.3489 46.1661 56.7708 46.1245 57.5000  c
46.1245 57.6562 l
45.4838 57.6562 l
45.4838 55.9375 l
46.4005 55.5520 47.2443 55.3593 48.0151 55.3593  c
48.8588 55.3593 49.5542 55.5989 50.1010 56.0781  c
50.6479 56.5572 50.9213 57.1614 50.9213 57.8906  c
50.9213 58.8802 50.3068 59.7968 49.0776 60.6406  c
48.3120 61.1718 l
47.0932 62.0052 46.4266 62.9166 46.3120 63.9062  c
50.8745 63.9062 l
50.8745 65.0000 l
45.2807 65.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.0000 8.00793 m
50.8000 8.00793 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
47.9062 19.2343 m
46.9375 19.2343 46.1562 18.7838 45.5625 17.8828  c
44.9687 16.9817 44.6718 15.7968 44.6718 14.3281  c
44.6718 12.8177 44.9687 11.6145 45.5625 10.7187  c
46.1562 9.82291 46.9531 9.37500 47.9531 9.37500  c
48.9531 9.37500 49.7526 9.82291 50.3515 10.7187  c
50.9505 11.6145 51.2500 12.8125 51.2500 14.3125  c
51.2500 15.8229 50.9505 17.0208 50.3515 17.9062  c
49.7526 18.7916 48.9375 19.2343 47.9062 19.2343  c
h
47.9218 18.8437 m
49.2552 18.9062 49.9218 17.3697 49.9218 14.2343  c
49.9218 11.2447 49.2656 9.75000 47.9531 9.75000  c
46.6510 9.75000 46.0000 11.2656 46.0000 14.2968  c
46.0000 17.2656 46.6406 18.7812 47.9218 18.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 456 495 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
