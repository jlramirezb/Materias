%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: s√°bado 20 de marzo de 2010 08:08:07 PM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
8.50000 -1.00000 379.494 354.000 rc
newpath
9.50000 344.375 m
17.7065 342.535 l
24.8469 340.735 l
32.8771 338.454 l
40.9605 335.834 l
49.0055 332.842 l
56.4642 329.661 l
64.1873 325.871 l
72.1745 321.315 l
80.1361 315.989 l
88.3256 309.506 l
95.5390 302.760 l
103.659 293.730 l
111.813 282.762 l
119.671 269.938 l
126.806 255.924 l
135.291 235.651 l
142.479 214.807 l
150.840 185.656 l
154.540 170.966 l
158.241 155.199 l
162.301 136.767 l
166.361 117.374 l
170.227 98.3658 l
174.093 79.3188 l
178.127 60.1059 l
182.161 42.4617 l
185.865 28.5122 l
189.570 17.5393 l
191.568 13.1101 l
193.565 9.84295 l
194.564 8.66723 l
195.563 7.80557 l
196.562 7.26257 l
197.561 7.04113 l
198.599 7.15292 l
199.636 7.61230 l
200.674 8.41659 l
201.711 9.56118 l
203.787 12.8431 l
205.862 17.3846 l
209.475 27.9924 l
213.088 41.4621 l
216.990 58.3753 l
220.892 76.8414 l
228.954 116.504 l
232.898 135.386 l
236.842 153.383 l
240.657 169.744 l
244.473 184.964 l
252.947 214.590 l
260.561 236.595 l
268.690 255.928 l
276.056 270.355 l
284.110 283.394 l
291.687 293.550 l
299.608 302.408 l
307.352 309.665 l
315.460 316.063 l
323.268 321.283 l
331.253 325.843 l
339.172 329.725 l
346.449 332.826 l
354.789 335.922 l
362.248 338.342 l
370.202 340.616 l
377.814 342.541 l
385.994 344.375 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
8.50000 -1.00000 379.494 354.000 rc
newpath
9.50000 344.375 m
17.7065 343.812 l
24.8469 344.814 l
32.8771 346.909 l
40.9605 349.322 l
49.0055 351.266 l
56.4642 352.000 l
64.1873 351.017 l
72.1745 347.433 l
80.1361 340.534 l
88.3256 329.198 l
95.5390 315.025 l
103.659 293.666 l
111.813 266.123 l
119.671 234.988 l
123.238 219.776 l
126.806 204.089 l
131.049 185.014 l
138.885 149.338 l
142.479 133.118 l
146.659 114.624 l
150.840 96.7492 l
154.540 81.6242 l
158.241 67.3183 l
166.361 39.5678 l
174.093 19.0314 l
178.127 11.0858 l
182.161 5.30410 l
184.013 3.43014 l
185.865 2.07498 l
187.718 1.25839 l
189.570 1.00000 l
190.569 1.09930 l
191.568 1.36978 l
192.567 1.81454 l
193.565 2.43670 l
195.563 4.22549 l
197.561 6.76089 l
201.711 14.4265 l
205.862 25.0149 l
213.088 49.1272 l
216.990 64.4737 l
220.892 80.9864 l
224.923 98.8860 l
228.954 117.244 l
232.898 135.266 l
236.842 152.971 l
240.657 169.449 l
244.473 184.942 l
252.947 214.818 l
260.561 236.755 l
268.690 255.888 l
276.056 270.115 l
284.110 283.076 l
291.687 293.536 l
299.608 303.329 l
307.352 311.912 l
315.460 319.849 l
323.268 326.486 l
331.253 332.253 l
339.172 336.959 l
346.449 340.396 l
354.789 343.296 l
362.248 344.953 l
370.202 345.748 l
377.814 345.575 l
385.994 344.375 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
362.463 355.000 m
362.463 357.600 l
S
newpath
315.402 355.000 m
315.402 357.600 l
S
newpath
268.340 355.000 m
268.340 357.600 l
S
newpath
221.278 355.000 m
221.278 357.600 l
S
newpath
174.216 355.000 m
174.216 357.600 l
S
newpath
127.154 355.000 m
127.154 357.600 l
S
newpath
80.0927 355.000 m
80.0927 357.600 l
S
newpath
33.0309 355.000 m
33.0309 357.600 l
S
newpath
9.50000 355.000 m
385.994 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
190 375 15 15 rc
newpath
197.375 384.500 m
196.593 382.750 l
196.281 382.109 l
196.166 381.859 196.072 381.703 196.000 381.640  c
195.927 381.578 195.786 381.541 195.578 381.531  c
195.203 381.500 l
195.078 381.500 l
195.156 381.109 l
197.218 381.109 l
198.468 383.812 l
198.765 383.578 l
199.588 382.911 200.000 382.354 200.000 381.906  c
200.000 381.677 199.906 381.411 199.718 381.109  c
200.968 381.109 l
201.020 381.255 201.046 381.385 201.046 381.500  c
201.046 381.864 200.916 382.195 200.656 382.492  c
200.395 382.789 199.822 383.270 198.937 383.937  c
198.625 384.171 l
199.671 386.359 l
200.062 387.062 l
200.218 387.385 200.432 387.557 200.703 387.578  c
201.109 387.593 l
201.218 387.609 l
201.140 388.000 l
199.062 388.000 l
197.578 384.859 l
197.031 385.343 l
196.166 386.125 195.734 386.796 195.734 387.359  c
195.734 387.578 195.807 387.791 195.953 388.000  c
194.609 388.000 l
194.588 387.885 194.578 387.796 194.578 387.734  c
194.578 387.192 194.974 386.572 195.765 385.875  c
196.750 385.046 l
197.375 384.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
9.50000 355.000 m
9.50000 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 369 7 13 rc
newpath
16.7968 376.437 m
8.20312 376.437 l
8.20312 375.765 l
16.7968 375.765 l
16.7968 376.437 l
h
f
Q
newpath
19.7031 377.343 m
15.3906 377.343 l
15.3906 376.718 l
20.0937 370.453 l
20.7968 370.453 l
20.7968 376.390 l
22.0468 376.390 l
22.0468 377.343 l
20.7968 377.343 l
20.7968 378.359 l
20.7968 378.859 20.8359 379.182 20.9140 379.328  c
20.9921 379.474 21.1614 379.552 21.4218 379.562  c
21.8593 379.593 l
21.9687 379.609 l
21.9687 380.000 l
18.3750 380.000 l
18.3750 379.609 l
18.4843 379.593 l
19.1406 379.562 l
19.3697 379.552 19.5208 379.468 19.5937 379.312  c
19.6666 379.156 19.7031 378.838 19.7031 378.359  c
19.7031 377.343 l
h
16.0937 376.390 m
19.7031 376.390 l
19.7031 371.609 l
16.0937 376.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.5618 355.000 m
56.5618 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 369 7 13 rc
newpath
63.7968 376.437 m
55.2031 376.437 l
55.2031 375.765 l
63.7968 375.765 l
63.7968 376.437 l
h
f
Q
newpath
63.1718 379.937 m
63.1718 378.281 l
63.7968 378.281 l
63.8125 378.421 l
63.8281 378.859 l
63.8281 379.130 63.9869 379.362 64.3046 379.554  c
64.6224 379.747 65.0156 379.843 65.4843 379.843  c
66.0364 379.843 66.4817 379.625 66.8203 379.187  c
67.1588 378.750 67.3281 378.171 67.3281 377.453  c
67.3281 376.744 67.1067 376.190 66.6640 375.789  c
66.2213 375.388 65.6041 375.187 64.8125 375.187  c
64.0312 375.187 l
64.0312 374.796 l
64.4531 374.796 l
66.2239 374.796 67.1093 374.083 67.1093 372.656  c
67.1093 371.385 66.5520 370.750 65.4375 370.750  c
64.9479 370.750 64.5208 370.854 64.1562 371.062  c
64.0208 371.145 63.9270 371.484 63.8750 372.078  c
63.8750 372.171 l
63.2500 372.171 l
63.2500 370.734 l
63.9270 370.484 64.6927 370.359 65.5468 370.359  c
66.4114 370.359 67.0963 370.554 67.6015 370.945  c
68.1067 371.335 68.3593 371.864 68.3593 372.531  c
68.3593 373.645 67.7031 374.442 66.3906 374.921  c
67.1927 375.130 67.7682 375.427 68.1171 375.812  c
68.4661 376.197 68.6406 376.734 68.6406 377.421  c
68.6406 378.286 68.3593 378.971 67.7968 379.476  c
67.2343 379.981 66.4687 380.234 65.5000 380.234  c
64.6145 380.234 63.8385 380.135 63.1718 379.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.623 355.000 m
103.623 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 369 7 13 rc
newpath
110.796 376.437 m
102.203 376.437 l
102.203 375.765 l
110.796 375.765 l
110.796 376.437 l
h
f
Q
newpath
110.015 380.000 m
110.015 379.375 l
110.380 378.322 110.942 377.437 111.703 376.718  c
112.390 376.093 l
113.161 375.364 113.677 374.786 113.937 374.359  c
114.197 373.932 114.328 373.442 114.328 372.890  c
114.328 372.244 114.169 371.729 113.851 371.343  c
113.533 370.958 113.114 370.765 112.593 370.765  c
112.020 370.765 111.536 370.921 111.140 371.234  c
110.994 371.349 110.901 371.770 110.859 372.500  c
110.859 372.656 l
110.218 372.656 l
110.218 370.937 l
111.135 370.552 111.979 370.359 112.750 370.359  c
113.593 370.359 114.289 370.599 114.835 371.078  c
115.382 371.557 115.656 372.161 115.656 372.890  c
115.656 373.880 115.041 374.796 113.812 375.640  c
113.046 376.171 l
111.828 377.005 111.161 377.916 111.046 378.906  c
115.609 378.906 l
115.609 380.000 l
110.015 380.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.685 355.000 m
150.685 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 369 7 13 rc
newpath
157.796 376.437 m
149.203 376.437 l
149.203 375.765 l
157.796 375.765 l
157.796 376.437 l
h
f
Q
newpath
160.578 370.515 m
160.578 378.359 l
160.625 378.984 l
160.635 379.234 160.705 379.398 160.835 379.476  c
160.966 379.554 161.234 379.593 161.640 379.593  c
162.390 379.609 l
162.390 380.000 l
157.531 380.000 l
157.531 379.609 l
158.265 379.593 l
158.671 379.593 158.940 379.554 159.070 379.476  c
159.200 379.398 159.276 379.234 159.296 378.984  c
159.328 378.359 l
159.328 372.531 l
159.296 371.890 l
159.296 371.588 159.208 371.437 159.031 371.437  c
158.906 371.437 158.614 371.479 158.156 371.562  c
157.531 371.671 l
157.531 371.281 l
160.578 370.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 355.000 m
197.747 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
201.906 380.234 m
200.937 380.234 200.156 379.783 199.562 378.882  c
198.968 377.981 198.671 376.796 198.671 375.328  c
198.671 373.817 198.968 372.614 199.562 371.718  c
200.156 370.822 200.953 370.375 201.953 370.375  c
202.953 370.375 203.752 370.822 204.351 371.718  c
204.950 372.614 205.250 373.812 205.250 375.312  c
205.250 376.822 204.950 378.020 204.351 378.906  c
203.752 379.791 202.937 380.234 201.906 380.234  c
h
201.921 379.843 m
203.255 379.906 203.921 378.369 203.921 375.234  c
203.921 372.244 203.265 370.750 201.953 370.750  c
200.651 370.750 200.000 372.265 200.000 375.296  c
200.000 378.265 200.640 379.781 201.921 379.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
244.809 355.000 m
244.809 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
249.578 370.515 m
249.578 378.359 l
249.625 378.984 l
249.635 379.234 249.705 379.398 249.835 379.476  c
249.966 379.554 250.234 379.593 250.640 379.593  c
251.390 379.609 l
251.390 380.000 l
246.531 380.000 l
246.531 379.609 l
247.265 379.593 l
247.671 379.593 247.940 379.554 248.070 379.476  c
248.200 379.398 248.276 379.234 248.296 378.984  c
248.328 378.359 l
248.328 372.531 l
248.296 371.890 l
248.296 371.588 248.208 371.437 248.031 371.437  c
247.906 371.437 247.614 371.479 247.156 371.562  c
246.531 371.671 l
246.531 371.281 l
249.578 370.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.871 355.000 m
291.871 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
293.015 380.000 m
293.015 379.375 l
293.380 378.322 293.942 377.437 294.703 376.718  c
295.390 376.093 l
296.161 375.364 296.677 374.786 296.937 374.359  c
297.197 373.932 297.328 373.442 297.328 372.890  c
297.328 372.244 297.169 371.729 296.851 371.343  c
296.533 370.958 296.114 370.765 295.593 370.765  c
295.020 370.765 294.536 370.921 294.140 371.234  c
293.994 371.349 293.901 371.770 293.859 372.500  c
293.859 372.656 l
293.218 372.656 l
293.218 370.937 l
294.135 370.552 294.979 370.359 295.750 370.359  c
296.593 370.359 297.289 370.599 297.835 371.078  c
298.382 371.557 298.656 372.161 298.656 372.890  c
298.656 373.880 298.041 374.796 296.812 375.640  c
296.046 376.171 l
294.828 377.005 294.161 377.916 294.046 378.906  c
298.609 378.906 l
298.609 380.000 l
293.015 380.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
338.933 355.000 m
338.933 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.171 379.937 m
340.171 378.281 l
340.796 378.281 l
340.812 378.421 l
340.828 378.859 l
340.828 379.130 340.987 379.362 341.304 379.554  c
341.622 379.747 342.015 379.843 342.484 379.843  c
343.036 379.843 343.481 379.625 343.820 379.187  c
344.158 378.750 344.328 378.171 344.328 377.453  c
344.328 376.744 344.106 376.190 343.664 375.789  c
343.221 375.388 342.604 375.187 341.812 375.187  c
341.031 375.187 l
341.031 374.796 l
341.453 374.796 l
343.224 374.796 344.109 374.083 344.109 372.656  c
344.109 371.385 343.552 370.750 342.437 370.750  c
341.947 370.750 341.520 370.854 341.156 371.062  c
341.020 371.145 340.927 371.484 340.875 372.078  c
340.875 372.171 l
340.250 372.171 l
340.250 370.734 l
340.927 370.484 341.692 370.359 342.546 370.359  c
343.411 370.359 344.096 370.554 344.601 370.945  c
345.106 371.335 345.359 371.864 345.359 372.531  c
345.359 373.645 344.703 374.442 343.390 374.921  c
344.192 375.130 344.768 375.427 345.117 375.812  c
345.466 376.197 345.640 376.734 345.640 377.421  c
345.640 378.286 345.359 378.971 344.796 379.476  c
344.234 379.981 343.468 380.234 342.500 380.234  c
341.614 380.234 340.838 380.135 340.171 379.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 355.000 m
385.994 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
390.703 377.343 m
386.390 377.343 l
386.390 376.718 l
391.093 370.453 l
391.796 370.453 l
391.796 376.390 l
393.046 376.390 l
393.046 377.343 l
391.796 377.343 l
391.796 378.359 l
391.796 378.859 391.835 379.182 391.914 379.328  c
391.992 379.474 392.161 379.552 392.421 379.562  c
392.859 379.593 l
392.968 379.609 l
392.968 380.000 l
389.375 380.000 l
389.375 379.609 l
389.484 379.593 l
390.140 379.562 l
390.369 379.552 390.520 379.468 390.593 379.312  c
390.666 379.156 390.703 378.838 390.703 378.359  c
390.703 377.343 l
h
387.093 376.390 m
390.703 376.390 l
390.703 371.609 l
387.093 376.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.747 24.9567 m
195.147 24.9567 l
S
newpath
197.747 60.7990 m
195.147 60.7990 l
S
newpath
197.747 132.483 m
195.147 132.483 l
S
newpath
197.747 168.326 m
195.147 168.326 l
S
newpath
197.747 96.6413 m
195.147 96.6413 l
S
newpath
197.747 204.168 m
195.147 204.168 l
S
newpath
197.747 240.010 m
195.147 240.010 l
S
newpath
197.747 275.853 m
195.147 275.853 l
S
newpath
197.747 311.695 m
195.147 311.695 l
S
newpath
197.747 347.537 m
195.147 347.537 l
S
newpath
197.747 355.000 m
197.747 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
156 176 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.747 329.616 m
192.547 329.616 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 340.234 m
176.937 340.234 176.156 339.783 175.562 338.882  c
174.968 337.981 174.671 336.796 174.671 335.328  c
174.671 333.817 174.968 332.614 175.562 331.718  c
176.156 330.822 176.953 330.375 177.953 330.375  c
178.953 330.375 179.752 330.822 180.351 331.718  c
180.950 332.614 181.250 333.812 181.250 335.312  c
181.250 336.822 180.950 338.020 180.351 338.906  c
179.752 339.791 178.937 340.234 177.906 340.234  c
h
177.921 339.843 m
179.255 339.906 179.921 338.369 179.921 335.234  c
179.921 332.244 179.265 330.750 177.953 330.750  c
176.651 330.750 176.000 332.265 176.000 335.296  c
176.000 338.265 176.640 339.781 177.921 339.843  c
h
183.471 340.000 m
182.846 340.000 l
182.846 338.437 l
184.409 338.437 l
184.409 339.796 l
184.409 340.338 184.380 340.708 184.323 340.906  c
184.266 341.104 184.127 341.317 183.909 341.546  c
183.617 341.849 183.263 342.010 182.846 342.031  c
182.846 341.640 l
183.263 341.609 183.471 341.197 183.471 340.406  c
183.471 340.000 l
h
189.934 330.515 m
189.934 338.359 l
189.981 338.984 l
189.991 339.234 190.061 339.398 190.191 339.476  c
190.322 339.554 190.590 339.593 190.996 339.593  c
191.746 339.609 l
191.746 340.000 l
186.887 340.000 l
186.887 339.609 l
187.621 339.593 l
188.027 339.593 188.296 339.554 188.426 339.476  c
188.556 339.398 188.632 339.234 188.652 338.984  c
188.684 338.359 l
188.684 332.531 l
188.652 331.890 l
188.652 331.588 188.564 331.437 188.387 331.437  c
188.262 331.437 187.970 331.479 187.512 331.562  c
186.887 331.671 l
186.887 331.281 l
189.934 330.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 293.774 m
192.547 293.774 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 304.234 m
176.937 304.234 176.156 303.783 175.562 302.882  c
174.968 301.981 174.671 300.796 174.671 299.328  c
174.671 297.817 174.968 296.614 175.562 295.718  c
176.156 294.822 176.953 294.375 177.953 294.375  c
178.953 294.375 179.752 294.822 180.351 295.718  c
180.950 296.614 181.250 297.812 181.250 299.312  c
181.250 300.822 180.950 302.020 180.351 302.906  c
179.752 303.791 178.937 304.234 177.906 304.234  c
h
177.921 303.843 m
179.255 303.906 179.921 302.369 179.921 299.234  c
179.921 296.244 179.265 294.750 177.953 294.750  c
176.651 294.750 176.000 296.265 176.000 299.296  c
176.000 302.265 176.640 303.781 177.921 303.843  c
h
183.471 304.000 m
182.846 304.000 l
182.846 302.437 l
184.409 302.437 l
184.409 303.796 l
184.409 304.338 184.380 304.708 184.323 304.906  c
184.266 305.104 184.127 305.317 183.909 305.546  c
183.617 305.849 183.263 306.010 182.846 306.031  c
182.846 305.640 l
183.263 305.609 183.471 305.197 183.471 304.406  c
183.471 304.000 l
h
186.371 304.000 m
186.371 303.375 l
186.736 302.322 187.298 301.437 188.059 300.718  c
188.746 300.093 l
189.517 299.364 190.033 298.786 190.293 298.359  c
190.553 297.932 190.684 297.442 190.684 296.890  c
190.684 296.244 190.525 295.729 190.207 295.343  c
189.889 294.958 189.470 294.765 188.949 294.765  c
188.376 294.765 187.892 294.921 187.496 295.234  c
187.350 295.349 187.257 295.770 187.215 296.500  c
187.215 296.656 l
186.574 296.656 l
186.574 294.937 l
187.491 294.552 188.335 294.359 189.106 294.359  c
189.949 294.359 190.645 294.599 191.191 295.078  c
191.738 295.557 192.012 296.161 192.012 296.890  c
192.012 297.880 191.397 298.796 190.168 299.640  c
189.402 300.171 l
188.184 301.005 187.517 301.916 187.402 302.906  c
191.965 302.906 l
191.965 304.000 l
186.371 304.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 257.931 m
192.547 257.931 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 268.234 m
176.937 268.234 176.156 267.783 175.562 266.882  c
174.968 265.981 174.671 264.796 174.671 263.328  c
174.671 261.817 174.968 260.614 175.562 259.718  c
176.156 258.822 176.953 258.375 177.953 258.375  c
178.953 258.375 179.752 258.822 180.351 259.718  c
180.950 260.614 181.250 261.812 181.250 263.312  c
181.250 264.822 180.950 266.020 180.351 266.906  c
179.752 267.791 178.937 268.234 177.906 268.234  c
h
177.921 267.843 m
179.255 267.906 179.921 266.369 179.921 263.234  c
179.921 260.244 179.265 258.750 177.953 258.750  c
176.651 258.750 176.000 260.265 176.000 263.296  c
176.000 266.265 176.640 267.781 177.921 267.843  c
h
183.471 268.000 m
182.846 268.000 l
182.846 266.437 l
184.409 266.437 l
184.409 267.796 l
184.409 268.338 184.380 268.708 184.323 268.906  c
184.266 269.104 184.127 269.317 183.909 269.546  c
183.617 269.849 183.263 270.010 182.846 270.031  c
182.846 269.640 l
183.263 269.609 183.471 269.197 183.471 268.406  c
183.471 268.000 l
h
186.527 267.937 m
186.527 266.281 l
187.152 266.281 l
187.168 266.421 l
187.184 266.859 l
187.184 267.130 187.342 267.362 187.660 267.554  c
187.978 267.747 188.371 267.843 188.840 267.843  c
189.392 267.843 189.837 267.625 190.176 267.187  c
190.514 266.750 190.684 266.171 190.684 265.453  c
190.684 264.744 190.462 264.190 190.020 263.789  c
189.577 263.388 188.960 263.187 188.168 263.187  c
187.387 263.187 l
187.387 262.796 l
187.809 262.796 l
189.579 262.796 190.465 262.083 190.465 260.656  c
190.465 259.385 189.908 258.750 188.793 258.750  c
188.303 258.750 187.876 258.854 187.512 259.062  c
187.376 259.145 187.283 259.484 187.231 260.078  c
187.231 260.171 l
186.606 260.171 l
186.606 258.734 l
187.283 258.484 188.048 258.359 188.902 258.359  c
189.767 258.359 190.452 258.554 190.957 258.945  c
191.462 259.335 191.715 259.864 191.715 260.531  c
191.715 261.645 191.059 262.442 189.746 262.921  c
190.548 263.130 191.124 263.427 191.473 263.812  c
191.822 264.197 191.996 264.734 191.996 265.421  c
191.996 266.286 191.715 266.971 191.152 267.476  c
190.590 267.981 189.824 268.234 188.856 268.234  c
187.970 268.234 187.194 268.135 186.527 267.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 222.089 m
192.547 222.089 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 233.234 m
176.937 233.234 176.156 232.783 175.562 231.882  c
174.968 230.981 174.671 229.796 174.671 228.328  c
174.671 226.817 174.968 225.614 175.562 224.718  c
176.156 223.822 176.953 223.375 177.953 223.375  c
178.953 223.375 179.752 223.822 180.351 224.718  c
180.950 225.614 181.250 226.812 181.250 228.312  c
181.250 229.822 180.950 231.020 180.351 231.906  c
179.752 232.791 178.937 233.234 177.906 233.234  c
h
177.921 232.843 m
179.255 232.906 179.921 231.369 179.921 228.234  c
179.921 225.244 179.265 223.750 177.953 223.750  c
176.651 223.750 176.000 225.265 176.000 228.296  c
176.000 231.265 176.640 232.781 177.921 232.843  c
h
183.471 233.000 m
182.846 233.000 l
182.846 231.437 l
184.409 231.437 l
184.409 232.796 l
184.409 233.338 184.380 233.708 184.323 233.906  c
184.266 234.104 184.127 234.317 183.909 234.546  c
183.617 234.849 183.263 235.010 182.846 235.031  c
182.846 234.640 l
183.263 234.609 183.471 234.197 183.471 233.406  c
183.471 233.000 l
h
190.059 230.343 m
185.746 230.343 l
185.746 229.718 l
190.449 223.453 l
191.152 223.453 l
191.152 229.390 l
192.402 229.390 l
192.402 230.343 l
191.152 230.343 l
191.152 231.359 l
191.152 231.859 191.191 232.182 191.270 232.328  c
191.348 232.474 191.517 232.552 191.777 232.562  c
192.215 232.593 l
192.324 232.609 l
192.324 233.000 l
188.731 233.000 l
188.731 232.609 l
188.840 232.593 l
189.496 232.562 l
189.725 232.552 189.876 232.468 189.949 232.312  c
190.022 232.156 190.059 231.838 190.059 231.359  c
190.059 230.343 l
h
186.449 229.390 m
190.059 229.390 l
190.059 224.609 l
186.449 229.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 186.247 m
192.547 186.247 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 197.234 m
176.937 197.234 176.156 196.783 175.562 195.882  c
174.968 194.981 174.671 193.796 174.671 192.328  c
174.671 190.817 174.968 189.614 175.562 188.718  c
176.156 187.822 176.953 187.375 177.953 187.375  c
178.953 187.375 179.752 187.822 180.351 188.718  c
180.950 189.614 181.250 190.812 181.250 192.312  c
181.250 193.822 180.950 195.020 180.351 195.906  c
179.752 196.791 178.937 197.234 177.906 197.234  c
h
177.921 196.843 m
179.255 196.906 179.921 195.369 179.921 192.234  c
179.921 189.244 179.265 187.750 177.953 187.750  c
176.651 187.750 176.000 189.265 176.000 192.296  c
176.000 195.265 176.640 196.781 177.921 196.843  c
h
183.471 197.000 m
182.846 197.000 l
182.846 195.437 l
184.409 195.437 l
184.409 196.796 l
184.409 197.338 184.380 197.708 184.323 197.906  c
184.266 198.104 184.127 198.317 183.909 198.546  c
183.617 198.849 183.263 199.010 182.846 199.031  c
182.846 198.640 l
183.263 198.609 183.471 198.197 183.471 197.406  c
183.471 197.000 l
h
186.840 197.015 m
186.840 195.437 l
187.465 195.437 l
187.481 195.578 l
187.496 196.062 l
187.517 196.583 187.923 196.843 188.715 196.843  c
189.298 196.843 189.762 196.614 190.106 196.156  c
190.449 195.697 190.621 195.078 190.621 194.296  c
190.621 193.401 190.356 192.760 189.824 192.375  c
189.293 191.989 188.423 191.796 187.215 191.796  c
186.996 191.796 l
186.996 187.609 l
191.731 187.609 l
191.731 188.703 l
187.387 188.703 l
187.387 191.328 l
187.965 191.328 l
190.611 191.328 191.934 192.333 191.934 194.343  c
191.934 195.250 191.629 195.958 191.020 196.468  c
190.410 196.979 189.569 197.234 188.496 197.234  c
187.965 197.234 187.413 197.161 186.840 197.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 150.404 m
192.547 150.404 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 161.234 m
176.937 161.234 176.156 160.783 175.562 159.882  c
174.968 158.981 174.671 157.796 174.671 156.328  c
174.671 154.817 174.968 153.614 175.562 152.718  c
176.156 151.822 176.953 151.375 177.953 151.375  c
178.953 151.375 179.752 151.822 180.351 152.718  c
180.950 153.614 181.250 154.812 181.250 156.312  c
181.250 157.822 180.950 159.020 180.351 159.906  c
179.752 160.791 178.937 161.234 177.906 161.234  c
h
177.921 160.843 m
179.255 160.906 179.921 159.369 179.921 156.234  c
179.921 153.244 179.265 151.750 177.953 151.750  c
176.651 151.750 176.000 153.265 176.000 156.296  c
176.000 159.265 176.640 160.781 177.921 160.843  c
h
183.471 161.000 m
182.846 161.000 l
182.846 159.437 l
184.409 159.437 l
184.409 160.796 l
184.409 161.338 184.380 161.708 184.323 161.906  c
184.266 162.104 184.127 162.317 183.909 162.546  c
183.617 162.849 183.263 163.010 182.846 163.031  c
182.846 162.640 l
183.263 162.609 183.471 162.197 183.471 161.406  c
183.471 161.000 l
h
187.465 156.187 m
188.059 155.375 188.814 154.968 189.731 154.968  c
190.553 154.968 191.225 155.242 191.746 155.789  c
192.267 156.335 192.527 157.046 192.527 157.921  c
192.527 158.859 192.231 159.645 191.637 160.281  c
191.043 160.916 190.314 161.234 189.449 161.234  c
188.387 161.234 187.569 160.820 186.996 159.992  c
186.423 159.164 186.137 157.984 186.137 156.453  c
186.137 154.838 186.467 153.585 187.129 152.695  c
187.790 151.804 188.725 151.359 189.934 151.359  c
190.715 151.359 191.402 151.500 191.996 151.781  c
191.996 153.281 l
191.371 153.281 l
191.356 153.156 l
191.324 152.703 l
191.303 152.421 191.152 152.192 190.871 152.015  c
190.590 151.838 190.236 151.750 189.809 151.750  c
189.069 151.750 188.494 152.138 188.082 152.914  c
187.671 153.690 187.465 154.781 187.465 156.187  c
h
187.512 157.531 m
187.512 158.500 187.707 159.291 188.098 159.906  c
188.488 160.520 188.991 160.828 189.606 160.828  c
190.710 160.828 191.262 159.916 191.262 158.093  c
191.262 156.302 190.689 155.406 189.543 155.406  c
188.918 155.406 188.423 155.599 188.059 155.984  c
187.694 156.369 187.512 156.885 187.512 157.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 114.562 m
192.547 114.562 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 125.234 m
176.937 125.234 176.156 124.783 175.562 123.882  c
174.968 122.981 174.671 121.796 174.671 120.328  c
174.671 118.817 174.968 117.614 175.562 116.718  c
176.156 115.822 176.953 115.375 177.953 115.375  c
178.953 115.375 179.752 115.822 180.351 116.718  c
180.950 117.614 181.250 118.812 181.250 120.312  c
181.250 121.822 180.950 123.020 180.351 123.906  c
179.752 124.791 178.937 125.234 177.906 125.234  c
h
177.921 124.843 m
179.255 124.906 179.921 123.369 179.921 120.234  c
179.921 117.244 179.265 115.750 177.953 115.750  c
176.651 115.750 176.000 117.265 176.000 120.296  c
176.000 123.265 176.640 124.781 177.921 124.843  c
h
183.471 125.000 m
182.846 125.000 l
182.846 123.437 l
184.409 123.437 l
184.409 124.796 l
184.409 125.338 184.380 125.708 184.323 125.906  c
184.266 126.104 184.127 126.317 183.909 126.546  c
183.617 126.849 183.263 127.010 182.846 127.031  c
182.846 126.640 l
183.263 126.609 183.471 126.197 183.471 125.406  c
183.471 125.000 l
h
187.137 125.000 m
187.324 123.979 187.626 123.091 188.043 122.335  c
188.460 121.580 189.449 120.151 191.012 118.046  c
191.965 116.781 l
186.668 116.781 l
186.668 115.609 l
192.699 115.609 l
192.699 116.421 l
190.126 119.880 188.767 122.739 188.621 125.000  c
187.137 125.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 78.7202 m
192.547 78.7202 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 89.2343 m
176.937 89.2343 176.156 88.7838 175.562 87.8828  c
174.968 86.9817 174.671 85.7968 174.671 84.3281  c
174.671 82.8177 174.968 81.6145 175.562 80.7187  c
176.156 79.8229 176.953 79.3750 177.953 79.3750  c
178.953 79.3750 179.752 79.8229 180.351 80.7187  c
180.950 81.6145 181.250 82.8125 181.250 84.3125  c
181.250 85.8229 180.950 87.0208 180.351 87.9062  c
179.752 88.7916 178.937 89.2343 177.906 89.2343  c
h
177.921 88.8437 m
179.255 88.9062 179.921 87.3697 179.921 84.2343  c
179.921 81.2447 179.265 79.7500 177.953 79.7500  c
176.651 79.7500 176.000 81.2656 176.000 84.2968  c
176.000 87.2656 176.640 88.7812 177.921 88.8437  c
h
183.471 89.0000 m
182.846 89.0000 l
182.846 87.4375 l
184.409 87.4375 l
184.409 88.7968 l
184.409 89.3385 184.380 89.7083 184.323 89.9062  c
184.266 90.1041 184.127 90.3177 183.909 90.5468  c
183.617 90.8489 183.263 91.0104 182.846 91.0312  c
182.846 90.6406 l
183.263 90.6093 183.471 90.1979 183.471 89.4062  c
183.471 89.0000 l
h
188.074 83.9375 m
187.106 83.2708 186.621 82.5416 186.621 81.7500  c
186.621 81.0416 186.879 80.4661 187.395 80.0234  c
187.910 79.5807 188.585 79.3593 189.418 79.3593  c
190.210 79.3593 190.842 79.5468 191.316 79.9218  c
191.790 80.2968 192.027 80.7968 192.027 81.4218  c
192.027 82.3906 191.408 83.1875 190.168 83.8125  c
191.668 84.4479 192.418 85.3645 192.418 86.5625  c
192.418 87.3541 192.121 87.9974 191.527 88.4921  c
190.934 88.9869 190.168 89.2343 189.231 89.2343  c
188.314 89.2343 187.572 89.0026 187.004 88.5390  c
186.436 88.0755 186.152 87.4687 186.152 86.7187  c
186.152 85.4583 186.793 84.5312 188.074 83.9375  c
h
189.824 83.6093 m
190.564 83.0677 190.934 82.3489 190.934 81.4531  c
190.934 80.9427 190.783 80.5312 190.481 80.2187  c
190.178 79.9062 189.783 79.7500 189.293 79.7500  c
188.856 79.7500 188.483 79.9036 188.176 80.2109  c
187.869 80.5182 187.715 80.8958 187.715 81.3437  c
187.715 81.7812 187.856 82.1484 188.137 82.4453  c
188.418 82.7421 188.981 83.1302 189.824 83.6093  c
h
188.356 84.2187 m
187.720 84.8020 187.402 85.5833 187.402 86.5625  c
187.402 87.2604 187.574 87.8151 187.918 88.2265  c
188.262 88.6380 188.720 88.8437 189.293 88.8437  c
189.835 88.8437 190.283 88.6614 190.637 88.2968  c
190.991 87.9322 191.168 87.4739 191.168 86.9218  c
191.168 86.4635 191.033 86.0807 190.762 85.7734  c
190.491 85.4661 189.986 85.1093 189.246 84.7031  c
188.356 84.2187 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 42.8778 m
192.547 42.8778 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.906 53.2343 m
176.937 53.2343 176.156 52.7838 175.562 51.8828  c
174.968 50.9817 174.671 49.7968 174.671 48.3281  c
174.671 46.8177 174.968 45.6145 175.562 44.7187  c
176.156 43.8229 176.953 43.3750 177.953 43.3750  c
178.953 43.3750 179.752 43.8229 180.351 44.7187  c
180.950 45.6145 181.250 46.8125 181.250 48.3125  c
181.250 49.8229 180.950 51.0208 180.351 51.9062  c
179.752 52.7916 178.937 53.2343 177.906 53.2343  c
h
177.921 52.8437 m
179.255 52.9062 179.921 51.3697 179.921 48.2343  c
179.921 45.2447 179.265 43.7500 177.953 43.7500  c
176.651 43.7500 176.000 45.2656 176.000 48.2968  c
176.000 51.2656 176.640 52.7812 177.921 52.8437  c
h
183.471 53.0000 m
182.846 53.0000 l
182.846 51.4375 l
184.409 51.4375 l
184.409 52.7968 l
184.409 53.3385 184.380 53.7083 184.323 53.9062  c
184.266 54.1041 184.127 54.3177 183.909 54.5468  c
183.617 54.8489 183.263 55.0104 182.846 55.0312  c
182.846 54.6406 l
183.263 54.6093 183.471 54.1979 183.471 53.4062  c
183.471 53.0000 l
h
191.152 48.4062 m
190.559 49.2291 189.803 49.6406 188.887 49.6406  c
188.064 49.6406 187.395 49.3645 186.879 48.8125  c
186.363 48.2604 186.106 47.5520 186.106 46.6875  c
186.106 45.7500 186.397 44.9609 186.981 44.3203  c
187.564 43.6796 188.293 43.3593 189.168 43.3593  c
190.231 43.3593 191.048 43.7760 191.621 44.6093  c
192.194 45.4427 192.481 46.6250 192.481 48.1562  c
192.481 49.7708 192.150 51.0208 191.488 51.9062  c
190.827 52.7916 189.897 53.2343 188.699 53.2343  c
187.918 53.2343 187.225 53.0937 186.621 52.8125  c
186.621 51.3125 l
187.246 51.3125 l
187.262 51.4531 l
187.293 51.9062 l
187.314 52.1875 187.465 52.4140 187.746 52.5859  c
188.027 52.7578 188.382 52.8437 188.809 52.8437  c
189.548 52.8437 190.124 52.4557 190.535 51.6796  c
190.947 50.9036 191.152 49.8125 191.152 48.4062  c
h
191.106 47.0625 m
191.106 46.0937 190.910 45.3020 190.520 44.6875  c
190.129 44.0729 189.626 43.7656 189.012 43.7656  c
187.908 43.7656 187.356 44.6822 187.356 46.5156  c
187.356 48.2968 187.928 49.1875 189.074 49.1875  c
189.699 49.1875 190.194 48.9947 190.559 48.6093  c
190.923 48.2239 191.106 47.7083 191.106 47.0625  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.747 7.03555 m
192.547 7.03555 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.578 8.51562 m
178.578 16.3593 l
178.625 16.9843 l
178.635 17.2343 178.705 17.3984 178.835 17.4765  c
178.966 17.5546 179.234 17.5937 179.640 17.5937  c
180.390 17.6093 l
180.390 18.0000 l
175.531 18.0000 l
175.531 17.6093 l
176.265 17.5937 l
176.671 17.5937 176.940 17.5546 177.070 17.4765  c
177.200 17.3984 177.276 17.2343 177.296 16.9843  c
177.328 16.3593 l
177.328 10.5312 l
177.296 9.89062 l
177.296 9.58854 177.208 9.43750 177.031 9.43750  c
176.906 9.43750 176.614 9.47916 176.156 9.56250  c
175.531 9.67187 l
175.531 9.28125 l
178.578 8.51562 l
h
183.471 18.0000 m
182.846 18.0000 l
182.846 16.4375 l
184.409 16.4375 l
184.409 17.7968 l
184.409 18.3385 184.380 18.7083 184.323 18.9062  c
184.266 19.1041 184.127 19.3177 183.909 19.5468  c
183.617 19.8489 183.263 20.0104 182.846 20.0312  c
182.846 19.6406 l
183.263 19.6093 183.471 19.1979 183.471 18.4062  c
183.471 18.0000 l
h
189.262 18.2343 m
188.293 18.2343 187.512 17.7838 186.918 16.8828  c
186.324 15.9817 186.027 14.7968 186.027 13.3281  c
186.027 11.8177 186.324 10.6145 186.918 9.71875  c
187.512 8.82291 188.309 8.37500 189.309 8.37500  c
190.309 8.37500 191.108 8.82291 191.707 9.71875  c
192.306 10.6145 192.606 11.8125 192.606 13.3125  c
192.606 14.8229 192.306 16.0208 191.707 16.9062  c
191.108 17.7916 190.293 18.2343 189.262 18.2343  c
h
189.277 17.8437 m
190.611 17.9062 191.277 16.3697 191.277 13.2343  c
191.277 10.2447 190.621 8.75000 189.309 8.75000  c
188.007 8.75000 187.356 10.2656 187.356 13.2968  c
187.356 16.2656 187.996 17.7812 189.277 17.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
