%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: s√°bado 20 de marzo de 2010 08:08:38 PM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
8.50000 -1.00000 378.492 354.000 rc
newpath
9.50000 352.000 m
11.5461 351.663 l
13.5923 350.683 l
15.6384 349.109 l
17.6846 346.986 l
21.2453 342.124 l
24.8060 335.989 l
32.8148 318.805 l
40.8767 299.048 l
48.9003 279.673 l
56.3391 264.300 l
60.1904 258.030 l
64.0417 253.280 l
66.0331 251.512 l
68.0246 250.262 l
70.0161 249.568 l
72.0076 249.465 l
73.9927 249.987 l
75.9778 251.167 l
77.9629 253.041 l
79.9480 255.642 l
84.0319 263.420 l
88.1157 274.693 l
91.7128 287.728 l
95.3098 303.851 l
99.3592 325.891 l
103.408 351.748 l
107.474 320.954 l
111.540 286.677 l
113.500 269.235 l
115.459 251.356 l
117.418 233.166 l
119.377 214.789 l
122.935 181.354 l
126.494 148.504 l
128.609 129.575 l
130.725 111.300 l
132.840 93.8513 l
134.956 77.3970 l
138.540 52.2686 l
142.125 31.3036 l
146.294 13.2036 l
150.464 2.96347 l
151.386 1.86270 l
152.309 1.20538 l
153.231 1.00000 l
154.154 1.25427 l
155.999 3.16839 l
157.845 6.99121 l
161.894 22.1678 l
165.943 46.5413 l
167.871 61.2034 l
169.799 77.6739 l
171.727 95.7831 l
173.655 115.321 l
175.666 136.959 l
177.678 159.554 l
179.690 182.741 l
181.701 206.124 l
183.548 227.419 l
185.396 248.211 l
187.243 268.190 l
189.090 287.069 l
191.083 305.909 l
193.075 322.924 l
195.068 337.945 l
197.060 350.899 l
201.200 332.899 l
205.339 322.044 l
206.240 320.854 l
207.141 320.048 l
208.041 319.602 l
208.942 319.494 l
209.843 319.697 l
210.744 320.186 l
211.645 320.932 l
212.545 321.908 l
216.437 328.058 l
220.329 335.727 l
224.349 343.281 l
228.370 349.094 l
229.353 350.161 l
230.336 351.080 l
231.320 351.850 l
232.303 351.526 l
234.270 350.700 l
236.236 350.381 l
240.042 350.841 l
243.847 351.914 l
248.073 351.337 l
252.298 351.104 l
259.892 351.373 l
268.000 351.842 l
275.346 351.055 l
283.378 350.751 l
287.157 351.095 l
290.936 351.943 l
294.886 350.505 l
298.836 348.382 l
306.559 343.179 l
314.645 337.134 l
322.432 331.576 l
330.396 326.835 l
338.294 323.603 l
345.552 322.282 l
353.869 323.051 l
361.309 326.047 l
369.241 331.852 l
376.833 340.087 l
384.992 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
361.523 352.000 m
361.523 354.600 l
S
newpath
314.587 352.000 m
314.587 354.600 l
S
newpath
267.650 352.000 m
267.650 354.600 l
S
newpath
220.714 352.000 m
220.714 354.600 l
S
newpath
173.777 352.000 m
173.777 354.600 l
S
newpath
126.841 352.000 m
126.841 354.600 l
S
newpath
79.9047 352.000 m
79.9047 354.600 l
S
newpath
32.9682 352.000 m
32.9682 354.600 l
S
newpath
9.50000 352.000 m
384.992 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 375 15 15 rc
newpath
291.375 384.500 m
290.593 382.750 l
290.281 382.109 l
290.166 381.859 290.072 381.703 290.000 381.640  c
289.927 381.578 289.786 381.541 289.578 381.531  c
289.203 381.500 l
289.078 381.500 l
289.156 381.109 l
291.218 381.109 l
292.468 383.812 l
292.765 383.578 l
293.588 382.911 294.000 382.354 294.000 381.906  c
294.000 381.677 293.906 381.411 293.718 381.109  c
294.968 381.109 l
295.020 381.255 295.046 381.385 295.046 381.500  c
295.046 381.864 294.916 382.195 294.656 382.492  c
294.395 382.789 293.822 383.270 292.937 383.937  c
292.625 384.171 l
293.671 386.359 l
294.062 387.062 l
294.218 387.385 294.432 387.557 294.703 387.578  c
295.109 387.593 l
295.218 387.609 l
295.140 388.000 l
293.062 388.000 l
291.578 384.859 l
291.031 385.343 l
290.166 386.125 289.734 386.796 289.734 387.359  c
289.734 387.578 289.807 387.791 289.953 388.000  c
288.609 388.000 l
288.588 387.885 288.578 387.796 288.578 387.734  c
288.578 387.192 288.974 386.572 289.765 385.875  c
290.750 385.046 l
291.375 384.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
9.50000 352.000 m
9.50000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 366 7 13 rc
newpath
16.7968 373.437 m
8.20312 373.437 l
8.20312 372.765 l
16.7968 372.765 l
16.7968 373.437 l
h
f
Q
newpath
19.7031 374.343 m
15.3906 374.343 l
15.3906 373.718 l
20.0937 367.453 l
20.7968 367.453 l
20.7968 373.390 l
22.0468 373.390 l
22.0468 374.343 l
20.7968 374.343 l
20.7968 375.359 l
20.7968 375.859 20.8359 376.182 20.9140 376.328  c
20.9921 376.474 21.1614 376.552 21.4218 376.562  c
21.8593 376.593 l
21.9687 376.609 l
21.9687 377.000 l
18.3750 377.000 l
18.3750 376.609 l
18.4843 376.593 l
19.1406 376.562 l
19.3697 376.552 19.5208 376.468 19.5937 376.312  c
19.6666 376.156 19.7031 375.838 19.7031 375.359  c
19.7031 374.343 l
h
16.0937 373.390 m
19.7031 373.390 l
19.7031 368.609 l
16.0937 373.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
56.4365 352.000 m
56.4365 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 366 7 13 rc
newpath
63.7968 373.437 m
55.2031 373.437 l
55.2031 372.765 l
63.7968 372.765 l
63.7968 373.437 l
h
f
Q
newpath
63.1718 376.937 m
63.1718 375.281 l
63.7968 375.281 l
63.8125 375.421 l
63.8281 375.859 l
63.8281 376.130 63.9869 376.362 64.3046 376.554  c
64.6224 376.747 65.0156 376.843 65.4843 376.843  c
66.0364 376.843 66.4817 376.625 66.8203 376.187  c
67.1588 375.750 67.3281 375.171 67.3281 374.453  c
67.3281 373.744 67.1067 373.190 66.6640 372.789  c
66.2213 372.388 65.6041 372.187 64.8125 372.187  c
64.0312 372.187 l
64.0312 371.796 l
64.4531 371.796 l
66.2239 371.796 67.1093 371.083 67.1093 369.656  c
67.1093 368.385 66.5520 367.750 65.4375 367.750  c
64.9479 367.750 64.5208 367.854 64.1562 368.062  c
64.0208 368.145 63.9270 368.484 63.8750 369.078  c
63.8750 369.171 l
63.2500 369.171 l
63.2500 367.734 l
63.9270 367.484 64.6927 367.359 65.5468 367.359  c
66.4114 367.359 67.0963 367.554 67.6015 367.945  c
68.1067 368.335 68.3593 368.864 68.3593 369.531  c
68.3593 370.645 67.7031 371.442 66.3906 371.921  c
67.1927 372.130 67.7682 372.427 68.1171 372.812  c
68.4661 373.197 68.6406 373.734 68.6406 374.421  c
68.6406 375.286 68.3593 375.971 67.7968 376.476  c
67.2343 376.981 66.4687 377.234 65.5000 377.234  c
64.6145 377.234 63.8385 377.135 63.1718 376.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.373 352.000 m
103.373 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 366 7 13 rc
newpath
110.796 373.437 m
102.203 373.437 l
102.203 372.765 l
110.796 372.765 l
110.796 373.437 l
h
f
Q
newpath
110.015 377.000 m
110.015 376.375 l
110.380 375.322 110.942 374.437 111.703 373.718  c
112.390 373.093 l
113.161 372.364 113.677 371.786 113.937 371.359  c
114.197 370.932 114.328 370.442 114.328 369.890  c
114.328 369.244 114.169 368.729 113.851 368.343  c
113.533 367.958 113.114 367.765 112.593 367.765  c
112.020 367.765 111.536 367.921 111.140 368.234  c
110.994 368.349 110.901 368.770 110.859 369.500  c
110.859 369.656 l
110.218 369.656 l
110.218 367.937 l
111.135 367.552 111.979 367.359 112.750 367.359  c
113.593 367.359 114.289 367.599 114.835 368.078  c
115.382 368.557 115.656 369.161 115.656 369.890  c
115.656 370.880 115.041 371.796 113.812 372.640  c
113.046 373.171 l
111.828 374.005 111.161 374.916 111.046 375.906  c
115.609 375.906 l
115.609 377.000 l
110.015 377.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.309 352.000 m
150.309 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 366 7 13 rc
newpath
157.796 373.437 m
149.203 373.437 l
149.203 372.765 l
157.796 372.765 l
157.796 373.437 l
h
f
Q
newpath
160.578 367.515 m
160.578 375.359 l
160.625 375.984 l
160.635 376.234 160.705 376.398 160.835 376.476  c
160.966 376.554 161.234 376.593 161.640 376.593  c
162.390 376.609 l
162.390 377.000 l
157.531 377.000 l
157.531 376.609 l
158.265 376.593 l
158.671 376.593 158.940 376.554 159.070 376.476  c
159.200 376.398 159.276 376.234 159.296 375.984  c
159.328 375.359 l
159.328 369.531 l
159.296 368.890 l
159.296 368.588 159.208 368.437 159.031 368.437  c
158.906 368.437 158.614 368.479 158.156 368.562  c
157.531 368.671 l
157.531 368.281 l
160.578 367.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 352.000 m
197.246 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
201.906 377.234 m
200.937 377.234 200.156 376.783 199.562 375.882  c
198.968 374.981 198.671 373.796 198.671 372.328  c
198.671 370.817 198.968 369.614 199.562 368.718  c
200.156 367.822 200.953 367.375 201.953 367.375  c
202.953 367.375 203.752 367.822 204.351 368.718  c
204.950 369.614 205.250 370.812 205.250 372.312  c
205.250 373.822 204.950 375.020 204.351 375.906  c
203.752 376.791 202.937 377.234 201.906 377.234  c
h
201.921 376.843 m
203.255 376.906 203.921 375.369 203.921 372.234  c
203.921 369.244 203.265 367.750 201.953 367.750  c
200.651 367.750 200.000 369.265 200.000 372.296  c
200.000 375.265 200.640 376.781 201.921 376.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
244.182 352.000 m
244.182 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
249.578 367.515 m
249.578 375.359 l
249.625 375.984 l
249.635 376.234 249.705 376.398 249.835 376.476  c
249.966 376.554 250.234 376.593 250.640 376.593  c
251.390 376.609 l
251.390 377.000 l
246.531 377.000 l
246.531 376.609 l
247.265 376.593 l
247.671 376.593 247.940 376.554 248.070 376.476  c
248.200 376.398 248.276 376.234 248.296 375.984  c
248.328 375.359 l
248.328 369.531 l
248.296 368.890 l
248.296 368.588 248.208 368.437 248.031 368.437  c
247.906 368.437 247.614 368.479 247.156 368.562  c
246.531 368.671 l
246.531 368.281 l
249.578 367.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.119 352.000 m
291.119 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
293.015 377.000 m
293.015 376.375 l
293.380 375.322 293.942 374.437 294.703 373.718  c
295.390 373.093 l
296.161 372.364 296.677 371.786 296.937 371.359  c
297.197 370.932 297.328 370.442 297.328 369.890  c
297.328 369.244 297.169 368.729 296.851 368.343  c
296.533 367.958 296.114 367.765 295.593 367.765  c
295.020 367.765 294.536 367.921 294.140 368.234  c
293.994 368.349 293.901 368.770 293.859 369.500  c
293.859 369.656 l
293.218 369.656 l
293.218 367.937 l
294.135 367.552 294.979 367.359 295.750 367.359  c
296.593 367.359 297.289 367.599 297.835 368.078  c
298.382 368.557 298.656 369.161 298.656 369.890  c
298.656 370.880 298.041 371.796 296.812 372.640  c
296.046 373.171 l
294.828 374.005 294.161 374.916 294.046 375.906  c
298.609 375.906 l
298.609 377.000 l
293.015 377.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
338.055 352.000 m
338.055 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.171 376.937 m
340.171 375.281 l
340.796 375.281 l
340.812 375.421 l
340.828 375.859 l
340.828 376.130 340.987 376.362 341.304 376.554  c
341.622 376.747 342.015 376.843 342.484 376.843  c
343.036 376.843 343.481 376.625 343.820 376.187  c
344.158 375.750 344.328 375.171 344.328 374.453  c
344.328 373.744 344.106 373.190 343.664 372.789  c
343.221 372.388 342.604 372.187 341.812 372.187  c
341.031 372.187 l
341.031 371.796 l
341.453 371.796 l
343.224 371.796 344.109 371.083 344.109 369.656  c
344.109 368.385 343.552 367.750 342.437 367.750  c
341.947 367.750 341.520 367.854 341.156 368.062  c
341.020 368.145 340.927 368.484 340.875 369.078  c
340.875 369.171 l
340.250 369.171 l
340.250 367.734 l
340.927 367.484 341.692 367.359 342.546 367.359  c
343.411 367.359 344.096 367.554 344.601 367.945  c
345.106 368.335 345.359 368.864 345.359 369.531  c
345.359 370.645 344.703 371.442 343.390 371.921  c
344.192 372.130 344.768 372.427 345.117 372.812  c
345.466 373.197 345.640 373.734 345.640 374.421  c
345.640 375.286 345.359 375.971 344.796 376.476  c
344.234 376.981 343.468 377.234 342.500 377.234  c
341.614 377.234 340.838 377.135 340.171 376.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
384.992 352.000 m
384.992 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
389.703 374.343 m
385.390 374.343 l
385.390 373.718 l
390.093 367.453 l
390.796 367.453 l
390.796 373.390 l
392.046 373.390 l
392.046 374.343 l
390.796 374.343 l
390.796 375.359 l
390.796 375.859 390.835 376.182 390.914 376.328  c
390.992 376.474 391.161 376.552 391.421 376.562  c
391.859 376.593 l
391.968 376.609 l
391.968 377.000 l
388.375 377.000 l
388.375 376.609 l
388.484 376.593 l
389.140 376.562 l
389.369 376.552 389.520 376.468 389.593 376.312  c
389.666 376.156 389.703 375.838 389.703 375.359  c
389.703 374.343 l
h
386.093 373.390 m
389.703 373.390 l
389.703 368.609 l
386.093 373.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.246 337.928 m
194.646 337.928 l
S
newpath
197.246 323.857 m
194.646 323.857 l
S
newpath
197.246 309.786 m
194.646 309.786 l
S
newpath
197.246 295.715 m
194.646 295.715 l
S
newpath
197.246 267.573 m
194.646 267.573 l
S
newpath
197.246 253.501 m
194.646 253.501 l
S
newpath
197.246 239.430 m
194.646 239.430 l
S
newpath
197.246 225.359 m
194.646 225.359 l
S
newpath
197.246 197.217 m
194.646 197.217 l
S
newpath
197.246 183.146 m
194.646 183.146 l
S
newpath
197.246 169.075 m
194.646 169.075 l
S
newpath
197.246 155.003 m
194.646 155.003 l
S
newpath
197.246 126.861 m
194.646 126.861 l
S
newpath
197.246 112.790 m
194.646 112.790 l
S
newpath
197.246 98.7192 m
194.646 98.7192 l
S
newpath
197.246 84.6481 m
194.646 84.6481 l
S
newpath
197.246 56.5058 m
194.646 56.5058 l
S
newpath
197.246 42.4346 m
194.646 42.4346 l
S
newpath
197.246 28.3634 m
194.646 28.3634 l
S
newpath
197.246 14.2923 m
194.646 14.2923 l
S
newpath
197.246 352.000 m
197.246 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
147 169 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.246 352.000 m
192.046 352.000 l
S
Q
q
newpath
197.246 281.644 m
192.046 281.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
169.906 292.234 m
168.937 292.234 168.156 291.783 167.562 290.882  c
166.968 289.981 166.671 288.796 166.671 287.328  c
166.671 285.817 166.968 284.614 167.562 283.718  c
168.156 282.822 168.953 282.375 169.953 282.375  c
170.953 282.375 171.752 282.822 172.351 283.718  c
172.950 284.614 173.250 285.812 173.250 287.312  c
173.250 288.822 172.950 290.020 172.351 290.906  c
171.752 291.791 170.937 292.234 169.906 292.234  c
h
169.921 291.843 m
171.255 291.906 171.921 290.369 171.921 287.234  c
171.921 284.244 171.265 282.750 169.953 282.750  c
168.651 282.750 168.000 284.265 168.000 287.296  c
168.000 290.265 168.640 291.781 169.921 291.843  c
h
175.471 292.000 m
174.846 292.000 l
174.846 290.437 l
176.409 290.437 l
176.409 291.796 l
176.409 292.338 176.380 292.708 176.323 292.906  c
176.266 293.104 176.127 293.317 175.909 293.546  c
175.617 293.849 175.263 294.010 174.846 294.031  c
174.846 293.640 l
175.263 293.609 175.471 293.197 175.471 292.406  c
175.471 292.000 l
h
181.262 292.234 m
180.293 292.234 179.512 291.783 178.918 290.882  c
178.324 289.981 178.027 288.796 178.027 287.328  c
178.027 285.817 178.324 284.614 178.918 283.718  c
179.512 282.822 180.309 282.375 181.309 282.375  c
182.309 282.375 183.108 282.822 183.707 283.718  c
184.306 284.614 184.606 285.812 184.606 287.312  c
184.606 288.822 184.306 290.020 183.707 290.906  c
183.108 291.791 182.293 292.234 181.262 292.234  c
h
181.277 291.843 m
182.611 291.906 183.277 290.369 183.277 287.234  c
183.277 284.244 182.621 282.750 181.309 282.750  c
180.007 282.750 179.356 284.265 179.356 287.296  c
179.356 290.265 179.996 291.781 181.277 291.843  c
h
186.749 292.015 m
186.749 290.437 l
187.374 290.437 l
187.390 290.578 l
187.405 291.062 l
187.426 291.583 187.832 291.843 188.624 291.843  c
189.207 291.843 189.671 291.614 190.015 291.156  c
190.358 290.697 190.530 290.078 190.530 289.296  c
190.530 288.401 190.265 287.760 189.733 287.375  c
189.202 286.989 188.332 286.796 187.124 286.796  c
186.905 286.796 l
186.905 282.609 l
191.640 282.609 l
191.640 283.703 l
187.296 283.703 l
187.296 286.328 l
187.874 286.328 l
190.520 286.328 191.843 287.333 191.843 289.343  c
191.843 290.250 191.538 290.958 190.929 291.468  c
190.319 291.979 189.478 292.234 188.405 292.234  c
187.874 292.234 187.322 292.161 186.749 292.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 211.288 m
192.046 211.288 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
169.906 222.234 m
168.937 222.234 168.156 221.783 167.562 220.882  c
166.968 219.981 166.671 218.796 166.671 217.328  c
166.671 215.817 166.968 214.614 167.562 213.718  c
168.156 212.822 168.953 212.375 169.953 212.375  c
170.953 212.375 171.752 212.822 172.351 213.718  c
172.950 214.614 173.250 215.812 173.250 217.312  c
173.250 218.822 172.950 220.020 172.351 220.906  c
171.752 221.791 170.937 222.234 169.906 222.234  c
h
169.921 221.843 m
171.255 221.906 171.921 220.369 171.921 217.234  c
171.921 214.244 171.265 212.750 169.953 212.750  c
168.651 212.750 168.000 214.265 168.000 217.296  c
168.000 220.265 168.640 221.781 169.921 221.843  c
h
175.471 222.000 m
174.846 222.000 l
174.846 220.437 l
176.409 220.437 l
176.409 221.796 l
176.409 222.338 176.380 222.708 176.323 222.906  c
176.266 223.104 176.127 223.317 175.909 223.546  c
175.617 223.849 175.263 224.010 174.846 224.031  c
174.846 223.640 l
175.263 223.609 175.471 223.197 175.471 222.406  c
175.471 222.000 l
h
181.934 212.515 m
181.934 220.359 l
181.981 220.984 l
181.991 221.234 182.061 221.398 182.191 221.476  c
182.322 221.554 182.590 221.593 182.996 221.593  c
183.746 221.609 l
183.746 222.000 l
178.887 222.000 l
178.887 221.609 l
179.621 221.593 l
180.027 221.593 180.296 221.554 180.426 221.476  c
180.556 221.398 180.632 221.234 180.652 220.984  c
180.684 220.359 l
180.684 214.531 l
180.652 213.890 l
180.652 213.588 180.564 213.437 180.387 213.437  c
180.262 213.437 179.970 213.479 179.512 213.562  c
178.887 213.671 l
178.887 213.281 l
181.934 212.515 l
h
189.171 222.234 m
188.202 222.234 187.421 221.783 186.827 220.882  c
186.233 219.981 185.937 218.796 185.937 217.328  c
185.937 215.817 186.233 214.614 186.827 213.718  c
187.421 212.822 188.218 212.375 189.218 212.375  c
190.218 212.375 191.017 212.822 191.616 213.718  c
192.215 214.614 192.515 215.812 192.515 217.312  c
192.515 218.822 192.215 220.020 191.616 220.906  c
191.017 221.791 190.202 222.234 189.171 222.234  c
h
189.187 221.843 m
190.520 221.906 191.187 220.369 191.187 217.234  c
191.187 214.244 190.530 212.750 189.218 212.750  c
187.916 212.750 187.265 214.265 187.265 217.296  c
187.265 220.265 187.905 221.781 189.187 221.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 140.932 m
192.046 140.932 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
169.906 151.234 m
168.937 151.234 168.156 150.783 167.562 149.882  c
166.968 148.981 166.671 147.796 166.671 146.328  c
166.671 144.817 166.968 143.614 167.562 142.718  c
168.156 141.822 168.953 141.375 169.953 141.375  c
170.953 141.375 171.752 141.822 172.351 142.718  c
172.950 143.614 173.250 144.812 173.250 146.312  c
173.250 147.822 172.950 149.020 172.351 149.906  c
171.752 150.791 170.937 151.234 169.906 151.234  c
h
169.921 150.843 m
171.255 150.906 171.921 149.369 171.921 146.234  c
171.921 143.244 171.265 141.750 169.953 141.750  c
168.651 141.750 168.000 143.265 168.000 146.296  c
168.000 149.265 168.640 150.781 169.921 150.843  c
h
175.471 151.000 m
174.846 151.000 l
174.846 149.437 l
176.409 149.437 l
176.409 150.796 l
176.409 151.338 176.380 151.708 176.323 151.906  c
176.266 152.104 176.127 152.317 175.909 152.546  c
175.617 152.849 175.263 153.010 174.846 153.031  c
174.846 152.640 l
175.263 152.609 175.471 152.197 175.471 151.406  c
175.471 151.000 l
h
181.934 141.515 m
181.934 149.359 l
181.981 149.984 l
181.991 150.234 182.061 150.398 182.191 150.476  c
182.322 150.554 182.590 150.593 182.996 150.593  c
183.746 150.609 l
183.746 151.000 l
178.887 151.000 l
178.887 150.609 l
179.621 150.593 l
180.027 150.593 180.296 150.554 180.426 150.476  c
180.556 150.398 180.632 150.234 180.652 149.984  c
180.684 149.359 l
180.684 143.531 l
180.652 142.890 l
180.652 142.588 180.564 142.437 180.387 142.437  c
180.262 142.437 179.970 142.479 179.512 142.562  c
178.887 142.671 l
178.887 142.281 l
181.934 141.515 l
h
186.749 151.015 m
186.749 149.437 l
187.374 149.437 l
187.390 149.578 l
187.405 150.062 l
187.426 150.583 187.832 150.843 188.624 150.843  c
189.207 150.843 189.671 150.614 190.015 150.156  c
190.358 149.697 190.530 149.078 190.530 148.296  c
190.530 147.401 190.265 146.760 189.733 146.375  c
189.202 145.989 188.332 145.796 187.124 145.796  c
186.905 145.796 l
186.905 141.609 l
191.640 141.609 l
191.640 142.703 l
187.296 142.703 l
187.296 145.328 l
187.874 145.328 l
190.520 145.328 191.843 146.333 191.843 148.343  c
191.843 149.250 191.538 149.958 190.929 150.468  c
190.319 150.979 189.478 151.234 188.405 151.234  c
187.874 151.234 187.322 151.161 186.749 151.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 70.5769 m
192.046 70.5769 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
169.906 81.2343 m
168.937 81.2343 168.156 80.7838 167.562 79.8828  c
166.968 78.9817 166.671 77.7968 166.671 76.3281  c
166.671 74.8177 166.968 73.6145 167.562 72.7187  c
168.156 71.8229 168.953 71.3750 169.953 71.3750  c
170.953 71.3750 171.752 71.8229 172.351 72.7187  c
172.950 73.6145 173.250 74.8125 173.250 76.3125  c
173.250 77.8229 172.950 79.0208 172.351 79.9062  c
171.752 80.7916 170.937 81.2343 169.906 81.2343  c
h
169.921 80.8437 m
171.255 80.9062 171.921 79.3697 171.921 76.2343  c
171.921 73.2447 171.265 71.7500 169.953 71.7500  c
168.651 71.7500 168.000 73.2656 168.000 76.2968  c
168.000 79.2656 168.640 80.7812 169.921 80.8437  c
h
175.471 81.0000 m
174.846 81.0000 l
174.846 79.4375 l
176.409 79.4375 l
176.409 80.7968 l
176.409 81.3385 176.380 81.7083 176.323 81.9062  c
176.266 82.1041 176.127 82.3177 175.909 82.5468  c
175.617 82.8489 175.263 83.0104 174.846 83.0312  c
174.846 82.6406 l
175.263 82.6093 175.471 82.1979 175.471 81.4062  c
175.471 81.0000 l
h
178.371 81.0000 m
178.371 80.3750 l
178.736 79.3229 179.298 78.4375 180.059 77.7187  c
180.746 77.0937 l
181.517 76.3645 182.033 75.7864 182.293 75.3593  c
182.553 74.9322 182.684 74.4427 182.684 73.8906  c
182.684 73.2447 182.525 72.7291 182.207 72.3437  c
181.889 71.9583 181.470 71.7656 180.949 71.7656  c
180.376 71.7656 179.892 71.9218 179.496 72.2343  c
179.350 72.3489 179.257 72.7708 179.215 73.5000  c
179.215 73.6562 l
178.574 73.6562 l
178.574 71.9375 l
179.491 71.5520 180.335 71.3593 181.106 71.3593  c
181.949 71.3593 182.645 71.5989 183.191 72.0781  c
183.738 72.5572 184.012 73.1614 184.012 73.8906  c
184.012 74.8802 183.397 75.7968 182.168 76.6406  c
181.402 77.1718 l
180.184 78.0052 179.517 78.9166 179.402 79.9062  c
183.965 79.9062 l
183.965 81.0000 l
178.371 81.0000 l
h
189.171 81.2343 m
188.202 81.2343 187.421 80.7838 186.827 79.8828  c
186.233 78.9817 185.937 77.7968 185.937 76.3281  c
185.937 74.8177 186.233 73.6145 186.827 72.7187  c
187.421 71.8229 188.218 71.3750 189.218 71.3750  c
190.218 71.3750 191.017 71.8229 191.616 72.7187  c
192.215 73.6145 192.515 74.8125 192.515 76.3125  c
192.515 77.8229 192.215 79.0208 191.616 79.9062  c
191.017 80.7916 190.202 81.2343 189.171 81.2343  c
h
189.187 80.8437 m
190.520 80.9062 191.187 79.3697 191.187 76.2343  c
191.187 73.2447 190.530 71.7500 189.218 71.7500  c
187.916 71.7500 187.265 73.2656 187.265 76.2968  c
187.265 79.2656 187.905 80.7812 189.187 80.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
