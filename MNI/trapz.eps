%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: domingo 4 de abril de 2010 01:11:03 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
0.678431 0.917647 0.917647 RG
31.0000 78.0064 350.981 233.987 rc
newpath
31.0000 311.993 m
38.6286 311.993 l
38.6286 120.651 l
31.0000 120.977 l
h
f
newpath
38.6286 311.993 m
45.2662 311.993 l
52.7309 311.993 l
52.7309 120.047 l
45.2662 120.367 l
38.6286 120.651 l
h
f
newpath
52.7309 311.993 m
60.2450 311.993 l
60.2450 119.726 l
52.7309 120.047 l
h
f
newpath
60.2450 311.993 m
67.7235 311.993 l
74.6569 311.993 l
81.8362 311.993 l
89.2609 311.993 l
96.6619 311.993 l
96.6619 118.167 l
89.2609 118.484 l
81.8362 118.801 l
74.6569 119.109 l
67.7235 119.405 l
60.2450 119.726 l
h
f
newpath
96.6619 311.993 m
104.274 311.993 l
110.980 311.993 l
110.980 117.554 l
104.274 117.841 l
96.6619 118.167 l
h
f
newpath
110.980 311.993 m
118.528 311.993 l
118.528 117.231 l
110.980 117.554 l
h
f
newpath
118.528 311.993 m
126.108 311.993 l
133.412 311.993 l
133.412 116.594 l
126.108 116.907 l
118.528 117.231 l
h
f
newpath
133.412 311.993 m
140.045 311.993 l
147.933 311.993 l
147.933 115.973 l
140.045 116.310 l
133.412 116.594 l
h
f
newpath
147.933 311.993 m
154.614 311.993 l
154.614 115.687 l
147.933 115.973 l
h
f
newpath
154.614 311.993 m
162.387 311.993 l
162.387 115.354 l
154.614 115.687 l
h
f
newpath
162.387 311.993 m
169.266 311.993 l
176.815 311.993 l
176.815 114.737 l
169.266 115.060 l
162.387 115.354 l
h
f
newpath
176.815 311.993 m
184.002 311.993 l
184.002 114.429 l
176.815 114.737 l
h
f
newpath
184.002 311.993 m
191.502 311.993 l
198.389 311.993 l
198.389 113.813 l
191.502 114.108 l
184.002 114.429 l
h
f
newpath
198.389 311.993 m
205.818 311.993 l
213.534 311.993 l
213.534 113.165 l
205.818 113.495 l
198.389 113.813 l
h
f
newpath
213.534 311.993 m
220.251 311.993 l
227.505 311.993 l
227.505 112.567 l
220.251 112.878 l
213.534 113.165 l
h
f
newpath
227.505 311.993 m
235.000 311.993 l
235.000 112.246 l
227.505 112.567 l
h
f
newpath
235.000 311.993 m
242.332 311.993 l
249.426 311.993 l
249.426 111.629 l
242.332 111.933 l
235.000 112.246 l
h
f
newpath
249.426 311.993 m
257.303 311.993 l
264.381 311.993 l
264.381 110.989 l
257.303 111.292 l
249.426 111.629 l
h
f
newpath
264.381 311.993 m
271.937 311.993 l
278.785 311.993 l
278.785 110.372 l
271.937 110.665 l
264.381 110.989 l
h
f
newpath
278.785 311.993 m
286.271 311.993 l
293.315 311.993 l
300.679 311.993 l
300.679 109.435 l
293.315 109.750 l
286.271 110.052 l
278.785 110.372 l
h
f
newpath
300.679 311.993 m
307.877 311.993 l
315.414 311.993 l
322.672 311.993 l
322.672 108.494 l
315.414 108.805 l
307.877 109.127 l
300.679 109.435 l
h
f
newpath
322.672 311.993 m
330.095 311.993 l
337.456 311.993 l
344.221 311.993 l
344.221 107.572 l
337.456 107.861 l
330.095 108.176 l
322.672 108.494 l
h
f
newpath
344.221 311.993 m
351.973 311.993 l
358.907 311.993 l
358.907 106.943 l
351.973 107.240 l
344.221 107.572 l
h
f
newpath
358.907 311.993 m
366.301 311.993 l
373.377 311.993 l
380.981 311.993 l
380.981 105.999 l
373.377 106.324 l
366.301 106.627 l
358.907 106.943 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
0 0 1.00000 RG
28.0000 75.0064 356.981 239.987 rc
newpath
31.0000 120.977 m
38.6286 128.410 l
45.2662 135.004 l
52.7309 142.451 l
60.2450 149.860 l
67.7235 157.028 l
74.6569 163.385 l
81.8362 169.578 l
89.2609 175.468 l
96.6619 180.723 l
104.274 185.399 l
110.980 188.841 l
118.528 191.899 l
126.108 194.051 l
129.760 194.747 l
133.412 195.218 l
136.729 195.449 l
140.045 195.492 l
143.989 195.298 l
147.933 194.839 l
154.614 193.462 l
162.387 190.936 l
169.266 187.903 l
176.815 183.768 l
184.002 179.106 l
191.502 173.567 l
198.389 167.950 l
205.818 161.414 l
213.534 154.212 l
220.251 147.697 l
227.505 140.508 l
235.000 133.030 l
242.332 125.780 l
249.426 118.937 l
257.303 111.660 l
264.381 105.515 l
271.937 99.4711 l
278.785 94.5388 l
286.271 89.8216 l
293.315 86.0942 l
300.679 82.9953 l
307.877 80.8000 l
311.645 79.9916 l
315.414 79.4222 l
319.043 79.1018 l
322.672 79.0064 l
326.384 79.1420 l
330.095 79.5128 l
333.776 80.1113 l
337.456 80.9373 l
344.221 83.0367 l
351.973 86.3364 l
358.907 90.0506 l
366.301 94.7432 l
373.377 99.8745 l
380.981 105.999 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
351.816 311.993 m
351.816 314.593 l
S
newpath
293.486 311.993 m
293.486 314.593 l
S
newpath
235.155 311.993 m
235.155 314.593 l
S
newpath
176.825 311.993 m
176.825 314.593 l
S
newpath
118.495 311.993 m
118.495 314.593 l
S
newpath
60.1651 311.993 m
60.1651 314.593 l
S
newpath
28.0000 311.993 m
380.981 311.993 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
24 335 15 15 rc
newpath
31.3750 344.500 m
30.5937 342.750 l
30.2812 342.109 l
30.1666 341.859 30.0729 341.703 30.0000 341.640  c
29.9270 341.578 29.7864 341.541 29.5781 341.531  c
29.2031 341.500 l
29.0781 341.500 l
29.1562 341.109 l
31.2187 341.109 l
32.4687 343.812 l
32.7656 343.578 l
33.5885 342.911 34.0000 342.354 34.0000 341.906  c
34.0000 341.677 33.9062 341.411 33.7187 341.109  c
34.9687 341.109 l
35.0208 341.255 35.0468 341.385 35.0468 341.500  c
35.0468 341.864 34.9166 342.195 34.6562 342.492  c
34.3958 342.789 33.8229 343.270 32.9375 343.937  c
32.6250 344.171 l
33.6718 346.359 l
34.0625 347.062 l
34.2187 347.385 34.4322 347.557 34.7031 347.578  c
35.1093 347.593 l
35.2187 347.609 l
35.1406 348.000 l
33.0625 348.000 l
31.5781 344.859 l
31.0312 345.343 l
30.1666 346.125 29.7343 346.796 29.7343 347.359  c
29.7343 347.578 29.8072 347.791 29.9531 348.000  c
28.6093 348.000 l
28.5885 347.885 28.5781 347.796 28.5781 347.734  c
28.5781 347.192 28.9739 346.572 29.7656 345.875  c
30.7500 345.046 l
31.3750 344.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
31.0000 311.993 m
31.0000 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.1093 331.187 m
34.7031 330.375 35.4583 329.968 36.3750 329.968  c
37.1979 329.968 37.8697 330.242 38.3906 330.789  c
38.9114 331.335 39.1718 332.046 39.1718 332.921  c
39.1718 333.859 38.8750 334.645 38.2812 335.281  c
37.6875 335.916 36.9583 336.234 36.0937 336.234  c
35.0312 336.234 34.2135 335.820 33.6406 334.992  c
33.0677 334.164 32.7812 332.984 32.7812 331.453  c
32.7812 329.838 33.1119 328.585 33.7734 327.695  c
34.4349 326.804 35.3697 326.359 36.5781 326.359  c
37.3593 326.359 38.0468 326.500 38.6406 326.781  c
38.6406 328.281 l
38.0156 328.281 l
38.0000 328.156 l
37.9687 327.703 l
37.9479 327.421 37.7968 327.192 37.5156 327.015  c
37.2343 326.838 36.8802 326.750 36.4531 326.750  c
35.7135 326.750 35.1380 327.138 34.7265 327.914  c
34.3151 328.690 34.1093 329.781 34.1093 331.187  c
h
34.1562 332.531 m
34.1562 333.500 34.3515 334.291 34.7421 334.906  c
35.1328 335.520 35.6354 335.828 36.2500 335.828  c
37.3541 335.828 37.9062 334.916 37.9062 333.093  c
37.9062 331.302 37.3333 330.406 36.1875 330.406  c
35.5625 330.406 35.0677 330.599 34.7031 330.984  c
34.3385 331.369 34.1562 331.885 34.1562 332.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
89.3302 311.993 m
89.3302 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
91.7812 336.000 m
91.9687 334.979 92.2708 334.091 92.6875 333.335  c
93.1041 332.580 94.0937 331.151 95.6562 329.046  c
96.6093 327.781 l
91.3125 327.781 l
91.3125 326.609 l
97.3437 326.609 l
97.3437 327.421 l
94.7708 330.880 93.4114 333.739 93.2656 336.000  c
91.7812 336.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
147.660 311.993 m
147.660 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
150.718 330.937 m
149.750 330.270 149.265 329.541 149.265 328.750  c
149.265 328.041 149.523 327.466 150.039 327.023  c
150.554 326.580 151.229 326.359 152.062 326.359  c
152.854 326.359 153.487 326.546 153.960 326.921  c
154.434 327.296 154.671 327.796 154.671 328.421  c
154.671 329.390 154.052 330.187 152.812 330.812  c
154.312 331.447 155.062 332.364 155.062 333.562  c
155.062 334.354 154.765 334.997 154.171 335.492  c
153.578 335.987 152.812 336.234 151.875 336.234  c
150.958 336.234 150.216 336.002 149.648 335.539  c
149.080 335.075 148.796 334.468 148.796 333.718  c
148.796 332.458 149.437 331.531 150.718 330.937  c
h
152.468 330.609 m
153.208 330.067 153.578 329.349 153.578 328.453  c
153.578 327.942 153.427 327.531 153.125 327.218  c
152.822 326.906 152.427 326.750 151.937 326.750  c
151.500 326.750 151.127 326.903 150.820 327.210  c
150.513 327.518 150.359 327.895 150.359 328.343  c
150.359 328.781 150.500 329.148 150.781 329.445  c
151.062 329.742 151.625 330.130 152.468 330.609  c
h
151.000 331.218 m
150.364 331.802 150.046 332.583 150.046 333.562  c
150.046 334.260 150.218 334.815 150.562 335.226  c
150.906 335.638 151.364 335.843 151.937 335.843  c
152.479 335.843 152.927 335.661 153.281 335.296  c
153.635 334.932 153.812 334.474 153.812 333.921  c
153.812 333.463 153.677 333.080 153.406 332.773  c
153.135 332.466 152.630 332.109 151.890 331.703  c
151.000 331.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
205.990 311.993 m
205.990 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
211.796 331.406 m
211.203 332.229 210.447 332.640 209.531 332.640  c
208.708 332.640 208.039 332.364 207.523 331.812  c
207.007 331.260 206.750 330.552 206.750 329.687  c
206.750 328.750 207.041 327.960 207.625 327.320  c
208.208 326.679 208.937 326.359 209.812 326.359  c
210.875 326.359 211.692 326.776 212.265 327.609  c
212.838 328.442 213.125 329.625 213.125 331.156  c
213.125 332.770 212.794 334.020 212.132 334.906  c
211.471 335.791 210.541 336.234 209.343 336.234  c
208.562 336.234 207.869 336.093 207.265 335.812  c
207.265 334.312 l
207.890 334.312 l
207.906 334.453 l
207.937 334.906 l
207.958 335.187 208.109 335.414 208.390 335.585  c
208.671 335.757 209.026 335.843 209.453 335.843  c
210.192 335.843 210.768 335.455 211.179 334.679  c
211.591 333.903 211.796 332.812 211.796 331.406  c
h
211.750 330.062 m
211.750 329.093 211.554 328.302 211.164 327.687  c
210.773 327.072 210.270 326.765 209.656 326.765  c
208.552 326.765 208.000 327.682 208.000 329.515  c
208.000 331.296 208.572 332.187 209.718 332.187  c
210.343 332.187 210.838 331.994 211.203 331.609  c
211.567 331.224 211.750 330.708 211.750 330.062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
264.321 311.993 m
264.321 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
265.578 326.515 m
265.578 334.359 l
265.625 334.984 l
265.635 335.234 265.705 335.398 265.835 335.476  c
265.966 335.554 266.234 335.593 266.640 335.593  c
267.390 335.609 l
267.390 336.000 l
262.531 336.000 l
262.531 335.609 l
263.265 335.593 l
263.671 335.593 263.940 335.554 264.070 335.476  c
264.200 335.398 264.276 335.234 264.296 334.984  c
264.328 334.359 l
264.328 328.531 l
264.296 327.890 l
264.296 327.588 264.208 327.437 264.031 327.437  c
263.906 327.437 263.614 327.479 263.156 327.562  c
262.531 327.671 l
262.531 327.281 l
265.578 326.515 l
h
272.815 336.234 m
271.846 336.234 271.065 335.783 270.471 334.882  c
269.877 333.981 269.581 332.796 269.581 331.328  c
269.581 329.817 269.877 328.614 270.471 327.718  c
271.065 326.822 271.862 326.375 272.862 326.375  c
273.862 326.375 274.661 326.822 275.260 327.718  c
275.859 328.614 276.159 329.812 276.159 331.312  c
276.159 332.822 275.859 334.020 275.260 334.906  c
274.661 335.791 273.846 336.234 272.815 336.234  c
h
272.831 335.843 m
274.164 335.906 274.831 334.369 274.831 331.234  c
274.831 328.244 274.174 326.750 272.862 326.750  c
271.560 326.750 270.909 328.265 270.909 331.296  c
270.909 334.265 271.549 335.781 272.831 335.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
322.651 311.993 m
322.651 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
323.578 326.515 m
323.578 334.359 l
323.625 334.984 l
323.635 335.234 323.705 335.398 323.835 335.476  c
323.966 335.554 324.234 335.593 324.640 335.593  c
325.390 335.609 l
325.390 336.000 l
320.531 336.000 l
320.531 335.609 l
321.265 335.593 l
321.671 335.593 321.940 335.554 322.070 335.476  c
322.200 335.398 322.276 335.234 322.296 334.984  c
322.328 334.359 l
322.328 328.531 l
322.296 327.890 l
322.296 327.588 322.208 327.437 322.031 327.437  c
321.906 327.437 321.614 327.479 321.156 327.562  c
320.531 327.671 l
320.531 327.281 l
323.578 326.515 l
h
331.487 326.515 m
331.487 334.359 l
331.534 334.984 l
331.544 335.234 331.614 335.398 331.745 335.476  c
331.875 335.554 332.143 335.593 332.549 335.593  c
333.299 335.609 l
333.299 336.000 l
328.440 336.000 l
328.440 335.609 l
329.174 335.593 l
329.581 335.593 329.849 335.554 329.979 335.476  c
330.109 335.398 330.185 335.234 330.206 334.984  c
330.237 334.359 l
330.237 328.531 l
330.206 327.890 l
330.206 327.588 330.117 327.437 329.940 327.437  c
329.815 327.437 329.523 327.479 329.065 327.562  c
328.440 327.671 l
328.440 327.281 l
331.487 326.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
380.981 311.993 m
380.981 317.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
381.578 326.515 m
381.578 334.359 l
381.625 334.984 l
381.635 335.234 381.705 335.398 381.835 335.476  c
381.966 335.554 382.234 335.593 382.640 335.593  c
383.390 335.609 l
383.390 336.000 l
378.531 336.000 l
378.531 335.609 l
379.265 335.593 l
379.671 335.593 379.940 335.554 380.070 335.476  c
380.200 335.398 380.276 335.234 380.296 334.984  c
380.328 334.359 l
380.328 328.531 l
380.296 327.890 l
380.296 327.588 380.208 327.437 380.031 327.437  c
379.906 327.437 379.614 327.479 379.156 327.562  c
378.531 327.671 l
378.531 327.281 l
381.578 326.515 l
h
385.924 336.000 m
385.924 335.375 l
386.289 334.322 386.851 333.437 387.612 332.718  c
388.299 332.093 l
389.070 331.364 389.586 330.786 389.846 330.359  c
390.107 329.932 390.237 329.442 390.237 328.890  c
390.237 328.244 390.078 327.729 389.760 327.343  c
389.443 326.958 389.023 326.765 388.502 326.765  c
387.930 326.765 387.445 326.921 387.049 327.234  c
386.904 327.349 386.810 327.770 386.768 328.500  c
386.768 328.656 l
386.127 328.656 l
386.127 326.937 l
387.044 326.552 387.888 326.359 388.659 326.359  c
389.502 326.359 390.198 326.599 390.745 327.078  c
391.292 327.557 391.565 328.161 391.565 328.890  c
391.565 329.880 390.950 330.796 389.721 331.640  c
388.956 332.171 l
387.737 333.005 387.070 333.916 386.956 334.906  c
391.518 334.906 l
391.518 336.000 l
385.924 336.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
28.0000 108.129 m
25.4000 108.129 l
S
newpath
28.0000 166.376 m
25.4000 166.376 l
S
newpath
28.0000 224.623 m
25.4000 224.623 l
S
newpath
28.0000 282.870 m
25.4000 282.870 l
S
newpath
28.0000 311.993 m
28.0000 79.0064 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 188 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
28.0000 311.993 m
22.8000 311.993 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 322.234 m
21.9375 322.234 21.1562 321.783 20.5625 320.882  c
19.9687 319.981 19.6718 318.796 19.6718 317.328  c
19.6718 315.817 19.9687 314.614 20.5625 313.718  c
21.1562 312.822 21.9531 312.375 22.9531 312.375  c
23.9531 312.375 24.7526 312.822 25.3515 313.718  c
25.9505 314.614 26.2500 315.812 26.2500 317.312  c
26.2500 318.822 25.9505 320.020 25.3515 320.906  c
24.7526 321.791 23.9375 322.234 22.9062 322.234  c
h
22.9218 321.843 m
24.2552 321.906 24.9218 320.369 24.9218 317.234  c
24.9218 314.244 24.2656 312.750 22.9531 312.750  c
21.6510 312.750 21.0000 314.265 21.0000 317.296  c
21.0000 320.265 21.6406 321.781 22.9218 321.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
28.0000 253.746 m
22.8000 253.746 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
23.5781 254.515 m
23.5781 262.359 l
23.6250 262.984 l
23.6354 263.234 23.7057 263.398 23.8359 263.476  c
23.9661 263.554 24.2343 263.593 24.6406 263.593  c
25.3906 263.609 l
25.3906 264.000 l
20.5312 264.000 l
20.5312 263.609 l
21.2656 263.593 l
21.6718 263.593 21.9401 263.554 22.0703 263.476  c
22.2005 263.398 22.2760 263.234 22.2968 262.984  c
22.3281 262.359 l
22.3281 256.531 l
22.2968 255.890 l
22.2968 255.588 22.2083 255.437 22.0312 255.437  c
21.9062 255.437 21.6145 255.479 21.1562 255.562  c
20.5312 255.671 l
20.5312 255.281 l
23.5781 254.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
28.0000 195.499 m
22.8000 195.499 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
20.0156 206.000 m
20.0156 205.375 l
20.3802 204.322 20.9427 203.437 21.7031 202.718  c
22.3906 202.093 l
23.1614 201.364 23.6770 200.786 23.9375 200.359  c
24.1979 199.932 24.3281 199.442 24.3281 198.890  c
24.3281 198.244 24.1692 197.729 23.8515 197.343  c
23.5338 196.958 23.1145 196.765 22.5937 196.765  c
22.0208 196.765 21.5364 196.921 21.1406 197.234  c
20.9947 197.349 20.9010 197.770 20.8593 198.500  c
20.8593 198.656 l
20.2187 198.656 l
20.2187 196.937 l
21.1354 196.552 21.9791 196.359 22.7500 196.359  c
23.5937 196.359 24.2890 196.599 24.8359 197.078  c
25.3828 197.557 25.6562 198.161 25.6562 198.890  c
25.6562 199.880 25.0416 200.796 23.8125 201.640  c
23.0468 202.171 l
21.8281 203.005 21.1614 203.916 21.0468 204.906  c
25.6093 204.906 l
25.6093 206.000 l
20.0156 206.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
28.0000 137.252 m
22.8000 137.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
20.1718 147.937 m
20.1718 146.281 l
20.7968 146.281 l
20.8125 146.421 l
20.8281 146.859 l
20.8281 147.130 20.9869 147.362 21.3046 147.554  c
21.6224 147.747 22.0156 147.843 22.4843 147.843  c
23.0364 147.843 23.4817 147.625 23.8203 147.187  c
24.1588 146.750 24.3281 146.171 24.3281 145.453  c
24.3281 144.744 24.1067 144.190 23.6640 143.789  c
23.2213 143.388 22.6041 143.187 21.8125 143.187  c
21.0312 143.187 l
21.0312 142.796 l
21.4531 142.796 l
23.2239 142.796 24.1093 142.083 24.1093 140.656  c
24.1093 139.385 23.5520 138.750 22.4375 138.750  c
21.9479 138.750 21.5208 138.854 21.1562 139.062  c
21.0208 139.145 20.9270 139.484 20.8750 140.078  c
20.8750 140.171 l
20.2500 140.171 l
20.2500 138.734 l
20.9270 138.484 21.6927 138.359 22.5468 138.359  c
23.4114 138.359 24.0963 138.554 24.6015 138.945  c
25.1067 139.335 25.3593 139.864 25.3593 140.531  c
25.3593 141.645 24.7031 142.442 23.3906 142.921  c
24.1927 143.130 24.7682 143.427 25.1171 143.812  c
25.4661 144.197 25.6406 144.734 25.6406 145.421  c
25.6406 146.286 25.3593 146.971 24.7968 147.476  c
24.2343 147.981 23.4687 148.234 22.5000 148.234  c
21.6145 148.234 20.8385 148.135 20.1718 147.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
28.0000 79.0058 m
22.8000 79.0058 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
23.7031 87.3437 m
19.3906 87.3437 l
19.3906 86.7187 l
24.0937 80.4531 l
24.7968 80.4531 l
24.7968 86.3906 l
26.0468 86.3906 l
26.0468 87.3437 l
24.7968 87.3437 l
24.7968 88.3593 l
24.7968 88.8593 24.8359 89.1822 24.9140 89.3281  c
24.9921 89.4739 25.1614 89.5520 25.4218 89.5625  c
25.8593 89.5937 l
25.9687 89.6093 l
25.9687 90.0000 l
22.3750 90.0000 l
22.3750 89.6093 l
22.4843 89.5937 l
23.1406 89.5625 l
23.3697 89.5520 23.5208 89.4687 23.5937 89.3125  c
23.6666 89.1562 23.7031 88.8385 23.7031 88.3593  c
23.7031 87.3437 l
h
20.0937 86.3906 m
23.7031 86.3906 l
23.7031 81.6093 l
20.0937 86.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
