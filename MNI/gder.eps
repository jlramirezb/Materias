%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: domingo 14 de marzo de 2010 09:54:28 PM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
50.0000 2.00519 331.477 384.994 rc
newpath
51.0000 386.000 m
54.5799 364.199 l
58.1598 343.481 l
61.2747 326.299 l
64.3896 309.869 l
71.3956 275.514 l
78.4481 244.307 l
85.4670 216.315 l
91.9745 192.863 l
98.7126 170.897 l
105.681 150.449 l
112.627 132.161 l
119.772 115.335 l
126.065 102.036 l
133.150 88.6171 l
140.264 76.6492 l
147.120 66.4119 l
153.345 58.1184 l
160.748 49.3852 l
167.019 42.8597 l
174.314 36.1799 l
180.771 31.0090 l
187.855 26.0594 l
194.601 21.9827 l
201.640 18.3252 l
208.104 15.4503 l
215.076 12.8165 l
222.318 10.5415 l
228.623 8.90387 l
235.431 7.45608 l
242.465 6.27362 l
249.347 5.39102 l
256.005 4.76647 l
263.398 4.30673 l
270.041 4.07882 l
277.133 4.00518 l
283.560 4.07153 l
290.587 4.27044 l
297.198 4.56265 l
304.108 4.96212 l
310.865 5.43255 l
317.938 5.99685 l
324.751 6.59881 l
331.718 7.26358 l
338.627 7.96295 l
344.975 8.63400 l
352.252 9.42910 l
358.760 10.1579 l
365.699 10.9480 l
372.340 11.7122 l
379.477 12.5374 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
358.947 36.2953 m
358.947 38.8953 l
S
newpath
317.888 36.2953 m
317.888 38.8953 l
S
newpath
276.828 36.2953 m
276.828 38.8953 l
S
newpath
235.768 36.2953 m
235.768 38.8953 l
S
newpath
153.649 36.2953 m
153.649 38.8953 l
S
newpath
112.589 36.2953 m
112.589 38.8953 l
S
newpath
71.5298 36.2953 m
71.5298 38.8953 l
S
newpath
194.708 36.2953 m
194.708 38.8953 l
S
newpath
48.0000 36.2953 m
379.477 36.2953 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
167 59 15 15 rc
newpath
174.375 68.5000 m
173.593 66.7500 l
173.281 66.1093 l
173.166 65.8593 173.072 65.7031 173.000 65.6406  c
172.927 65.5781 172.786 65.5416 172.578 65.5312  c
172.203 65.5000 l
172.078 65.5000 l
172.156 65.1093 l
174.218 65.1093 l
175.468 67.8125 l
175.765 67.5781 l
176.588 66.9114 177.000 66.3541 177.000 65.9062  c
177.000 65.6770 176.906 65.4114 176.718 65.1093  c
177.968 65.1093 l
178.020 65.2552 178.046 65.3854 178.046 65.5000  c
178.046 65.8645 177.916 66.1953 177.656 66.4921  c
177.395 66.7890 176.822 67.2708 175.937 67.9375  c
175.625 68.1718 l
176.671 70.3593 l
177.062 71.0625 l
177.218 71.3854 177.432 71.5572 177.703 71.5781  c
178.109 71.5937 l
178.218 71.6093 l
178.140 72.0000 l
176.062 72.0000 l
174.578 68.8593 l
174.031 69.3437 l
173.166 70.1250 172.734 70.7968 172.734 71.3593  c
172.734 71.5781 172.807 71.7916 172.953 72.0000  c
171.609 72.0000 l
171.588 71.8854 171.578 71.7968 171.578 71.7343  c
171.578 71.1927 171.974 70.5729 172.765 69.8750  c
173.750 69.0468 l
174.375 68.5000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
51.0000 36.2953 m
51.0000 41.4953 l
S
Q
q
newpath
92.0596 36.2953 m
92.0596 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
91.9062 61.2343 m
90.9375 61.2343 90.1562 60.7838 89.5625 59.8828  c
88.9687 58.9817 88.6718 57.7968 88.6718 56.3281  c
88.6718 54.8177 88.9687 53.6145 89.5625 52.7187  c
90.1562 51.8229 90.9531 51.3750 91.9531 51.3750  c
92.9531 51.3750 93.7526 51.8229 94.3515 52.7187  c
94.9505 53.6145 95.2500 54.8125 95.2500 56.3125  c
95.2500 57.8229 94.9505 59.0208 94.3515 59.9062  c
93.7526 60.7916 92.9375 61.2343 91.9062 61.2343  c
h
91.9218 60.8437 m
93.2552 60.9062 93.9218 59.3697 93.9218 56.2343  c
93.9218 53.2447 93.2656 51.7500 91.9531 51.7500  c
90.6510 51.7500 90.0000 53.2656 90.0000 56.2968  c
90.0000 59.2656 90.6406 60.7812 91.9218 60.8437  c
h
97.4716 61.0000 m
96.8466 61.0000 l
96.8466 59.4375 l
98.4091 59.4375 l
98.4091 60.7968 l
98.4091 61.3385 98.3805 61.7083 98.3232 61.9062  c
98.2659 62.1041 98.1279 62.3177 97.9091 62.5468  c
97.6175 62.8489 97.2633 63.0104 96.8466 63.0312  c
96.8466 62.6406 l
97.2633 62.6093 97.4716 62.1979 97.4716 61.4062  c
97.4716 61.0000 l
h
100.527 60.9375 m
100.527 59.2812 l
101.152 59.2812 l
101.168 59.4218 l
101.184 59.8593 l
101.184 60.1302 101.342 60.3619 101.660 60.5546  c
101.978 60.7474 102.371 60.8437 102.840 60.8437  c
103.392 60.8437 103.837 60.6250 104.176 60.1875  c
104.514 59.7500 104.684 59.1718 104.684 58.4531  c
104.684 57.7447 104.462 57.1901 104.020 56.7890  c
103.577 56.3880 102.960 56.1875 102.168 56.1875  c
101.387 56.1875 l
101.387 55.7968 l
101.809 55.7968 l
103.579 55.7968 104.465 55.0833 104.465 53.6562  c
104.465 52.3854 103.908 51.7500 102.793 51.7500  c
102.303 51.7500 101.876 51.8541 101.512 52.0625  c
101.376 52.1458 101.283 52.4843 101.231 53.0781  c
101.231 53.1718 l
100.606 53.1718 l
100.606 51.7343 l
101.283 51.4843 102.048 51.3593 102.902 51.3593  c
103.767 51.3593 104.452 51.5546 104.957 51.9453  c
105.462 52.3359 105.715 52.8645 105.715 53.5312  c
105.715 54.6458 105.059 55.4427 103.746 55.9218  c
104.548 56.1302 105.124 56.4270 105.473 56.8125  c
105.822 57.1979 105.996 57.7343 105.996 58.4218  c
105.996 59.2864 105.715 59.9713 105.152 60.4765  c
104.590 60.9817 103.824 61.2343 102.856 61.2343  c
101.970 61.2343 101.194 61.1354 100.527 60.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
133.119 36.2953 m
133.119 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
132.906 61.2343 m
131.937 61.2343 131.156 60.7838 130.562 59.8828  c
129.968 58.9817 129.671 57.7968 129.671 56.3281  c
129.671 54.8177 129.968 53.6145 130.562 52.7187  c
131.156 51.8229 131.953 51.3750 132.953 51.3750  c
133.953 51.3750 134.752 51.8229 135.351 52.7187  c
135.950 53.6145 136.250 54.8125 136.250 56.3125  c
136.250 57.8229 135.950 59.0208 135.351 59.9062  c
134.752 60.7916 133.937 61.2343 132.906 61.2343  c
h
132.921 60.8437 m
134.255 60.9062 134.921 59.3697 134.921 56.2343  c
134.921 53.2447 134.265 51.7500 132.953 51.7500  c
131.651 51.7500 131.000 53.2656 131.000 56.2968  c
131.000 59.2656 131.640 60.7812 132.921 60.8437  c
h
138.471 61.0000 m
137.846 61.0000 l
137.846 59.4375 l
139.409 59.4375 l
139.409 60.7968 l
139.409 61.3385 139.380 61.7083 139.323 61.9062  c
139.266 62.1041 139.127 62.3177 138.909 62.5468  c
138.617 62.8489 138.263 63.0104 137.846 63.0312  c
137.846 62.6406 l
138.263 62.6093 138.471 62.1979 138.471 61.4062  c
138.471 61.0000 l
h
145.059 58.3437 m
140.746 58.3437 l
140.746 57.7187 l
145.449 51.4531 l
146.152 51.4531 l
146.152 57.3906 l
147.402 57.3906 l
147.402 58.3437 l
146.152 58.3437 l
146.152 59.3593 l
146.152 59.8593 146.191 60.1822 146.270 60.3281  c
146.348 60.4739 146.517 60.5520 146.777 60.5625  c
147.215 60.5937 l
147.324 60.6093 l
147.324 61.0000 l
143.731 61.0000 l
143.731 60.6093 l
143.840 60.5937 l
144.496 60.5625 l
144.725 60.5520 144.876 60.4687 144.949 60.3125  c
145.022 60.1562 145.059 59.8385 145.059 59.3593  c
145.059 58.3437 l
h
141.449 57.3906 m
145.059 57.3906 l
145.059 52.6093 l
141.449 57.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
174.179 36.2953 m
174.179 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
173.906 61.2343 m
172.937 61.2343 172.156 60.7838 171.562 59.8828  c
170.968 58.9817 170.671 57.7968 170.671 56.3281  c
170.671 54.8177 170.968 53.6145 171.562 52.7187  c
172.156 51.8229 172.953 51.3750 173.953 51.3750  c
174.953 51.3750 175.752 51.8229 176.351 52.7187  c
176.950 53.6145 177.250 54.8125 177.250 56.3125  c
177.250 57.8229 176.950 59.0208 176.351 59.9062  c
175.752 60.7916 174.937 61.2343 173.906 61.2343  c
h
173.921 60.8437 m
175.255 60.9062 175.921 59.3697 175.921 56.2343  c
175.921 53.2447 175.265 51.7500 173.953 51.7500  c
172.651 51.7500 172.000 53.2656 172.000 56.2968  c
172.000 59.2656 172.640 60.7812 173.921 60.8437  c
h
179.471 61.0000 m
178.846 61.0000 l
178.846 59.4375 l
180.409 59.4375 l
180.409 60.7968 l
180.409 61.3385 180.380 61.7083 180.323 61.9062  c
180.266 62.1041 180.127 62.3177 179.909 62.5468  c
179.617 62.8489 179.263 63.0104 178.846 63.0312  c
178.846 62.6406 l
179.263 62.6093 179.471 62.1979 179.471 61.4062  c
179.471 61.0000 l
h
182.840 61.0156 m
182.840 59.4375 l
183.465 59.4375 l
183.481 59.5781 l
183.496 60.0625 l
183.517 60.5833 183.923 60.8437 184.715 60.8437  c
185.298 60.8437 185.762 60.6145 186.106 60.1562  c
186.449 59.6979 186.621 59.0781 186.621 58.2968  c
186.621 57.4010 186.356 56.7604 185.824 56.3750  c
185.293 55.9895 184.423 55.7968 183.215 55.7968  c
182.996 55.7968 l
182.996 51.6093 l
187.731 51.6093 l
187.731 52.7031 l
183.387 52.7031 l
183.387 55.3281 l
183.965 55.3281 l
186.611 55.3281 187.934 56.3333 187.934 58.3437  c
187.934 59.2500 187.629 59.9583 187.020 60.4687  c
186.410 60.9791 185.569 61.2343 184.496 61.2343  c
183.965 61.2343 183.413 61.1614 182.840 61.0156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
215.238 36.2953 m
215.238 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
214.906 61.2343 m
213.937 61.2343 213.156 60.7838 212.562 59.8828  c
211.968 58.9817 211.671 57.7968 211.671 56.3281  c
211.671 54.8177 211.968 53.6145 212.562 52.7187  c
213.156 51.8229 213.953 51.3750 214.953 51.3750  c
215.953 51.3750 216.752 51.8229 217.351 52.7187  c
217.950 53.6145 218.250 54.8125 218.250 56.3125  c
218.250 57.8229 217.950 59.0208 217.351 59.9062  c
216.752 60.7916 215.937 61.2343 214.906 61.2343  c
h
214.921 60.8437 m
216.255 60.9062 216.921 59.3697 216.921 56.2343  c
216.921 53.2447 216.265 51.7500 214.953 51.7500  c
213.651 51.7500 213.000 53.2656 213.000 56.2968  c
213.000 59.2656 213.640 60.7812 214.921 60.8437  c
h
220.471 61.0000 m
219.846 61.0000 l
219.846 59.4375 l
221.409 59.4375 l
221.409 60.7968 l
221.409 61.3385 221.380 61.7083 221.323 61.9062  c
221.266 62.1041 221.127 62.3177 220.909 62.5468  c
220.617 62.8489 220.263 63.0104 219.846 63.0312  c
219.846 62.6406 l
220.263 62.6093 220.471 62.1979 220.471 61.4062  c
220.471 61.0000 l
h
224.465 56.1875 m
225.059 55.3750 225.814 54.9687 226.731 54.9687  c
227.553 54.9687 228.225 55.2421 228.746 55.7890  c
229.267 56.3359 229.527 57.0468 229.527 57.9218  c
229.527 58.8593 229.231 59.6458 228.637 60.2812  c
228.043 60.9166 227.314 61.2343 226.449 61.2343  c
225.387 61.2343 224.569 60.8203 223.996 59.9921  c
223.423 59.1640 223.137 57.9843 223.137 56.4531  c
223.137 54.8385 223.467 53.5859 224.129 52.6953  c
224.790 51.8046 225.725 51.3593 226.934 51.3593  c
227.715 51.3593 228.402 51.5000 228.996 51.7812  c
228.996 53.2812 l
228.371 53.2812 l
228.356 53.1562 l
228.324 52.7031 l
228.303 52.4218 228.152 52.1927 227.871 52.0156  c
227.590 51.8385 227.236 51.7500 226.809 51.7500  c
226.069 51.7500 225.494 52.1380 225.082 52.9140  c
224.671 53.6901 224.465 54.7812 224.465 56.1875  c
h
224.512 57.5312 m
224.512 58.5000 224.707 59.2916 225.098 59.9062  c
225.488 60.5208 225.991 60.8281 226.606 60.8281  c
227.710 60.8281 228.262 59.9166 228.262 58.0937  c
228.262 56.3020 227.689 55.4062 226.543 55.4062  c
225.918 55.4062 225.423 55.5989 225.059 55.9843  c
224.694 56.3697 224.512 56.8854 224.512 57.5312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
256.298 36.2953 m
256.298 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
255.906 61.2343 m
254.937 61.2343 254.156 60.7838 253.562 59.8828  c
252.968 58.9817 252.671 57.7968 252.671 56.3281  c
252.671 54.8177 252.968 53.6145 253.562 52.7187  c
254.156 51.8229 254.953 51.3750 255.953 51.3750  c
256.953 51.3750 257.752 51.8229 258.351 52.7187  c
258.950 53.6145 259.250 54.8125 259.250 56.3125  c
259.250 57.8229 258.950 59.0208 258.351 59.9062  c
257.752 60.7916 256.937 61.2343 255.906 61.2343  c
h
255.921 60.8437 m
257.255 60.9062 257.921 59.3697 257.921 56.2343  c
257.921 53.2447 257.265 51.7500 255.953 51.7500  c
254.651 51.7500 254.000 53.2656 254.000 56.2968  c
254.000 59.2656 254.640 60.7812 255.921 60.8437  c
h
261.471 61.0000 m
260.846 61.0000 l
260.846 59.4375 l
262.409 59.4375 l
262.409 60.7968 l
262.409 61.3385 262.380 61.7083 262.323 61.9062  c
262.266 62.1041 262.127 62.3177 261.909 62.5468  c
261.617 62.8489 261.263 63.0104 260.846 63.0312  c
260.846 62.6406 l
261.263 62.6093 261.471 62.1979 261.471 61.4062  c
261.471 61.0000 l
h
265.137 61.0000 m
265.324 59.9791 265.626 59.0911 266.043 58.3359  c
266.460 57.5807 267.449 56.1510 269.012 54.0468  c
269.965 52.7812 l
264.668 52.7812 l
264.668 51.6093 l
270.699 51.6093 l
270.699 52.4218 l
268.126 55.8802 266.767 58.7395 266.621 61.0000  c
265.137 61.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
297.358 36.2953 m
297.358 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
296.906 61.2343 m
295.937 61.2343 295.156 60.7838 294.562 59.8828  c
293.968 58.9817 293.671 57.7968 293.671 56.3281  c
293.671 54.8177 293.968 53.6145 294.562 52.7187  c
295.156 51.8229 295.953 51.3750 296.953 51.3750  c
297.953 51.3750 298.752 51.8229 299.351 52.7187  c
299.950 53.6145 300.250 54.8125 300.250 56.3125  c
300.250 57.8229 299.950 59.0208 299.351 59.9062  c
298.752 60.7916 297.937 61.2343 296.906 61.2343  c
h
296.921 60.8437 m
298.255 60.9062 298.921 59.3697 298.921 56.2343  c
298.921 53.2447 298.265 51.7500 296.953 51.7500  c
295.651 51.7500 295.000 53.2656 295.000 56.2968  c
295.000 59.2656 295.640 60.7812 296.921 60.8437  c
h
302.471 61.0000 m
301.846 61.0000 l
301.846 59.4375 l
303.409 59.4375 l
303.409 60.7968 l
303.409 61.3385 303.380 61.7083 303.323 61.9062  c
303.266 62.1041 303.127 62.3177 302.909 62.5468  c
302.617 62.8489 302.263 63.0104 301.846 63.0312  c
301.846 62.6406 l
302.263 62.6093 302.471 62.1979 302.471 61.4062  c
302.471 61.0000 l
h
307.074 55.9375 m
306.106 55.2708 305.621 54.5416 305.621 53.7500  c
305.621 53.0416 305.879 52.4661 306.395 52.0234  c
306.910 51.5807 307.585 51.3593 308.418 51.3593  c
309.210 51.3593 309.842 51.5468 310.316 51.9218  c
310.790 52.2968 311.027 52.7968 311.027 53.4218  c
311.027 54.3906 310.408 55.1875 309.168 55.8125  c
310.668 56.4479 311.418 57.3645 311.418 58.5625  c
311.418 59.3541 311.121 59.9974 310.527 60.4921  c
309.934 60.9869 309.168 61.2343 308.231 61.2343  c
307.314 61.2343 306.572 61.0026 306.004 60.5390  c
305.436 60.0755 305.152 59.4687 305.152 58.7187  c
305.152 57.4583 305.793 56.5312 307.074 55.9375  c
h
308.824 55.6093 m
309.564 55.0677 309.934 54.3489 309.934 53.4531  c
309.934 52.9427 309.783 52.5312 309.481 52.2187  c
309.178 51.9062 308.783 51.7500 308.293 51.7500  c
307.856 51.7500 307.483 51.9036 307.176 52.2109  c
306.869 52.5182 306.715 52.8958 306.715 53.3437  c
306.715 53.7812 306.856 54.1484 307.137 54.4453  c
307.418 54.7421 307.981 55.1302 308.824 55.6093  c
h
307.356 56.2187 m
306.720 56.8020 306.402 57.5833 306.402 58.5625  c
306.402 59.2604 306.574 59.8151 306.918 60.2265  c
307.262 60.6380 307.720 60.8437 308.293 60.8437  c
308.835 60.8437 309.283 60.6614 309.637 60.2968  c
309.991 59.9322 310.168 59.4739 310.168 58.9218  c
310.168 58.4635 310.033 58.0807 309.762 57.7734  c
309.491 57.4661 308.986 57.1093 308.246 56.7031  c
307.356 56.2187 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
338.417 36.2953 m
338.417 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
337.906 61.2343 m
336.937 61.2343 336.156 60.7838 335.562 59.8828  c
334.968 58.9817 334.671 57.7968 334.671 56.3281  c
334.671 54.8177 334.968 53.6145 335.562 52.7187  c
336.156 51.8229 336.953 51.3750 337.953 51.3750  c
338.953 51.3750 339.752 51.8229 340.351 52.7187  c
340.950 53.6145 341.250 54.8125 341.250 56.3125  c
341.250 57.8229 340.950 59.0208 340.351 59.9062  c
339.752 60.7916 338.937 61.2343 337.906 61.2343  c
h
337.921 60.8437 m
339.255 60.9062 339.921 59.3697 339.921 56.2343  c
339.921 53.2447 339.265 51.7500 337.953 51.7500  c
336.651 51.7500 336.000 53.2656 336.000 56.2968  c
336.000 59.2656 336.640 60.7812 337.921 60.8437  c
h
343.471 61.0000 m
342.846 61.0000 l
342.846 59.4375 l
344.409 59.4375 l
344.409 60.7968 l
344.409 61.3385 344.380 61.7083 344.323 61.9062  c
344.266 62.1041 344.127 62.3177 343.909 62.5468  c
343.617 62.8489 343.263 63.0104 342.846 63.0312  c
342.846 62.6406 l
343.263 62.6093 343.471 62.1979 343.471 61.4062  c
343.471 61.0000 l
h
351.152 56.4062 m
350.559 57.2291 349.803 57.6406 348.887 57.6406  c
348.064 57.6406 347.395 57.3645 346.879 56.8125  c
346.363 56.2604 346.106 55.5520 346.106 54.6875  c
346.106 53.7500 346.397 52.9609 346.981 52.3203  c
347.564 51.6796 348.293 51.3593 349.168 51.3593  c
350.231 51.3593 351.048 51.7760 351.621 52.6093  c
352.194 53.4427 352.481 54.6250 352.481 56.1562  c
352.481 57.7708 352.150 59.0208 351.488 59.9062  c
350.827 60.7916 349.897 61.2343 348.699 61.2343  c
347.918 61.2343 347.225 61.0937 346.621 60.8125  c
346.621 59.3125 l
347.246 59.3125 l
347.262 59.4531 l
347.293 59.9062 l
347.314 60.1875 347.465 60.4140 347.746 60.5859  c
348.027 60.7578 348.382 60.8437 348.809 60.8437  c
349.548 60.8437 350.124 60.4557 350.535 59.6796  c
350.947 58.9036 351.152 57.8125 351.152 56.4062  c
h
351.106 55.0625 m
351.106 54.0937 350.910 53.3020 350.520 52.6875  c
350.129 52.0729 349.626 51.7656 349.012 51.7656  c
347.908 51.7656 347.356 52.6822 347.356 54.5156  c
347.356 56.2968 347.928 57.1875 349.074 57.1875  c
349.699 57.1875 350.194 56.9947 350.559 56.6093  c
350.923 56.2239 351.106 55.7083 351.106 55.0625  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.477 36.2953 m
379.477 41.4953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
379.578 51.5156 m
379.578 59.3593 l
379.625 59.9843 l
379.635 60.2343 379.705 60.3984 379.835 60.4765  c
379.966 60.5546 380.234 60.5937 380.640 60.5937  c
381.390 60.6093 l
381.390 61.0000 l
376.531 61.0000 l
376.531 60.6093 l
377.265 60.5937 l
377.671 60.5937 377.940 60.5546 378.070 60.4765  c
378.200 60.3984 378.276 60.2343 378.296 59.9843  c
378.328 59.3593 l
378.328 53.5312 l
378.296 52.8906 l
378.296 52.5885 378.208 52.4375 378.031 52.4375  c
377.906 52.4375 377.614 52.4791 377.156 52.5625  c
376.531 52.6718 l
376.531 52.2812 l
379.578 51.5156 l
h
384.471 61.0000 m
383.846 61.0000 l
383.846 59.4375 l
385.409 59.4375 l
385.409 60.7968 l
385.409 61.3385 385.380 61.7083 385.323 61.9062  c
385.266 62.1041 385.127 62.3177 384.909 62.5468  c
384.617 62.8489 384.263 63.0104 383.846 63.0312  c
383.846 62.6406 l
384.263 62.6093 384.471 62.1979 384.471 61.4062  c
384.471 61.0000 l
h
390.262 61.2343 m
389.293 61.2343 388.512 60.7838 387.918 59.8828  c
387.324 58.9817 387.027 57.7968 387.027 56.3281  c
387.027 54.8177 387.324 53.6145 387.918 52.7187  c
388.512 51.8229 389.309 51.3750 390.309 51.3750  c
391.309 51.3750 392.108 51.8229 392.707 52.7187  c
393.306 53.6145 393.606 54.8125 393.606 56.3125  c
393.606 57.8229 393.306 59.0208 392.707 59.9062  c
392.108 60.7916 391.293 61.2343 390.262 61.2343  c
h
390.277 60.8437 m
391.611 60.9062 392.277 59.3697 392.277 56.2343  c
392.277 53.2447 391.621 51.7500 390.309 51.7500  c
389.007 51.7500 388.356 53.2656 388.356 56.2968  c
388.356 59.2656 388.996 60.7812 390.277 60.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
48.0000 66.2472 m
45.4000 66.2472 l
S
newpath
48.0000 6.34344 m
45.4000 6.34344 l
S
newpath
48.0000 186.055 m
45.4000 186.055 l
S
newpath
48.0000 126.151 m
45.4000 126.151 l
S
newpath
48.0000 245.958 m
45.4000 245.958 l
S
newpath
48.0000 365.766 m
45.4000 365.766 l
S
newpath
48.0000 305.862 m
45.4000 305.862 l
S
newpath
48.0000 386.000 m
48.0000 4.00518 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 188 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
48.0000 335.814 m
42.8000 335.814 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 335 7 13 rc
newpath
29.7968 342.437 m
21.2031 342.437 l
21.2031 341.765 l
29.7968 341.765 l
29.7968 342.437 l
h
f
Q
newpath
31.9062 346.234 m
30.9375 346.234 30.1562 345.783 29.5625 344.882  c
28.9687 343.981 28.6718 342.796 28.6718 341.328  c
28.6718 339.817 28.9687 338.614 29.5625 337.718  c
30.1562 336.822 30.9531 336.375 31.9531 336.375  c
32.9531 336.375 33.7526 336.822 34.3515 337.718  c
34.9505 338.614 35.2500 339.812 35.2500 341.312  c
35.2500 342.822 34.9505 344.020 34.3515 344.906  c
33.7526 345.791 32.9375 346.234 31.9062 346.234  c
h
31.9218 345.843 m
33.2552 345.906 33.9218 344.369 33.9218 341.234  c
33.9218 338.244 33.2656 336.750 31.9531 336.750  c
30.6510 336.750 30.0000 338.265 30.0000 341.296  c
30.0000 344.265 30.6406 345.781 31.9218 345.843  c
h
37.4716 346.000 m
36.8466 346.000 l
36.8466 344.437 l
38.4091 344.437 l
38.4091 345.796 l
38.4091 346.338 38.3805 346.708 38.3232 346.906  c
38.2659 347.104 38.1279 347.317 37.9091 347.546  c
37.6175 347.849 37.2633 348.010 36.8466 348.031  c
36.8466 347.640 l
37.2633 347.609 37.4716 347.197 37.4716 346.406  c
37.4716 346.000 l
h
40.8403 346.015 m
40.8403 344.437 l
41.4653 344.437 l
41.4809 344.578 l
41.4965 345.062 l
41.5174 345.583 41.9236 345.843 42.7153 345.843  c
43.2986 345.843 43.7622 345.614 44.1059 345.156  c
44.4497 344.697 44.6215 344.078 44.6215 343.296  c
44.6215 342.401 44.3559 341.760 43.8247 341.375  c
43.2934 340.989 42.4236 340.796 41.2153 340.796  c
40.9965 340.796 l
40.9965 336.609 l
45.7309 336.609 l
45.7309 337.703 l
41.3872 337.703 l
41.3872 340.328 l
41.9653 340.328 l
44.6111 340.328 45.9340 341.333 45.9340 343.343  c
45.9340 344.250 45.6293 344.958 45.0200 345.468  c
44.4106 345.979 43.5695 346.234 42.4965 346.234  c
41.9653 346.234 41.4132 346.161 40.8403 346.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
48.0000 275.910 m
42.8000 275.910 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 275 7 13 rc
newpath
29.7968 282.437 m
21.2031 282.437 l
21.2031 281.765 l
29.7968 281.765 l
29.7968 282.437 l
h
f
Q
newpath
31.9062 286.234 m
30.9375 286.234 30.1562 285.783 29.5625 284.882  c
28.9687 283.981 28.6718 282.796 28.6718 281.328  c
28.6718 279.817 28.9687 278.614 29.5625 277.718  c
30.1562 276.822 30.9531 276.375 31.9531 276.375  c
32.9531 276.375 33.7526 276.822 34.3515 277.718  c
34.9505 278.614 35.2500 279.812 35.2500 281.312  c
35.2500 282.822 34.9505 284.020 34.3515 284.906  c
33.7526 285.791 32.9375 286.234 31.9062 286.234  c
h
31.9218 285.843 m
33.2552 285.906 33.9218 284.369 33.9218 281.234  c
33.9218 278.244 33.2656 276.750 31.9531 276.750  c
30.6510 276.750 30.0000 278.265 30.0000 281.296  c
30.0000 284.265 30.6406 285.781 31.9218 285.843  c
h
37.4716 286.000 m
36.8466 286.000 l
36.8466 284.437 l
38.4091 284.437 l
38.4091 285.796 l
38.4091 286.338 38.3805 286.708 38.3232 286.906  c
38.2659 287.104 38.1279 287.317 37.9091 287.546  c
37.6175 287.849 37.2633 288.010 36.8466 288.031  c
36.8466 287.640 l
37.2633 287.609 37.4716 287.197 37.4716 286.406  c
37.4716 286.000 l
h
44.0590 283.343 m
39.7465 283.343 l
39.7465 282.718 l
44.4497 276.453 l
45.1528 276.453 l
45.1528 282.390 l
46.4028 282.390 l
46.4028 283.343 l
45.1528 283.343 l
45.1528 284.359 l
45.1528 284.859 45.1918 285.182 45.2700 285.328  c
45.3481 285.474 45.5174 285.552 45.7778 285.562  c
46.2153 285.593 l
46.3247 285.609 l
46.3247 286.000 l
42.7309 286.000 l
42.7309 285.609 l
42.8403 285.593 l
43.4965 285.562 l
43.7257 285.552 43.8767 285.468 43.9497 285.312  c
44.0226 285.156 44.0590 284.838 44.0590 284.359  c
44.0590 283.343 l
h
40.4497 282.390 m
44.0590 282.390 l
44.0590 277.609 l
40.4497 282.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
48.0000 216.006 m
42.8000 216.006 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 216 7 13 rc
newpath
29.7968 223.437 m
21.2031 223.437 l
21.2031 222.765 l
29.7968 222.765 l
29.7968 223.437 l
h
f
Q
newpath
31.9062 227.234 m
30.9375 227.234 30.1562 226.783 29.5625 225.882  c
28.9687 224.981 28.6718 223.796 28.6718 222.328  c
28.6718 220.817 28.9687 219.614 29.5625 218.718  c
30.1562 217.822 30.9531 217.375 31.9531 217.375  c
32.9531 217.375 33.7526 217.822 34.3515 218.718  c
34.9505 219.614 35.2500 220.812 35.2500 222.312  c
35.2500 223.822 34.9505 225.020 34.3515 225.906  c
33.7526 226.791 32.9375 227.234 31.9062 227.234  c
h
31.9218 226.843 m
33.2552 226.906 33.9218 225.369 33.9218 222.234  c
33.9218 219.244 33.2656 217.750 31.9531 217.750  c
30.6510 217.750 30.0000 219.265 30.0000 222.296  c
30.0000 225.265 30.6406 226.781 31.9218 226.843  c
h
37.4716 227.000 m
36.8466 227.000 l
36.8466 225.437 l
38.4091 225.437 l
38.4091 226.796 l
38.4091 227.338 38.3805 227.708 38.3232 227.906  c
38.2659 228.104 38.1279 228.317 37.9091 228.546  c
37.6175 228.849 37.2633 229.010 36.8466 229.031  c
36.8466 228.640 l
37.2633 228.609 37.4716 228.197 37.4716 227.406  c
37.4716 227.000 l
h
40.5278 226.937 m
40.5278 225.281 l
41.1528 225.281 l
41.1684 225.421 l
41.1840 225.859 l
41.1840 226.130 41.3429 226.362 41.6606 226.554  c
41.9783 226.747 42.3715 226.843 42.8403 226.843  c
43.3924 226.843 43.8377 226.625 44.1762 226.187  c
44.5148 225.750 44.6840 225.171 44.6840 224.453  c
44.6840 223.744 44.4627 223.190 44.0200 222.789  c
43.5773 222.388 42.9601 222.187 42.1684 222.187  c
41.3872 222.187 l
41.3872 221.796 l
41.8090 221.796 l
43.5799 221.796 44.4653 221.083 44.4653 219.656  c
44.4653 218.385 43.9080 217.750 42.7934 217.750  c
42.3038 217.750 41.8767 217.854 41.5122 218.062  c
41.3767 218.145 41.2830 218.484 41.2309 219.078  c
41.2309 219.171 l
40.6059 219.171 l
40.6059 217.734 l
41.2830 217.484 42.0486 217.359 42.9028 217.359  c
43.7674 217.359 44.4523 217.554 44.9575 217.945  c
45.4627 218.335 45.7153 218.864 45.7153 219.531  c
45.7153 220.645 45.0590 221.442 43.7465 221.921  c
44.5486 222.130 45.1241 222.427 45.4731 222.812  c
45.8221 223.197 45.9965 223.734 45.9965 224.421  c
45.9965 225.286 45.7153 225.971 45.1528 226.476  c
44.5903 226.981 43.8247 227.234 42.8559 227.234  c
41.9705 227.234 41.1945 227.135 40.5278 226.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
48.0000 156.103 m
42.8000 156.103 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 156 7 13 rc
newpath
29.7968 163.437 m
21.2031 163.437 l
21.2031 162.765 l
29.7968 162.765 l
29.7968 163.437 l
h
f
Q
newpath
31.9062 167.234 m
30.9375 167.234 30.1562 166.783 29.5625 165.882  c
28.9687 164.981 28.6718 163.796 28.6718 162.328  c
28.6718 160.817 28.9687 159.614 29.5625 158.718  c
30.1562 157.822 30.9531 157.375 31.9531 157.375  c
32.9531 157.375 33.7526 157.822 34.3515 158.718  c
34.9505 159.614 35.2500 160.812 35.2500 162.312  c
35.2500 163.822 34.9505 165.020 34.3515 165.906  c
33.7526 166.791 32.9375 167.234 31.9062 167.234  c
h
31.9218 166.843 m
33.2552 166.906 33.9218 165.369 33.9218 162.234  c
33.9218 159.244 33.2656 157.750 31.9531 157.750  c
30.6510 157.750 30.0000 159.265 30.0000 162.296  c
30.0000 165.265 30.6406 166.781 31.9218 166.843  c
h
37.4716 167.000 m
36.8466 167.000 l
36.8466 165.437 l
38.4091 165.437 l
38.4091 166.796 l
38.4091 167.338 38.3805 167.708 38.3232 167.906  c
38.2659 168.104 38.1279 168.317 37.9091 168.546  c
37.6175 168.849 37.2633 169.010 36.8466 169.031  c
36.8466 168.640 l
37.2633 168.609 37.4716 168.197 37.4716 167.406  c
37.4716 167.000 l
h
40.3715 167.000 m
40.3715 166.375 l
40.7361 165.322 41.2986 164.437 42.0590 163.718  c
42.7465 163.093 l
43.5174 162.364 44.0330 161.786 44.2934 161.359  c
44.5538 160.932 44.6840 160.442 44.6840 159.890  c
44.6840 159.244 44.5252 158.729 44.2075 158.343  c
43.8898 157.958 43.4705 157.765 42.9497 157.765  c
42.3767 157.765 41.8924 157.921 41.4965 158.234  c
41.3507 158.349 41.2570 158.770 41.2153 159.500  c
41.2153 159.656 l
40.5747 159.656 l
40.5747 157.937 l
41.4913 157.552 42.3351 157.359 43.1059 157.359  c
43.9497 157.359 44.6450 157.599 45.1918 158.078  c
45.7387 158.557 46.0122 159.161 46.0122 159.890  c
46.0122 160.880 45.3976 161.796 44.1684 162.640  c
43.4028 163.171 l
42.1840 164.005 41.5174 164.916 41.4028 165.906  c
45.9653 165.906 l
45.9653 167.000 l
40.3715 167.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
48.0000 96.1991 m
42.8000 96.1991 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 96 7 13 rc
newpath
29.7968 103.437 m
21.2031 103.437 l
21.2031 102.765 l
29.7968 102.765 l
29.7968 103.437 l
h
f
Q
newpath
31.9062 107.234 m
30.9375 107.234 30.1562 106.783 29.5625 105.882  c
28.9687 104.981 28.6718 103.796 28.6718 102.328  c
28.6718 100.817 28.9687 99.6145 29.5625 98.7187  c
30.1562 97.8229 30.9531 97.3750 31.9531 97.3750  c
32.9531 97.3750 33.7526 97.8229 34.3515 98.7187  c
34.9505 99.6145 35.2500 100.812 35.2500 102.312  c
35.2500 103.822 34.9505 105.020 34.3515 105.906  c
33.7526 106.791 32.9375 107.234 31.9062 107.234  c
h
31.9218 106.843 m
33.2552 106.906 33.9218 105.369 33.9218 102.234  c
33.9218 99.2447 33.2656 97.7500 31.9531 97.7500  c
30.6510 97.7500 30.0000 99.2656 30.0000 102.296  c
30.0000 105.265 30.6406 106.781 31.9218 106.843  c
h
37.4716 107.000 m
36.8466 107.000 l
36.8466 105.437 l
38.4091 105.437 l
38.4091 106.796 l
38.4091 107.338 38.3805 107.708 38.3232 107.906  c
38.2659 108.104 38.1279 108.317 37.9091 108.546  c
37.6175 108.849 37.2633 109.010 36.8466 109.031  c
36.8466 108.640 l
37.2633 108.609 37.4716 108.197 37.4716 107.406  c
37.4716 107.000 l
h
43.9340 97.5156 m
43.9340 105.359 l
43.9809 105.984 l
43.9913 106.234 44.0616 106.398 44.1918 106.476  c
44.3221 106.554 44.5903 106.593 44.9965 106.593  c
45.7465 106.609 l
45.7465 107.000 l
40.8872 107.000 l
40.8872 106.609 l
41.6215 106.593 l
42.0278 106.593 42.2960 106.554 42.4262 106.476  c
42.5564 106.398 42.6320 106.234 42.6528 105.984  c
42.6840 105.359 l
42.6840 99.5312 l
42.6528 98.8906 l
42.6528 98.5885 42.5642 98.4375 42.3872 98.4375  c
42.2622 98.4375 41.9705 98.4791 41.5122 98.5625  c
40.8872 98.6718 l
40.8872 98.2812 l
43.9340 97.5156 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
48.0000 36.2953 m
42.8000 36.2953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
42.9062 47.2343 m
41.9375 47.2343 41.1562 46.7838 40.5625 45.8828  c
39.9687 44.9817 39.6718 43.7968 39.6718 42.3281  c
39.6718 40.8177 39.9687 39.6145 40.5625 38.7187  c
41.1562 37.8229 41.9531 37.3750 42.9531 37.3750  c
43.9531 37.3750 44.7526 37.8229 45.3515 38.7187  c
45.9505 39.6145 46.2500 40.8125 46.2500 42.3125  c
46.2500 43.8229 45.9505 45.0208 45.3515 45.9062  c
44.7526 46.7916 43.9375 47.2343 42.9062 47.2343  c
h
42.9218 46.8437 m
44.2552 46.9062 44.9218 45.3697 44.9218 42.2343  c
44.9218 39.2447 44.2656 37.7500 42.9531 37.7500  c
41.6510 37.7500 41.0000 39.2656 41.0000 42.2968  c
41.0000 45.2656 41.6406 46.7812 42.9218 46.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
